{
  "id": "65c41c71d60e837ab882bafbd4c78f41",
  "_format": "hh-sol-build-info-1",
  "solcVersion": "0.8.14",
  "solcLongVersion": "0.8.14+commit.80d49f37",
  "input": {
    "language": "Solidity",
    "sources": {
      "contracts/TamagoSwap.sol": {
        "content": "/// SPDX-License-Identifier: MIT\npragma solidity 0.8.14;\n\n//@author Johnleouf21\n\nimport \"@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol\";\nimport \"@openzeppelin/contracts/token/ERC721/IERC721.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\ncontract TamagoSwap is Ownable, ERC721Holder {\n\n\tuint64 private _swapsCounter;\n\tuint128 private _etherLocked;\n\tuint128 public fee;\n\n\tmapping (uint64 => Swap) private _swaps;\n\n\tstruct Swap {\n\t\taddress payable initiator;\n\t\taddress[] initiatorNftAddresses;\n\t\tuint256[] initiatorNftIds;\n\t\taddress payable secondUser;\n\t\taddress[] secondUserNftAddresses;\n\t\tuint256[] secondUserNftIds;\n\t\tuint128 initiatorEtherValue;\n\t\tuint128 secondUserEtherValue;\n\t}\n\n\tevent SwapExecuted(address indexed from, address indexed to, uint64 indexed swapId);\n\tevent SwapCanceled(address indexed canceledBy, uint64 indexed swapId);\n\tevent SwapProposed(\n\t\taddress indexed from,\n\t\taddress indexed to,\n\t\tuint64 indexed swapId,\n\t\tuint128 etherValue,\n\t\taddress[] nftAddresses,\n\t\tuint256[] nftIds\n\t);\n\tevent SwapInitiated(\n\t\taddress indexed from,\n\t\taddress indexed to,\n\t\tuint64 indexed swapId,\n\t\tuint128 etherValue,\n\t\taddress[] nftAddresses,\n\t\tuint256[] nftIds\n\t);\n\tevent AppFeeChanged(\n\t\tuint128 fee\n\t);\n\n\tmodifier isApproved(address _tokenContract, uint256 _tokenId) {\n        // add Approval\n        require(\n            IERC721(_tokenContract).getApproved(_tokenId) == address(this),\n            \"!approved\"\n        );\n        _;\n    }\n\n\tmodifier onlyInitiator(uint64 swapId) {\n\t\trequire(msg.sender == _swaps[swapId].initiator,\n\t\t\t\"TamagoSwap: caller is not swap initiator\");\n\t\t_;\n\t}\n\n\tmodifier requireSameLength(address[] memory nftAddresses, uint256[] memory nftIds) {\n\t\trequire(nftAddresses.length == nftIds.length, \"TamagoSwap: NFT and ID arrays have to be same length\");\n\t\t_;\n\t}\n\n\tmodifier chargeAppFee() {\n\t\trequire(msg.value >= fee, \"TamagoSwap: Sent ETH amount needs to be more or equal application fee\");\n\t\t_;\n\t}\n\n\tconstructor(uint128 initalAppFee, address contractOwnerAddress) {\n\t\tfee = initalAppFee;\n\t\tsuper.transferOwnership(contractOwnerAddress);\n\t}\n\n\tfunction setAppFee(uint128 newFee) external onlyOwner {\n\t\tfee = newFee;\n\t\temit AppFeeChanged(newFee);\n\t}\n\n\t/**\n\t* @dev First user proposes a swap to the second user with the NFTs that he deposits and wants to trade.\n\t*      Proposed NFTs are transfered to the TamagoSwap contract and\n\t*      kept there until the swap is accepted or canceled/rejected.\n\t*\n\t* @param secondUser address of the user that the first user wants to trade NFTs with\n\t* @param nftAddresses array of NFT addressed that want to be traded\n\t* @param nftIds array of IDs belonging to NFTs that want to be traded\n\t*/\n\tfunction proposeSwap(\n\t\taddress secondUser,\n\t\taddress[] memory nftAddresses,\n\t\tuint256[] memory nftIds\n\t) external payable chargeAppFee requireSameLength(nftAddresses, nftIds) {\n\t\t_swapsCounter += 1;\n\n\t\tsafeMultipleTransfersFrom(\n\t\t\tmsg.sender,\n\t\t\taddress(this),\n\t\t\tnftAddresses,\n\t\t\tnftIds\n\t\t);\n\n\t\tSwap storage swap = _swaps[_swapsCounter];\n\t\tswap.initiator = payable(msg.sender);\n\t\tswap.initiatorNftAddresses = nftAddresses;\n\t\tswap.initiatorNftIds = nftIds;\n\n\t\tuint128 _fee = fee;\n\n\t\tif (msg.value > _fee) {\n\t\t\tswap.initiatorEtherValue = uint128(msg.value) - _fee;\n\t\t\t_etherLocked += swap.initiatorEtherValue;\n\t\t}\n\t\tswap.secondUser = payable(secondUser);\n\n\t\temit SwapProposed(\n\t\t\tmsg.sender,\n\t\t\tsecondUser,\n\t\t\t_swapsCounter,\n\t\t\tswap.initiatorEtherValue,\n\t\t\tnftAddresses,\n\t\t\tnftIds\n\t\t);\n\t}\n\n\t/**\n\t* @dev Second user accepts the swap (with proposed NFTs) from swap initiator and\n\t*      deposits his NFTs into the TamagoSwap contract.\n\t*      Callable only by second user that is invited by swap initiator.\n\t*\n\t* @param swapId ID of the swap that the second user is invited to participate in\n\t* @param nftAddresses array of NFT addressed that want to be traded\n\t* @param nftIds array of IDs belonging to NFTs that want to be traded\n\t*/\n\tfunction initiateSwap(\n\t\tuint64 swapId,\n\t\taddress[] memory nftAddresses,\n\t\tuint256[] memory nftIds\n\t) external payable chargeAppFee requireSameLength(nftAddresses, nftIds) {\n\t\trequire(_swaps[swapId].secondUser == msg.sender, \"TamagoSwap: caller is not swap participator\");\n\t\trequire(\n\t\t\t_swaps[swapId].secondUserEtherValue == 0 &&\n\t\t\t( _swaps[swapId].secondUserNftAddresses.length == 0 &&\n\t\t\t_swaps[swapId].secondUserNftIds.length == 0), \"TamagoSwap: swap already initiated\"\n\t\t);\n\n\t\tsafeMultipleTransfersFrom(\n\t\t\tmsg.sender,\n\t\t\taddress(this),\n\t\t\tnftAddresses,\n\t\t\tnftIds\n\t\t);\n\n\t\t_swaps[swapId].secondUserNftAddresses = nftAddresses;\n\t\t_swaps[swapId].secondUserNftIds = nftIds;\n\n\t\tuint128 _fee = fee;\n\n\t\tif (msg.value > _fee) {\n\t\t\t_swaps[swapId].secondUserEtherValue = uint128(msg.value) - _fee;\n\t\t\t_etherLocked += _swaps[swapId].secondUserEtherValue;\n\t\t}\n\n\t\temit SwapInitiated(\n\t\t\tmsg.sender,\n\t\t\t_swaps[swapId].initiator,\n\t\t\tswapId,\n\t\t\t_swaps[swapId].secondUserEtherValue,\n\t\t\tnftAddresses,\n\t\t\tnftIds\n\t\t);\n\t}\n\n\t/**\n\t* @dev Swap initiator accepts the swap (NFTs proposed by the second user).\n\t*      Executeds the swap - transfers NFTs from TamagoSwap to the participating users.\n\t*      Callable only by swap initiator.\n\t*\n\t* @param swapId ID of the swap that the initator wants to execute\n\t*/\n\tfunction acceptSwap(uint64 swapId) external onlyInitiator(swapId) {\n\t\trequire(\n\t\t\t(_swaps[swapId].secondUserNftAddresses.length != 0 || _swaps[swapId].secondUserEtherValue > 0) &&\n\t\t\t(_swaps[swapId].initiatorNftAddresses.length != 0 || _swaps[swapId].initiatorEtherValue > 0),\n\t\t\t\"TamagoSwap: Can't accept swap, both participants didn't add NFTs\"\n\t\t);\n\n\t\t// transfer NFTs from escrow to initiator\n\t\tsafeMultipleTransfersFrom(\n\t\t\taddress(this),\n\t\t\t_swaps[swapId].initiator,\n\t\t\t_swaps[swapId].secondUserNftAddresses,\n\t\t\t_swaps[swapId].secondUserNftIds\n\t\t);\n\n\t\t// transfer NFTs from escrow to second user\n\t\tsafeMultipleTransfersFrom(\n\t\t\taddress(this),\n\t\t\t_swaps[swapId].secondUser,\n\t\t\t_swaps[swapId].initiatorNftAddresses,\n\t\t\t_swaps[swapId].initiatorNftIds\n\t\t);\n\n\t\tif (_swaps[swapId].initiatorEtherValue != 0) {\n\t\t\t_etherLocked -= _swaps[swapId].initiatorEtherValue;\n\t\t\tuint128 amountToTransfer = _swaps[swapId].initiatorEtherValue;\n\t\t\t_swaps[swapId].initiatorEtherValue = 0;\n\t\t\t_swaps[swapId].secondUser.transfer(amountToTransfer);\n\t\t}\n\t\tif (_swaps[swapId].secondUserEtherValue != 0) {\n\t\t\t_etherLocked -= _swaps[swapId].secondUserEtherValue;\n\t\t\tuint128 amountToTransfer = _swaps[swapId].secondUserEtherValue;\n\t\t\t_swaps[swapId].secondUserEtherValue = 0;\n\t\t\t_swaps[swapId].initiator.transfer(amountToTransfer);\n\t\t}\n\n\t\temit SwapExecuted(_swaps[swapId].initiator, _swaps[swapId].secondUser, swapId);\n\n\t\tdelete _swaps[swapId];\n\t}\n\n\t/**\n\t* @dev Returns NFTs from TamagoSwap to swap initator.\n\t*      Callable only if second user hasn't yet added NFTs.\n\t*\n\t* @param swapId ID of the swap that the swap participants want to cancel\n\t*/\n\tfunction cancelSwap(uint64 swapId) external {\n\t\trequire(\n\t\t\t_swaps[swapId].initiator == msg.sender || _swaps[swapId].secondUser == msg.sender,\n\t\t\t\"TamagoSwap: Can't cancel swap, must be swap participant\"\n\t\t);\n\t\t// return initiator NFTs\n\t\tsafeMultipleTransfersFrom(\n\t\t\taddress(this),\n\t\t\t_swaps[swapId].initiator,\n\t\t\t_swaps[swapId].initiatorNftAddresses,\n\t\t\t_swaps[swapId].initiatorNftIds\n\t\t);\n\n\t\tif(_swaps[swapId].secondUserNftAddresses.length != 0) {\n\t\t\t// return second user NFTs\n\t\t\tsafeMultipleTransfersFrom(\n\t\t\t\taddress(this),\n\t\t\t\t_swaps[swapId].secondUser,\n\t\t\t\t_swaps[swapId].secondUserNftAddresses,\n\t\t\t\t_swaps[swapId].secondUserNftIds\n\t\t\t);\n\t\t}\n\n\t\tif (_swaps[swapId].initiatorEtherValue != 0) {\n\t\t\t_etherLocked -= _swaps[swapId].initiatorEtherValue;\n\t\t\tuint128 amountToTransfer = _swaps[swapId].initiatorEtherValue;\n\t\t\t_swaps[swapId].initiatorEtherValue = 0;\n\t\t\t_swaps[swapId].initiator.transfer(amountToTransfer);\n\t\t}\n\t\tif (_swaps[swapId].secondUserEtherValue != 0) {\n\t\t\t_etherLocked -= _swaps[swapId].secondUserEtherValue;\n\t\t\tuint128 amountToTransfer = _swaps[swapId].secondUserEtherValue;\n\t\t\t_swaps[swapId].secondUserEtherValue = 0;\n\t\t\t_swaps[swapId].secondUser.transfer(amountToTransfer);\n\t\t}\n\n\t\temit SwapCanceled(msg.sender, swapId);\n\n\t\tdelete _swaps[swapId];\n\t}\n\n\tfunction safeMultipleTransfersFrom(\n\t\taddress from,\n\t\taddress to,\n\t\taddress[] memory nftAddresses,\n\t\tuint256[] memory nftIds\n\t) internal virtual {\n\t\tfor (uint256 i=0; i < nftIds.length; i++){\n\t\t\tsafeTransferFrom(from, to, nftAddresses[i], nftIds[i], \"\");\n\t\t}\n\t}\n\n\tfunction safeTransferFrom(\n\t\taddress from,\n\t\taddress to,\n\t\taddress tokenAddress,\n\t\tuint256 tokenId,\n\t\tbytes memory _data\n\t) internal virtual {\n\t\t\tIERC721(tokenAddress).safeTransferFrom(from, to, tokenId, _data);\n\t\t} \n\t\t\n\t\n\n\tfunction withdrawEther(address payable recipient) external onlyOwner {\n\t\trequire(recipient != address(0), \"SwapKiwi: transfer to the zero address\");\n\n\t\trecipient.transfer((address(this).balance - _etherLocked));\n\t}\n}"
      },
      "@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/utils/ERC721Holder.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC721Receiver.sol\";\n\n/**\n * @dev Implementation of the {IERC721Receiver} interface.\n *\n * Accepts all token transfers.\n * Make sure the contract is able to use its token with {IERC721-safeTransferFrom}, {IERC721-approve} or {IERC721-setApprovalForAll}.\n */\ncontract ERC721Holder is IERC721Receiver {\n    /**\n     * @dev See {IERC721Receiver-onERC721Received}.\n     *\n     * Always returns `IERC721Receiver.onERC721Received.selector`.\n     */\n    function onERC721Received(\n        address,\n        address,\n        uint256,\n        bytes memory\n    ) public virtual override returns (bytes4) {\n        return this.onERC721Received.selector;\n    }\n}\n"
      },
      "@openzeppelin/contracts/token/ERC721/IERC721.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes calldata data\n    ) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the caller.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool _approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n}\n"
      },
      "@openzeppelin/contracts/access/Ownable.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n        _;\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
      },
      "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC721/IERC721Receiver.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @title ERC721 token receiver interface\n * @dev Interface for any contract that wants to support safeTransfers\n * from ERC721 asset contracts.\n */\ninterface IERC721Receiver {\n    /**\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n     * by `operator` from `from`, this function is called.\n     *\n     * It must return its Solidity selector to confirm the token transfer.\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\n     *\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\n     */\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"
      },
      "@openzeppelin/contracts/utils/introspection/IERC165.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
      },
      "@openzeppelin/contracts/utils/Context.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
      }
    },
    "settings": {
      "optimizer": {
        "enabled": false,
        "runs": 200
      },
      "outputSelection": {
        "*": {
          "*": [
            "abi",
            "evm.bytecode",
            "evm.deployedBytecode",
            "evm.methodIdentifiers",
            "metadata"
          ],
          "": [
            "ast"
          ]
        }
      }
    }
  },
  "output": {
    "contracts": {
      "@openzeppelin/contracts/access/Ownable.sol": {
        "Ownable": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "previousOwner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "OwnershipTransferred",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "owner",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "renounceOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "transferOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "owner()": "8da5cb5b",
              "renounceOwnership()": "715018a6",
              "transferOwnership(address)": "f2fde38b"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.14+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}"
        }
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "IERC20": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Approval",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Transfer",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "allowance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalSupply",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "transfer",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "allowance(address,address)": "dd62ed3e",
              "approve(address,uint256)": "095ea7b3",
              "balanceOf(address)": "70a08231",
              "totalSupply()": "18160ddd",
              "transfer(address,uint256)": "a9059cbb",
              "transferFrom(address,address,uint256)": "23b872dd"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.14+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]}},\"version\":1}"
        }
      },
      "@openzeppelin/contracts/token/ERC721/IERC721.sol": {
        "IERC721": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "approved",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "name": "Approval",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "bool",
                  "name": "approved",
                  "type": "bool"
                }
              ],
              "name": "ApprovalForAll",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "name": "Transfer",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "balance",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "name": "getApproved",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                }
              ],
              "name": "isApprovedForAll",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "name": "ownerOf",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "name": "safeTransferFrom",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ],
              "name": "safeTransferFrom",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "_approved",
                  "type": "bool"
                }
              ],
              "name": "setApprovalForAll",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes4",
                  "name": "interfaceId",
                  "type": "bytes4"
                }
              ],
              "name": "supportsInterface",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "approve(address,uint256)": "095ea7b3",
              "balanceOf(address)": "70a08231",
              "getApproved(uint256)": "081812fc",
              "isApprovedForAll(address,address)": "e985e9c5",
              "ownerOf(uint256)": "6352211e",
              "safeTransferFrom(address,address,uint256)": "42842e0e",
              "safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
              "setApprovalForAll(address,bool)": "a22cb465",
              "supportsInterface(bytes4)": "01ffc9a7",
              "transferFrom(address,address,uint256)": "23b872dd"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.14+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x0d4de01fe5360c38b4ad2b0822a12722958428f5138a7ff47c1720eb6fa52bba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://77724cecdfba8814632ab58737c2b0f2d4ad2d532bc614aee559b5593c1152f0\",\"dweb:/ipfs/QmUcE6gXyv7CQh4sUdcDABYKGTovTe1zLMZSEq95nkc3ph\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}"
        }
      },
      "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
        "IERC721Receiver": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ],
              "name": "onERC721Received",
              "outputs": [
                {
                  "internalType": "bytes4",
                  "name": "",
                  "type": "bytes4"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "onERC721Received(address,address,uint256,bytes)": "150b7a02"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.14+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\"}},\"title\":\"ERC721 token receiver interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":\"IERC721Receiver\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]}},\"version\":1}"
        }
      },
      "@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol": {
        "ERC721Holder": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "",
                  "type": "bytes"
                }
              ],
              "name": "onERC721Received",
              "outputs": [
                {
                  "internalType": "bytes4",
                  "name": "",
                  "type": "bytes4"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "608060405234801561001057600080fd5b50610371806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063150b7a0214610030575b600080fd5b61004a60048036038101906100459190610262565b610060565b6040516100579190610320565b60405180910390f35b600063150b7a0260e01b9050949350505050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100b382610088565b9050919050565b6100c3816100a8565b81146100ce57600080fd5b50565b6000813590506100e0816100ba565b92915050565b6000819050919050565b6100f9816100e6565b811461010457600080fd5b50565b600081359050610116816100f0565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61016f82610126565b810181811067ffffffffffffffff8211171561018e5761018d610137565b5b80604052505050565b60006101a1610074565b90506101ad8282610166565b919050565b600067ffffffffffffffff8211156101cd576101cc610137565b5b6101d682610126565b9050602081019050919050565b82818337600083830152505050565b6000610205610200846101b2565b610197565b90508281526020810184848401111561022157610220610121565b5b61022c8482856101e3565b509392505050565b600082601f8301126102495761024861011c565b5b81356102598482602086016101f2565b91505092915050565b6000806000806080858703121561027c5761027b61007e565b5b600061028a878288016100d1565b945050602061029b878288016100d1565b93505060406102ac87828801610107565b925050606085013567ffffffffffffffff8111156102cd576102cc610083565b5b6102d987828801610234565b91505092959194509250565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61031a816102e5565b82525050565b60006020820190506103356000830184610311565b9291505056fea264697066735822122055d472e0f401bdb5ef60a0f76ffdd2b6164d5b6793ce83e248e545f4eee0a0fc64736f6c634300080e0033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x371 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x150B7A02 EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x45 SWAP2 SWAP1 PUSH2 0x262 JUMP JUMPDEST PUSH2 0x60 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x57 SWAP2 SWAP1 PUSH2 0x320 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH4 0x150B7A02 PUSH1 0xE0 SHL SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB3 DUP3 PUSH2 0x88 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC3 DUP2 PUSH2 0xA8 JUMP JUMPDEST DUP2 EQ PUSH2 0xCE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xE0 DUP2 PUSH2 0xBA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF9 DUP2 PUSH2 0xE6 JUMP JUMPDEST DUP2 EQ PUSH2 0x104 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x116 DUP2 PUSH2 0xF0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x16F DUP3 PUSH2 0x126 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x18E JUMPI PUSH2 0x18D PUSH2 0x137 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A1 PUSH2 0x74 JUMP JUMPDEST SWAP1 POP PUSH2 0x1AD DUP3 DUP3 PUSH2 0x166 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1CD JUMPI PUSH2 0x1CC PUSH2 0x137 JUMP JUMPDEST JUMPDEST PUSH2 0x1D6 DUP3 PUSH2 0x126 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x205 PUSH2 0x200 DUP5 PUSH2 0x1B2 JUMP JUMPDEST PUSH2 0x197 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x221 JUMPI PUSH2 0x220 PUSH2 0x121 JUMP JUMPDEST JUMPDEST PUSH2 0x22C DUP5 DUP3 DUP6 PUSH2 0x1E3 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x249 JUMPI PUSH2 0x248 PUSH2 0x11C JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x259 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1F2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x27C JUMPI PUSH2 0x27B PUSH2 0x7E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x28A DUP8 DUP3 DUP9 ADD PUSH2 0xD1 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x29B DUP8 DUP3 DUP9 ADD PUSH2 0xD1 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x2AC DUP8 DUP3 DUP9 ADD PUSH2 0x107 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2CD JUMPI PUSH2 0x2CC PUSH2 0x83 JUMP JUMPDEST JUMPDEST PUSH2 0x2D9 DUP8 DUP3 DUP9 ADD PUSH2 0x234 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x31A DUP2 PUSH2 0x2E5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x335 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x311 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SSTORE 0xD4 PUSH19 0xE0F401BDB5EF60A0F76FFDD2B6164D5B6793CE DUP4 0xE2 BASEFEE 0xE5 GASLIMIT DELEGATECALL 0xEE 0xE0 LOG0 0xFC PUSH5 0x736F6C6343 STOP ADDMOD 0xE STOP CALLER ",
              "sourceMap": "399:391:4:-:0;;;;;;;;;;;;;;;;;;;"
            },
            "deployedBytecode": {
              "functionDebugData": {
                "@onERC721Received_342": {
                  "entryPoint": 96,
                  "id": 342,
                  "parameterSlots": 4,
                  "returnSlots": 1
                },
                "abi_decode_available_length_t_bytes_memory_ptr": {
                  "entryPoint": 498,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 1
                },
                "abi_decode_t_address": {
                  "entryPoint": 209,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_t_bytes_memory_ptr": {
                  "entryPoint": 564,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_t_uint256": {
                  "entryPoint": 263,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr": {
                  "entryPoint": 610,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 4
                },
                "abi_encode_t_bytes4_to_t_bytes4_fromStack": {
                  "entryPoint": 785,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed": {
                  "entryPoint": 800,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "allocate_memory": {
                  "entryPoint": 407,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "allocate_unbounded": {
                  "entryPoint": 116,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "array_allocation_size_t_bytes_memory_ptr": {
                  "entryPoint": 434,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_t_address": {
                  "entryPoint": 168,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_t_bytes4": {
                  "entryPoint": 741,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_t_uint160": {
                  "entryPoint": 136,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_t_uint256": {
                  "entryPoint": 230,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "copy_calldata_to_memory": {
                  "entryPoint": 483,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 0
                },
                "finalize_allocation": {
                  "entryPoint": 358,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "panic_error_0x41": {
                  "entryPoint": 311,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
                  "entryPoint": 284,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
                  "entryPoint": 289,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
                  "entryPoint": 131,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
                  "entryPoint": 126,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "round_up_to_mul_of_32": {
                  "entryPoint": 294,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "validator_revert_t_address": {
                  "entryPoint": 186,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "validator_revert_t_uint256": {
                  "entryPoint": 240,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                }
              },
              "generatedSources": [
                {
                  "ast": {
                    "nodeType": "YulBlock",
                    "src": "0:4851:8",
                    "statements": [
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "47:35:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "57:19:8",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "73:2:8",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "67:5:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "67:9:8"
                              },
                              "variableNames": [
                                {
                                  "name": "memPtr",
                                  "nodeType": "YulIdentifier",
                                  "src": "57:6:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "allocate_unbounded",
                        "nodeType": "YulFunctionDefinition",
                        "returnVariables": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulTypedName",
                            "src": "40:6:8",
                            "type": ""
                          }
                        ],
                        "src": "7:75:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "177:28:8",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "194:1:8",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "197:1:8",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "187:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "187:12:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "187:12:8"
                            }
                          ]
                        },
                        "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                        "nodeType": "YulFunctionDefinition",
                        "src": "88:117:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "300:28:8",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "317:1:8",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "320:1:8",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "310:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "310:12:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "310:12:8"
                            }
                          ]
                        },
                        "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
                        "nodeType": "YulFunctionDefinition",
                        "src": "211:117:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "379:81:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "389:65:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "404:5:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "411:42:8",
                                    "type": "",
                                    "value": "0xffffffffffffffffffffffffffffffffffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "400:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "400:54:8"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nodeType": "YulIdentifier",
                                  "src": "389:7:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "cleanup_t_uint160",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "361:5:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulTypedName",
                            "src": "371:7:8",
                            "type": ""
                          }
                        ],
                        "src": "334:126:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "511:51:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "521:35:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "550:5:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_uint160",
                                  "nodeType": "YulIdentifier",
                                  "src": "532:17:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "532:24:8"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nodeType": "YulIdentifier",
                                  "src": "521:7:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "cleanup_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "493:5:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulTypedName",
                            "src": "503:7:8",
                            "type": ""
                          }
                        ],
                        "src": "466:96:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "611:79:8",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "668:16:8",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "677:1:8",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "680:1:8",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "670:6:8"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "670:12:8"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "670:12:8"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "634:5:8"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "659:5:8"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "cleanup_t_address",
                                          "nodeType": "YulIdentifier",
                                          "src": "641:17:8"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "641:24:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "631:2:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "631:35:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "624:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "624:43:8"
                              },
                              "nodeType": "YulIf",
                              "src": "621:63:8"
                            }
                          ]
                        },
                        "name": "validator_revert_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "604:5:8",
                            "type": ""
                          }
                        ],
                        "src": "568:122:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "748:87:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "758:29:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "780:6:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "767:12:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "767:20:8"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "758:5:8"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "823:5:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_t_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "796:26:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "796:33:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "796:33:8"
                            }
                          ]
                        },
                        "name": "abi_decode_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "726:6:8",
                            "type": ""
                          },
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "734:3:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "742:5:8",
                            "type": ""
                          }
                        ],
                        "src": "696:139:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "886:32:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "896:16:8",
                              "value": {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "907:5:8"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nodeType": "YulIdentifier",
                                  "src": "896:7:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "cleanup_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "868:5:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulTypedName",
                            "src": "878:7:8",
                            "type": ""
                          }
                        ],
                        "src": "841:77:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "967:79:8",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1024:16:8",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1033:1:8",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1036:1:8",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "1026:6:8"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1026:12:8"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1026:12:8"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "990:5:8"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "1015:5:8"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "cleanup_t_uint256",
                                          "nodeType": "YulIdentifier",
                                          "src": "997:17:8"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "997:24:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "987:2:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "987:35:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "980:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "980:43:8"
                              },
                              "nodeType": "YulIf",
                              "src": "977:63:8"
                            }
                          ]
                        },
                        "name": "validator_revert_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "960:5:8",
                            "type": ""
                          }
                        ],
                        "src": "924:122:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1104:87:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "1114:29:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "1136:6:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "1123:12:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1123:20:8"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "1114:5:8"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "1179:5:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_t_uint256",
                                  "nodeType": "YulIdentifier",
                                  "src": "1152:26:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1152:33:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1152:33:8"
                            }
                          ]
                        },
                        "name": "abi_decode_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "1082:6:8",
                            "type": ""
                          },
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "1090:3:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "1098:5:8",
                            "type": ""
                          }
                        ],
                        "src": "1052:139:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1286:28:8",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1303:1:8",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1306:1:8",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "1296:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1296:12:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1296:12:8"
                            }
                          ]
                        },
                        "name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
                        "nodeType": "YulFunctionDefinition",
                        "src": "1197:117:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1409:28:8",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1426:1:8",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1429:1:8",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "1419:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1419:12:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1419:12:8"
                            }
                          ]
                        },
                        "name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
                        "nodeType": "YulFunctionDefinition",
                        "src": "1320:117:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1491:54:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "1501:38:8",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "1519:5:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1526:2:8",
                                        "type": "",
                                        "value": "31"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1515:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1515:14:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1535:2:8",
                                        "type": "",
                                        "value": "31"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "not",
                                      "nodeType": "YulIdentifier",
                                      "src": "1531:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1531:7:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "1511:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1511:28:8"
                              },
                              "variableNames": [
                                {
                                  "name": "result",
                                  "nodeType": "YulIdentifier",
                                  "src": "1501:6:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "round_up_to_mul_of_32",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "1474:5:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "result",
                            "nodeType": "YulTypedName",
                            "src": "1484:6:8",
                            "type": ""
                          }
                        ],
                        "src": "1443:102:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1579:152:8",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1596:1:8",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1599:77:8",
                                    "type": "",
                                    "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1589:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1589:88:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1589:88:8"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1693:1:8",
                                    "type": "",
                                    "value": "4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1696:4:8",
                                    "type": "",
                                    "value": "0x41"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1686:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1686:15:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1686:15:8"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1717:1:8",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1720:4:8",
                                    "type": "",
                                    "value": "0x24"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "1710:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1710:15:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1710:15:8"
                            }
                          ]
                        },
                        "name": "panic_error_0x41",
                        "nodeType": "YulFunctionDefinition",
                        "src": "1551:180:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1780:238:8",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "1790:58:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "memPtr",
                                    "nodeType": "YulIdentifier",
                                    "src": "1812:6:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "size",
                                        "nodeType": "YulIdentifier",
                                        "src": "1842:4:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "round_up_to_mul_of_32",
                                      "nodeType": "YulIdentifier",
                                      "src": "1820:21:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1820:27:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "1808:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1808:40:8"
                              },
                              "variables": [
                                {
                                  "name": "newFreePtr",
                                  "nodeType": "YulTypedName",
                                  "src": "1794:10:8",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1959:22:8",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x41",
                                        "nodeType": "YulIdentifier",
                                        "src": "1961:16:8"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1961:18:8"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1961:18:8"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "newFreePtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "1902:10:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1914:18:8",
                                        "type": "",
                                        "value": "0xffffffffffffffff"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "gt",
                                      "nodeType": "YulIdentifier",
                                      "src": "1899:2:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1899:34:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "newFreePtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "1938:10:8"
                                      },
                                      {
                                        "name": "memPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "1950:6:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "lt",
                                      "nodeType": "YulIdentifier",
                                      "src": "1935:2:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1935:22:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "or",
                                  "nodeType": "YulIdentifier",
                                  "src": "1896:2:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1896:62:8"
                              },
                              "nodeType": "YulIf",
                              "src": "1893:88:8"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1997:2:8",
                                    "type": "",
                                    "value": "64"
                                  },
                                  {
                                    "name": "newFreePtr",
                                    "nodeType": "YulIdentifier",
                                    "src": "2001:10:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1990:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1990:22:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1990:22:8"
                            }
                          ]
                        },
                        "name": "finalize_allocation",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulTypedName",
                            "src": "1766:6:8",
                            "type": ""
                          },
                          {
                            "name": "size",
                            "nodeType": "YulTypedName",
                            "src": "1774:4:8",
                            "type": ""
                          }
                        ],
                        "src": "1737:281:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2065:88:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "2075:30:8",
                              "value": {
                                "arguments": [],
                                "functionName": {
                                  "name": "allocate_unbounded",
                                  "nodeType": "YulIdentifier",
                                  "src": "2085:18:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2085:20:8"
                              },
                              "variableNames": [
                                {
                                  "name": "memPtr",
                                  "nodeType": "YulIdentifier",
                                  "src": "2075:6:8"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "memPtr",
                                    "nodeType": "YulIdentifier",
                                    "src": "2134:6:8"
                                  },
                                  {
                                    "name": "size",
                                    "nodeType": "YulIdentifier",
                                    "src": "2142:4:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "finalize_allocation",
                                  "nodeType": "YulIdentifier",
                                  "src": "2114:19:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2114:33:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2114:33:8"
                            }
                          ]
                        },
                        "name": "allocate_memory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "size",
                            "nodeType": "YulTypedName",
                            "src": "2049:4:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulTypedName",
                            "src": "2058:6:8",
                            "type": ""
                          }
                        ],
                        "src": "2024:129:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2225:241:8",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "2330:22:8",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x41",
                                        "nodeType": "YulIdentifier",
                                        "src": "2332:16:8"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2332:18:8"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "2332:18:8"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "2302:6:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2310:18:8",
                                    "type": "",
                                    "value": "0xffffffffffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "2299:2:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2299:30:8"
                              },
                              "nodeType": "YulIf",
                              "src": "2296:56:8"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "2362:37:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "2392:6:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "round_up_to_mul_of_32",
                                  "nodeType": "YulIdentifier",
                                  "src": "2370:21:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2370:29:8"
                              },
                              "variableNames": [
                                {
                                  "name": "size",
                                  "nodeType": "YulIdentifier",
                                  "src": "2362:4:8"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "2436:23:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "size",
                                    "nodeType": "YulIdentifier",
                                    "src": "2448:4:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2454:4:8",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "2444:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2444:15:8"
                              },
                              "variableNames": [
                                {
                                  "name": "size",
                                  "nodeType": "YulIdentifier",
                                  "src": "2436:4:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "array_allocation_size_t_bytes_memory_ptr",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "length",
                            "nodeType": "YulTypedName",
                            "src": "2209:6:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "size",
                            "nodeType": "YulTypedName",
                            "src": "2220:4:8",
                            "type": ""
                          }
                        ],
                        "src": "2159:307:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2523:103:8",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "dst",
                                    "nodeType": "YulIdentifier",
                                    "src": "2546:3:8"
                                  },
                                  {
                                    "name": "src",
                                    "nodeType": "YulIdentifier",
                                    "src": "2551:3:8"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "2556:6:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldatacopy",
                                  "nodeType": "YulIdentifier",
                                  "src": "2533:12:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2533:30:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2533:30:8"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dst",
                                        "nodeType": "YulIdentifier",
                                        "src": "2604:3:8"
                                      },
                                      {
                                        "name": "length",
                                        "nodeType": "YulIdentifier",
                                        "src": "2609:6:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "2600:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2600:16:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2618:1:8",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "2593:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2593:27:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2593:27:8"
                            }
                          ]
                        },
                        "name": "copy_calldata_to_memory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "src",
                            "nodeType": "YulTypedName",
                            "src": "2505:3:8",
                            "type": ""
                          },
                          {
                            "name": "dst",
                            "nodeType": "YulTypedName",
                            "src": "2510:3:8",
                            "type": ""
                          },
                          {
                            "name": "length",
                            "nodeType": "YulTypedName",
                            "src": "2515:6:8",
                            "type": ""
                          }
                        ],
                        "src": "2472:154:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2715:327:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "2725:74:8",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "length",
                                        "nodeType": "YulIdentifier",
                                        "src": "2791:6:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "array_allocation_size_t_bytes_memory_ptr",
                                      "nodeType": "YulIdentifier",
                                      "src": "2750:40:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2750:48:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "allocate_memory",
                                  "nodeType": "YulIdentifier",
                                  "src": "2734:15:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2734:65:8"
                              },
                              "variableNames": [
                                {
                                  "name": "array",
                                  "nodeType": "YulIdentifier",
                                  "src": "2725:5:8"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "array",
                                    "nodeType": "YulIdentifier",
                                    "src": "2815:5:8"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "2822:6:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "2808:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2808:21:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2808:21:8"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "2838:27:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "array",
                                    "nodeType": "YulIdentifier",
                                    "src": "2853:5:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2860:4:8",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "2849:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2849:16:8"
                              },
                              "variables": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulTypedName",
                                  "src": "2842:3:8",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "2903:83:8",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
                                        "nodeType": "YulIdentifier",
                                        "src": "2905:77:8"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2905:79:8"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "2905:79:8"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "src",
                                        "nodeType": "YulIdentifier",
                                        "src": "2884:3:8"
                                      },
                                      {
                                        "name": "length",
                                        "nodeType": "YulIdentifier",
                                        "src": "2889:6:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "2880:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2880:16:8"
                                  },
                                  {
                                    "name": "end",
                                    "nodeType": "YulIdentifier",
                                    "src": "2898:3:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "2877:2:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2877:25:8"
                              },
                              "nodeType": "YulIf",
                              "src": "2874:112:8"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "src",
                                    "nodeType": "YulIdentifier",
                                    "src": "3019:3:8"
                                  },
                                  {
                                    "name": "dst",
                                    "nodeType": "YulIdentifier",
                                    "src": "3024:3:8"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "3029:6:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "copy_calldata_to_memory",
                                  "nodeType": "YulIdentifier",
                                  "src": "2995:23:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2995:41:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2995:41:8"
                            }
                          ]
                        },
                        "name": "abi_decode_available_length_t_bytes_memory_ptr",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "src",
                            "nodeType": "YulTypedName",
                            "src": "2688:3:8",
                            "type": ""
                          },
                          {
                            "name": "length",
                            "nodeType": "YulTypedName",
                            "src": "2693:6:8",
                            "type": ""
                          },
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "2701:3:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "array",
                            "nodeType": "YulTypedName",
                            "src": "2709:5:8",
                            "type": ""
                          }
                        ],
                        "src": "2632:410:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3122:277:8",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "3171:83:8",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
                                        "nodeType": "YulIdentifier",
                                        "src": "3173:77:8"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "3173:79:8"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "3173:79:8"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "3150:6:8"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "3158:4:8",
                                            "type": "",
                                            "value": "0x1f"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "3146:3:8"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "3146:17:8"
                                      },
                                      {
                                        "name": "end",
                                        "nodeType": "YulIdentifier",
                                        "src": "3165:3:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "slt",
                                      "nodeType": "YulIdentifier",
                                      "src": "3142:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3142:27:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "3135:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3135:35:8"
                              },
                              "nodeType": "YulIf",
                              "src": "3132:122:8"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "3263:34:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "3290:6:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "3277:12:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3277:20:8"
                              },
                              "variables": [
                                {
                                  "name": "length",
                                  "nodeType": "YulTypedName",
                                  "src": "3267:6:8",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "3306:87:8",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "offset",
                                        "nodeType": "YulIdentifier",
                                        "src": "3366:6:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3374:4:8",
                                        "type": "",
                                        "value": "0x20"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3362:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3362:17:8"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "3381:6:8"
                                  },
                                  {
                                    "name": "end",
                                    "nodeType": "YulIdentifier",
                                    "src": "3389:3:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_available_length_t_bytes_memory_ptr",
                                  "nodeType": "YulIdentifier",
                                  "src": "3315:46:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3315:78:8"
                              },
                              "variableNames": [
                                {
                                  "name": "array",
                                  "nodeType": "YulIdentifier",
                                  "src": "3306:5:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_t_bytes_memory_ptr",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "3100:6:8",
                            "type": ""
                          },
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "3108:3:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "array",
                            "nodeType": "YulTypedName",
                            "src": "3116:5:8",
                            "type": ""
                          }
                        ],
                        "src": "3061:338:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3531:817:8",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "3578:83:8",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                                        "nodeType": "YulIdentifier",
                                        "src": "3580:77:8"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "3580:79:8"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "3580:79:8"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "3552:7:8"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "3561:9:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "3548:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3548:23:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3573:3:8",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "3544:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3544:33:8"
                              },
                              "nodeType": "YulIf",
                              "src": "3541:120:8"
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "3671:117:8",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "3686:15:8",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3700:1:8",
                                    "type": "",
                                    "value": "0"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "3690:6:8",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "3715:63:8",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "3750:9:8"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "3761:6:8"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "3746:3:8"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "3746:22:8"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "3770:7:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_address",
                                      "nodeType": "YulIdentifier",
                                      "src": "3725:20:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3725:53:8"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value0",
                                      "nodeType": "YulIdentifier",
                                      "src": "3715:6:8"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "3798:118:8",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "3813:16:8",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3827:2:8",
                                    "type": "",
                                    "value": "32"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "3817:6:8",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "3843:63:8",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "3878:9:8"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "3889:6:8"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "3874:3:8"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "3874:22:8"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "3898:7:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_address",
                                      "nodeType": "YulIdentifier",
                                      "src": "3853:20:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3853:53:8"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value1",
                                      "nodeType": "YulIdentifier",
                                      "src": "3843:6:8"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "3926:118:8",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "3941:16:8",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3955:2:8",
                                    "type": "",
                                    "value": "64"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "3945:6:8",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "3971:63:8",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "4006:9:8"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "4017:6:8"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "4002:3:8"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "4002:22:8"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "4026:7:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_uint256",
                                      "nodeType": "YulIdentifier",
                                      "src": "3981:20:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3981:53:8"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value2",
                                      "nodeType": "YulIdentifier",
                                      "src": "3971:6:8"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "4054:287:8",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "4069:46:8",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "4100:9:8"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "4111:2:8",
                                            "type": "",
                                            "value": "96"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "4096:3:8"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "4096:18:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "calldataload",
                                      "nodeType": "YulIdentifier",
                                      "src": "4083:12:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4083:32:8"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "4073:6:8",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "body": {
                                    "nodeType": "YulBlock",
                                    "src": "4162:83:8",
                                    "statements": [
                                      {
                                        "expression": {
                                          "arguments": [],
                                          "functionName": {
                                            "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
                                            "nodeType": "YulIdentifier",
                                            "src": "4164:77:8"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "4164:79:8"
                                        },
                                        "nodeType": "YulExpressionStatement",
                                        "src": "4164:79:8"
                                      }
                                    ]
                                  },
                                  "condition": {
                                    "arguments": [
                                      {
                                        "name": "offset",
                                        "nodeType": "YulIdentifier",
                                        "src": "4134:6:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "4142:18:8",
                                        "type": "",
                                        "value": "0xffffffffffffffff"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "gt",
                                      "nodeType": "YulIdentifier",
                                      "src": "4131:2:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4131:30:8"
                                  },
                                  "nodeType": "YulIf",
                                  "src": "4128:117:8"
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "4259:72:8",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "4303:9:8"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "4314:6:8"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "4299:3:8"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "4299:22:8"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "4323:7:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_bytes_memory_ptr",
                                      "nodeType": "YulIdentifier",
                                      "src": "4269:29:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4269:62:8"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value3",
                                      "nodeType": "YulIdentifier",
                                      "src": "4259:6:8"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "3477:9:8",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "3488:7:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "3500:6:8",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "3508:6:8",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulTypedName",
                            "src": "3516:6:8",
                            "type": ""
                          },
                          {
                            "name": "value3",
                            "nodeType": "YulTypedName",
                            "src": "3524:6:8",
                            "type": ""
                          }
                        ],
                        "src": "3405:943:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "4398:105:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "4408:89:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "4423:5:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4430:66:8",
                                    "type": "",
                                    "value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "4419:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4419:78:8"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nodeType": "YulIdentifier",
                                  "src": "4408:7:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "cleanup_t_bytes4",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "4380:5:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulTypedName",
                            "src": "4390:7:8",
                            "type": ""
                          }
                        ],
                        "src": "4354:149:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "4572:52:8",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "4589:3:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "4611:5:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "cleanup_t_bytes4",
                                      "nodeType": "YulIdentifier",
                                      "src": "4594:16:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4594:23:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "4582:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4582:36:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4582:36:8"
                            }
                          ]
                        },
                        "name": "abi_encode_t_bytes4_to_t_bytes4_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "4560:5:8",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "4567:3:8",
                            "type": ""
                          }
                        ],
                        "src": "4509:115:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "4726:122:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "4736:26:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "4748:9:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4759:2:8",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "4744:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4744:18:8"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "4736:4:8"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "4814:6:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "4827:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "4838:1:8",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "4823:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4823:17:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_bytes4_to_t_bytes4_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "4772:41:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4772:69:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4772:69:8"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "4698:9:8",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "4710:6:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "4721:4:8",
                            "type": ""
                          }
                        ],
                        "src": "4630:218:8"
                      }
                    ]
                  },
                  "contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory(src, dst, length) {\n        calldatacopy(dst, src, length)\n        // clear end\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function abi_encode_t_bytes4_to_t_bytes4_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes4(value))\n    }\n\n    function abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes4_to_t_bytes4_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
                  "id": 8,
                  "language": "Yul",
                  "name": "#utility.yul"
                }
              ],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "608060405234801561001057600080fd5b506004361061002b5760003560e01c8063150b7a0214610030575b600080fd5b61004a60048036038101906100459190610262565b610060565b6040516100579190610320565b60405180910390f35b600063150b7a0260e01b9050949350505050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100b382610088565b9050919050565b6100c3816100a8565b81146100ce57600080fd5b50565b6000813590506100e0816100ba565b92915050565b6000819050919050565b6100f9816100e6565b811461010457600080fd5b50565b600081359050610116816100f0565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61016f82610126565b810181811067ffffffffffffffff8211171561018e5761018d610137565b5b80604052505050565b60006101a1610074565b90506101ad8282610166565b919050565b600067ffffffffffffffff8211156101cd576101cc610137565b5b6101d682610126565b9050602081019050919050565b82818337600083830152505050565b6000610205610200846101b2565b610197565b90508281526020810184848401111561022157610220610121565b5b61022c8482856101e3565b509392505050565b600082601f8301126102495761024861011c565b5b81356102598482602086016101f2565b91505092915050565b6000806000806080858703121561027c5761027b61007e565b5b600061028a878288016100d1565b945050602061029b878288016100d1565b93505060406102ac87828801610107565b925050606085013567ffffffffffffffff8111156102cd576102cc610083565b5b6102d987828801610234565b91505092959194509250565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61031a816102e5565b82525050565b60006020820190506103356000830184610311565b9291505056fea264697066735822122055d472e0f401bdb5ef60a0f76ffdd2b6164d5b6793ce83e248e545f4eee0a0fc64736f6c634300080e0033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x150B7A02 EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x45 SWAP2 SWAP1 PUSH2 0x262 JUMP JUMPDEST PUSH2 0x60 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x57 SWAP2 SWAP1 PUSH2 0x320 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH4 0x150B7A02 PUSH1 0xE0 SHL SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB3 DUP3 PUSH2 0x88 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC3 DUP2 PUSH2 0xA8 JUMP JUMPDEST DUP2 EQ PUSH2 0xCE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xE0 DUP2 PUSH2 0xBA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF9 DUP2 PUSH2 0xE6 JUMP JUMPDEST DUP2 EQ PUSH2 0x104 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x116 DUP2 PUSH2 0xF0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x16F DUP3 PUSH2 0x126 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x18E JUMPI PUSH2 0x18D PUSH2 0x137 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A1 PUSH2 0x74 JUMP JUMPDEST SWAP1 POP PUSH2 0x1AD DUP3 DUP3 PUSH2 0x166 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1CD JUMPI PUSH2 0x1CC PUSH2 0x137 JUMP JUMPDEST JUMPDEST PUSH2 0x1D6 DUP3 PUSH2 0x126 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x205 PUSH2 0x200 DUP5 PUSH2 0x1B2 JUMP JUMPDEST PUSH2 0x197 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x221 JUMPI PUSH2 0x220 PUSH2 0x121 JUMP JUMPDEST JUMPDEST PUSH2 0x22C DUP5 DUP3 DUP6 PUSH2 0x1E3 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x249 JUMPI PUSH2 0x248 PUSH2 0x11C JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x259 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1F2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x27C JUMPI PUSH2 0x27B PUSH2 0x7E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x28A DUP8 DUP3 DUP9 ADD PUSH2 0xD1 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x29B DUP8 DUP3 DUP9 ADD PUSH2 0xD1 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x2AC DUP8 DUP3 DUP9 ADD PUSH2 0x107 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2CD JUMPI PUSH2 0x2CC PUSH2 0x83 JUMP JUMPDEST JUMPDEST PUSH2 0x2D9 DUP8 DUP3 DUP9 ADD PUSH2 0x234 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x31A DUP2 PUSH2 0x2E5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x335 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x311 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SSTORE 0xD4 PUSH19 0xE0F401BDB5EF60A0F76FFDD2B6164D5B6793CE DUP4 0xE2 BASEFEE 0xE5 GASLIMIT DELEGATECALL 0xEE 0xE0 LOG0 0xFC PUSH5 0x736F6C6343 STOP ADDMOD 0xE STOP CALLER ",
              "sourceMap": "399:391:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;588:200;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;726:6;751:30;;;744:37;;588:200;;;;;;:::o;7:75:8:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:77::-;878:7;907:5;896:16;;841:77;;;:::o;924:122::-;997:24;1015:5;997:24;:::i;:::-;990:5;987:35;977:63;;1036:1;1033;1026:12;977:63;924:122;:::o;1052:139::-;1098:5;1136:6;1123:20;1114:29;;1152:33;1179:5;1152:33;:::i;:::-;1052:139;;;;:::o;1197:117::-;1306:1;1303;1296:12;1320:117;1429:1;1426;1419:12;1443:102;1484:6;1535:2;1531:7;1526:2;1519:5;1515:14;1511:28;1501:38;;1443:102;;;:::o;1551:180::-;1599:77;1596:1;1589:88;1696:4;1693:1;1686:15;1720:4;1717:1;1710:15;1737:281;1820:27;1842:4;1820:27;:::i;:::-;1812:6;1808:40;1950:6;1938:10;1935:22;1914:18;1902:10;1899:34;1896:62;1893:88;;;1961:18;;:::i;:::-;1893:88;2001:10;1997:2;1990:22;1780:238;1737:281;;:::o;2024:129::-;2058:6;2085:20;;:::i;:::-;2075:30;;2114:33;2142:4;2134:6;2114:33;:::i;:::-;2024:129;;;:::o;2159:307::-;2220:4;2310:18;2302:6;2299:30;2296:56;;;2332:18;;:::i;:::-;2296:56;2370:29;2392:6;2370:29;:::i;:::-;2362:37;;2454:4;2448;2444:15;2436:23;;2159:307;;;:::o;2472:154::-;2556:6;2551:3;2546;2533:30;2618:1;2609:6;2604:3;2600:16;2593:27;2472:154;;;:::o;2632:410::-;2709:5;2734:65;2750:48;2791:6;2750:48;:::i;:::-;2734:65;:::i;:::-;2725:74;;2822:6;2815:5;2808:21;2860:4;2853:5;2849:16;2898:3;2889:6;2884:3;2880:16;2877:25;2874:112;;;2905:79;;:::i;:::-;2874:112;2995:41;3029:6;3024:3;3019;2995:41;:::i;:::-;2715:327;2632:410;;;;;:::o;3061:338::-;3116:5;3165:3;3158:4;3150:6;3146:17;3142:27;3132:122;;3173:79;;:::i;:::-;3132:122;3290:6;3277:20;3315:78;3389:3;3381:6;3374:4;3366:6;3362:17;3315:78;:::i;:::-;3306:87;;3122:277;3061:338;;;;:::o;3405:943::-;3500:6;3508;3516;3524;3573:3;3561:9;3552:7;3548:23;3544:33;3541:120;;;3580:79;;:::i;:::-;3541:120;3700:1;3725:53;3770:7;3761:6;3750:9;3746:22;3725:53;:::i;:::-;3715:63;;3671:117;3827:2;3853:53;3898:7;3889:6;3878:9;3874:22;3853:53;:::i;:::-;3843:63;;3798:118;3955:2;3981:53;4026:7;4017:6;4006:9;4002:22;3981:53;:::i;:::-;3971:63;;3926:118;4111:2;4100:9;4096:18;4083:32;4142:18;4134:6;4131:30;4128:117;;;4164:79;;:::i;:::-;4128:117;4269:62;4323:7;4314:6;4303:9;4299:22;4269:62;:::i;:::-;4259:72;;4054:287;3405:943;;;;;;;:::o;4354:149::-;4390:7;4430:66;4423:5;4419:78;4408:89;;4354:149;;;:::o;4509:115::-;4594:23;4611:5;4594:23;:::i;:::-;4589:3;4582:36;4509:115;;:::o;4630:218::-;4721:4;4759:2;4748:9;4744:18;4736:26;;4772:69;4838:1;4827:9;4823:17;4814:6;4772:69;:::i;:::-;4630:218;;;;:::o"
            },
            "methodIdentifiers": {
              "onERC721Received(address,address,uint256,bytes)": "150b7a02"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.14+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC721Receiver} interface. Accepts all token transfers. Make sure the contract is able to use its token with {IERC721-safeTransferFrom}, {IERC721-approve} or {IERC721-setApprovalForAll}.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"See {IERC721Receiver-onERC721Received}. Always returns `IERC721Receiver.onERC721Received.selector`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol\":\"ERC721Holder\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol\":{\"keccak256\":\"0x0108bf6a6ebd5f96678bed33a35947537263f96766131ee91461fb6485805028\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ae2d274bf3d56a6d49a9bbd0a4871c54997a82551eb3eb1c0c39dc98698ff8bf\",\"dweb:/ipfs/QmTT7ty5DPGAmRnx94Xu3TUDYGSPDVLN2bppJAjjedrg1e\"]}},\"version\":1}"
        }
      },
      "@openzeppelin/contracts/utils/Context.sol": {
        "Context": {
          "abi": [],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.14+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}"
        }
      },
      "@openzeppelin/contracts/utils/introspection/IERC165.sol": {
        "IERC165": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "bytes4",
                  "name": "interfaceId",
                  "type": "bytes4"
                }
              ],
              "name": "supportsInterface",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "supportsInterface(bytes4)": "01ffc9a7"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.14+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}"
        }
      },
      "contracts/TamagoSwap.sol": {
        "TamagoSwap": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "uint128",
                  "name": "initalAppFee",
                  "type": "uint128"
                },
                {
                  "internalType": "address",
                  "name": "contractOwnerAddress",
                  "type": "address"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "constructor"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "uint128",
                  "name": "fee",
                  "type": "uint128"
                }
              ],
              "name": "AppFeeChanged",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "previousOwner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "OwnershipTransferred",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "canceledBy",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "uint64",
                  "name": "swapId",
                  "type": "uint64"
                }
              ],
              "name": "SwapCanceled",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "uint64",
                  "name": "swapId",
                  "type": "uint64"
                }
              ],
              "name": "SwapExecuted",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "uint64",
                  "name": "swapId",
                  "type": "uint64"
                },
                {
                  "indexed": false,
                  "internalType": "uint128",
                  "name": "etherValue",
                  "type": "uint128"
                },
                {
                  "indexed": false,
                  "internalType": "address[]",
                  "name": "nftAddresses",
                  "type": "address[]"
                },
                {
                  "indexed": false,
                  "internalType": "uint256[]",
                  "name": "nftIds",
                  "type": "uint256[]"
                }
              ],
              "name": "SwapInitiated",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "uint64",
                  "name": "swapId",
                  "type": "uint64"
                },
                {
                  "indexed": false,
                  "internalType": "uint128",
                  "name": "etherValue",
                  "type": "uint128"
                },
                {
                  "indexed": false,
                  "internalType": "address[]",
                  "name": "nftAddresses",
                  "type": "address[]"
                },
                {
                  "indexed": false,
                  "internalType": "uint256[]",
                  "name": "nftIds",
                  "type": "uint256[]"
                }
              ],
              "name": "SwapProposed",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "uint64",
                  "name": "swapId",
                  "type": "uint64"
                }
              ],
              "name": "acceptSwap",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint64",
                  "name": "swapId",
                  "type": "uint64"
                }
              ],
              "name": "cancelSwap",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "fee",
              "outputs": [
                {
                  "internalType": "uint128",
                  "name": "",
                  "type": "uint128"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint64",
                  "name": "swapId",
                  "type": "uint64"
                },
                {
                  "internalType": "address[]",
                  "name": "nftAddresses",
                  "type": "address[]"
                },
                {
                  "internalType": "uint256[]",
                  "name": "nftIds",
                  "type": "uint256[]"
                }
              ],
              "name": "initiateSwap",
              "outputs": [],
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "",
                  "type": "bytes"
                }
              ],
              "name": "onERC721Received",
              "outputs": [
                {
                  "internalType": "bytes4",
                  "name": "",
                  "type": "bytes4"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "owner",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "secondUser",
                  "type": "address"
                },
                {
                  "internalType": "address[]",
                  "name": "nftAddresses",
                  "type": "address[]"
                },
                {
                  "internalType": "uint256[]",
                  "name": "nftIds",
                  "type": "uint256[]"
                }
              ],
              "name": "proposeSwap",
              "outputs": [],
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "renounceOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint128",
                  "name": "newFee",
                  "type": "uint128"
                }
              ],
              "name": "setAppFee",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "transferOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address payable",
                  "name": "recipient",
                  "type": "address"
                }
              ],
              "name": "withdrawEther",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {
                "@_23": {
                  "entryPoint": null,
                  "id": 23,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@_558": {
                  "entryPoint": null,
                  "id": 558,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "@_msgSender_355": {
                  "entryPoint": 174,
                  "id": 355,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "@_transferOwnership_103": {
                  "entryPoint": 182,
                  "id": 103,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "@owner_32": {
                  "entryPoint": 655,
                  "id": 32,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "@transferOwnership_83": {
                  "entryPoint": 378,
                  "id": 83,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "abi_decode_t_address_fromMemory": {
                  "entryPoint": 856,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_t_uint128_fromMemory": {
                  "entryPoint": 755,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_tuple_t_uint128t_address_fromMemory": {
                  "entryPoint": 879,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 2
                },
                "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack": {
                  "entryPoint": 1160,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack": {
                  "entryPoint": 1008,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": 1199,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": 1047,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "allocate_unbounded": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
                  "entryPoint": 950,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "cleanup_t_address": {
                  "entryPoint": 810,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_t_uint128": {
                  "entryPoint": 701,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_t_uint160": {
                  "entryPoint": 778,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
                  "entryPoint": 696,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe": {
                  "entryPoint": 1081,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe": {
                  "entryPoint": 967,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "validator_revert_t_address": {
                  "entryPoint": 830,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "validator_revert_t_uint128": {
                  "entryPoint": 729,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                }
              },
              "generatedSources": [
                {
                  "ast": {
                    "nodeType": "YulBlock",
                    "src": "0:3944:8",
                    "statements": [
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "47:35:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "57:19:8",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "73:2:8",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "67:5:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "67:9:8"
                              },
                              "variableNames": [
                                {
                                  "name": "memPtr",
                                  "nodeType": "YulIdentifier",
                                  "src": "57:6:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "allocate_unbounded",
                        "nodeType": "YulFunctionDefinition",
                        "returnVariables": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulTypedName",
                            "src": "40:6:8",
                            "type": ""
                          }
                        ],
                        "src": "7:75:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "177:28:8",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "194:1:8",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "197:1:8",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "187:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "187:12:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "187:12:8"
                            }
                          ]
                        },
                        "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                        "nodeType": "YulFunctionDefinition",
                        "src": "88:117:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "300:28:8",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "317:1:8",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "320:1:8",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "310:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "310:12:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "310:12:8"
                            }
                          ]
                        },
                        "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
                        "nodeType": "YulFunctionDefinition",
                        "src": "211:117:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "379:73:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "389:57:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "404:5:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "411:34:8",
                                    "type": "",
                                    "value": "0xffffffffffffffffffffffffffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "400:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "400:46:8"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nodeType": "YulIdentifier",
                                  "src": "389:7:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "cleanup_t_uint128",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "361:5:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulTypedName",
                            "src": "371:7:8",
                            "type": ""
                          }
                        ],
                        "src": "334:118:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "501:79:8",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "558:16:8",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "567:1:8",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "570:1:8",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "560:6:8"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "560:12:8"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "560:12:8"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "524:5:8"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "549:5:8"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "cleanup_t_uint128",
                                          "nodeType": "YulIdentifier",
                                          "src": "531:17:8"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "531:24:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "521:2:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "521:35:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "514:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "514:43:8"
                              },
                              "nodeType": "YulIf",
                              "src": "511:63:8"
                            }
                          ]
                        },
                        "name": "validator_revert_t_uint128",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "494:5:8",
                            "type": ""
                          }
                        ],
                        "src": "458:122:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "649:80:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "659:22:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "674:6:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "668:5:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "668:13:8"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "659:5:8"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "717:5:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_t_uint128",
                                  "nodeType": "YulIdentifier",
                                  "src": "690:26:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "690:33:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "690:33:8"
                            }
                          ]
                        },
                        "name": "abi_decode_t_uint128_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "627:6:8",
                            "type": ""
                          },
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "635:3:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "643:5:8",
                            "type": ""
                          }
                        ],
                        "src": "586:143:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "780:81:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "790:65:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "805:5:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "812:42:8",
                                    "type": "",
                                    "value": "0xffffffffffffffffffffffffffffffffffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "801:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "801:54:8"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nodeType": "YulIdentifier",
                                  "src": "790:7:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "cleanup_t_uint160",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "762:5:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulTypedName",
                            "src": "772:7:8",
                            "type": ""
                          }
                        ],
                        "src": "735:126:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "912:51:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "922:35:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "951:5:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_uint160",
                                  "nodeType": "YulIdentifier",
                                  "src": "933:17:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "933:24:8"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nodeType": "YulIdentifier",
                                  "src": "922:7:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "cleanup_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "894:5:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulTypedName",
                            "src": "904:7:8",
                            "type": ""
                          }
                        ],
                        "src": "867:96:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1012:79:8",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1069:16:8",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1078:1:8",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1081:1:8",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "1071:6:8"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1071:12:8"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1071:12:8"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "1035:5:8"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "1060:5:8"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "cleanup_t_address",
                                          "nodeType": "YulIdentifier",
                                          "src": "1042:17:8"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "1042:24:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "1032:2:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1032:35:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "1025:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1025:43:8"
                              },
                              "nodeType": "YulIf",
                              "src": "1022:63:8"
                            }
                          ]
                        },
                        "name": "validator_revert_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "1005:5:8",
                            "type": ""
                          }
                        ],
                        "src": "969:122:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1160:80:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "1170:22:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "1185:6:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "1179:5:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1179:13:8"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "1170:5:8"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "1228:5:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_t_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "1201:26:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1201:33:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1201:33:8"
                            }
                          ]
                        },
                        "name": "abi_decode_t_address_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "1138:6:8",
                            "type": ""
                          },
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "1146:3:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "1154:5:8",
                            "type": ""
                          }
                        ],
                        "src": "1097:143:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1340:413:8",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1386:83:8",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                                        "nodeType": "YulIdentifier",
                                        "src": "1388:77:8"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1388:79:8"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1388:79:8"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "1361:7:8"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1370:9:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "1357:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1357:23:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1382:2:8",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "1353:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1353:32:8"
                              },
                              "nodeType": "YulIf",
                              "src": "1350:119:8"
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "1479:128:8",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "1494:15:8",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1508:1:8",
                                    "type": "",
                                    "value": "0"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "1498:6:8",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "1523:74:8",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "1569:9:8"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "1580:6:8"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "1565:3:8"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "1565:22:8"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "1589:7:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_uint128_fromMemory",
                                      "nodeType": "YulIdentifier",
                                      "src": "1533:31:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1533:64:8"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value0",
                                      "nodeType": "YulIdentifier",
                                      "src": "1523:6:8"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "1617:129:8",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "1632:16:8",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1646:2:8",
                                    "type": "",
                                    "value": "32"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "1636:6:8",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "1662:74:8",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "1708:9:8"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "1719:6:8"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "1704:3:8"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "1704:22:8"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "1728:7:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_address_fromMemory",
                                      "nodeType": "YulIdentifier",
                                      "src": "1672:31:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1672:64:8"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value1",
                                      "nodeType": "YulIdentifier",
                                      "src": "1662:6:8"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_uint128t_address_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "1302:9:8",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "1313:7:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "1325:6:8",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "1333:6:8",
                            "type": ""
                          }
                        ],
                        "src": "1246:507:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1855:73:8",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "1872:3:8"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "1877:6:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1865:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1865:19:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1865:19:8"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "1893:29:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "1912:3:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1917:4:8",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "1908:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1908:14:8"
                              },
                              "variableNames": [
                                {
                                  "name": "updated_pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "1893:11:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "1827:3:8",
                            "type": ""
                          },
                          {
                            "name": "length",
                            "nodeType": "YulTypedName",
                            "src": "1832:6:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "updated_pos",
                            "nodeType": "YulTypedName",
                            "src": "1843:11:8",
                            "type": ""
                          }
                        ],
                        "src": "1759:169:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2040:76:8",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "memPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "2062:6:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2070:1:8",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "2058:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2058:14:8"
                                  },
                                  {
                                    "hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "2074:34:8",
                                    "type": "",
                                    "value": "Ownable: caller is not the owner"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "2051:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2051:58:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2051:58:8"
                            }
                          ]
                        },
                        "name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulTypedName",
                            "src": "2032:6:8",
                            "type": ""
                          }
                        ],
                        "src": "1934:182:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2268:220:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "2278:74:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "2344:3:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2349:2:8",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "2285:58:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2285:67:8"
                              },
                              "variableNames": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "2278:3:8"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "2450:3:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
                                  "nodeType": "YulIdentifier",
                                  "src": "2361:88:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2361:93:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2361:93:8"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "2463:19:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "2474:3:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2479:2:8",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "2470:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2470:12:8"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "2463:3:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "2256:3:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "2264:3:8",
                            "type": ""
                          }
                        ],
                        "src": "2122:366:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2665:248:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "2675:26:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "2687:9:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2698:2:8",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "2683:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2683:18:8"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "2675:4:8"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "2722:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2733:1:8",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "2718:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2718:17:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "tail",
                                        "nodeType": "YulIdentifier",
                                        "src": "2741:4:8"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "2747:9:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "2737:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2737:20:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "2711:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2711:47:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2711:47:8"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "2767:139:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "tail",
                                    "nodeType": "YulIdentifier",
                                    "src": "2901:4:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "2775:124:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2775:131:8"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "2767:4:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "2645:9:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "2660:4:8",
                            "type": ""
                          }
                        ],
                        "src": "2494:419:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3025:119:8",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "memPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "3047:6:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3055:1:8",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3043:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3043:14:8"
                                  },
                                  {
                                    "hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "3059:34:8",
                                    "type": "",
                                    "value": "Ownable: new owner is the zero a"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "3036:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3036:58:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3036:58:8"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "memPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "3115:6:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3123:2:8",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3111:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3111:15:8"
                                  },
                                  {
                                    "hexValue": "646472657373",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "3128:8:8",
                                    "type": "",
                                    "value": "ddress"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "3104:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3104:33:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3104:33:8"
                            }
                          ]
                        },
                        "name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulTypedName",
                            "src": "3017:6:8",
                            "type": ""
                          }
                        ],
                        "src": "2919:225:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3296:220:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "3306:74:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "3372:3:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3377:2:8",
                                    "type": "",
                                    "value": "38"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "3313:58:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3313:67:8"
                              },
                              "variableNames": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "3306:3:8"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "3478:3:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
                                  "nodeType": "YulIdentifier",
                                  "src": "3389:88:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3389:93:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3389:93:8"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "3491:19:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "3502:3:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3507:2:8",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "3498:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3498:12:8"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "3491:3:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "3284:3:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "3292:3:8",
                            "type": ""
                          }
                        ],
                        "src": "3150:366:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3693:248:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "3703:26:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "3715:9:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3726:2:8",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "3711:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3711:18:8"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "3703:4:8"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "3750:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3761:1:8",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3746:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3746:17:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "tail",
                                        "nodeType": "YulIdentifier",
                                        "src": "3769:4:8"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "3775:9:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "3765:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3765:20:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "3739:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3739:47:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3739:47:8"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "3795:139:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "tail",
                                    "nodeType": "YulIdentifier",
                                    "src": "3929:4:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "3803:124:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3803:131:8"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "3795:4:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "3673:9:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "3688:4:8",
                            "type": ""
                          }
                        ],
                        "src": "3522:419:8"
                      }
                    ]
                  },
                  "contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint128(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffff)\n    }\n\n    function validator_revert_t_uint128(value) {\n        if iszero(eq(value, cleanup_t_uint128(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint128_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint128(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_uint128t_address_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint128_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
                  "id": 8,
                  "language": "Yul",
                  "name": "#utility.yul"
                }
              ],
              "linkReferences": {},
              "object": "60806040523480156200001157600080fd5b5060405162003f2d38038062003f2d83398181016040528101906200003791906200036f565b620000576200004b620000ae60201b60201c565b620000b660201b60201c565b81600160106101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff160217905550620000a6816200017a60201b620024fe1760201c565b5050620004d1565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6200018a620000ae60201b60201c565b73ffffffffffffffffffffffffffffffffffffffff16620001b06200028f60201b60201c565b73ffffffffffffffffffffffffffffffffffffffff161462000209576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620002009062000417565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036200027b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200027290620004af565b60405180910390fd5b6200028c81620000b660201b60201c565b50565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600080fd5b60006fffffffffffffffffffffffffffffffff82169050919050565b620002e481620002bd565b8114620002f057600080fd5b50565b6000815190506200030481620002d9565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600062000337826200030a565b9050919050565b62000349816200032a565b81146200035557600080fd5b50565b60008151905062000369816200033e565b92915050565b60008060408385031215620003895762000388620002b8565b5b60006200039985828601620002f3565b9250506020620003ac8582860162000358565b9150509250929050565b600082825260208201905092915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000620003ff602083620003b6565b91506200040c82620003c7565b602082019050919050565b600060208201905081810360008301526200043281620003f0565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b600062000497602683620003b6565b9150620004a48262000439565b604082019050919050565b60006020820190508181036000830152620004ca8162000488565b9050919050565b613a4c80620004e16000396000f3fe60806040526004361061009c5760003560e01c80637e3fe497116100645780637e3fe497146101635780638da5cb5b1461017f578063af933b57146101aa578063b7719a9c146101d3578063ddca3f43146101fc578063f2fde38b146102275761009c565b80630cce448d146100a1578063150b7a02146100ca57806355a36d5614610107578063715018a6146101235780637500f85c1461013a575b600080fd5b3480156100ad57600080fd5b506100c860048036038101906100c39190612939565b610250565b005b3480156100d657600080fd5b506100f160048036038101906100ec9190612b40565b610cbb565b6040516100fe9190612bfe565b60405180910390f35b610121600480360381019061011c9190612da4565b610ccf565b005b34801561012f57600080fd5b50610138611092565b005b34801561014657600080fd5b50610161600480360381019061015c9190612939565b61111a565b005b61017d60048036038101906101789190612e2f565b611ced565b005b34801561018b57600080fd5b50610194612254565b6040516101a19190612ec9565b60405180910390f35b3480156101b657600080fd5b506101d160048036038101906101cc9190612f22565b61227d565b005b3480156101df57600080fd5b506101fa60048036038101906101f59190612f97565b6123ed565b005b34801561020857600080fd5b506102116124dc565b60405161021e9190612fd3565b60405180910390f35b34801561023357600080fd5b5061024e60048036038101906102499190612fee565b6124fe565b005b3373ffffffffffffffffffffffffffffffffffffffff16600260008367ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16148061034957503373ffffffffffffffffffffffffffffffffffffffff16600260008367ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16145b610388576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161037f9061309e565b60405180910390fd5b61050430600260008467ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600260008567ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060010180548060200260200160405190810160405280929190818152602001828054801561048157602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610437575b5050505050600260008667ffffffffffffffff1667ffffffffffffffff1681526020019081526020016000206002018054806020026020016040519081016040528092919081815260200182805480156104fa57602002820191906000526020600020905b8154815260200190600101908083116104e6575b50505050506125f5565b6000600260008367ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060040180549050146106b6576106b530600260008467ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600260008567ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060040180548060200260200160405190810160405280929190818152602001828054801561063257602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116105e8575b5050505050600260008667ffffffffffffffff1667ffffffffffffffff1681526020019081526020016000206005018054806020026020016040519081016040528092919081815260200182805480156106ab57602002820191906000526020600020905b815481526020019060010190808311610697575b50505050506125f5565b5b6000600260008367ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060060160009054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff161461091157600260008267ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060060160009054906101000a90046fffffffffffffffffffffffffffffffff16600160008282829054906101000a90046fffffffffffffffffffffffffffffffff1661078991906130ed565b92506101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff1602179055506000600260008367ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060060160009054906101000a90046fffffffffffffffffffffffffffffffff1690506000600260008467ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060060160006101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff160217905550600260008367ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc826fffffffffffffffffffffffffffffffff169081150290604051600060405180830381858888f1935050505015801561090e573d6000803e3d6000fd5b50505b6000600260008367ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060060160109054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff1614610b6c57600260008267ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060060160109054906101000a90046fffffffffffffffffffffffffffffffff16600160008282829054906101000a90046fffffffffffffffffffffffffffffffff166109e491906130ed565b92506101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff1602179055506000600260008367ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060060160109054906101000a90046fffffffffffffffffffffffffffffffff1690506000600260008467ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060060160106101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff160217905550600260008367ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc826fffffffffffffffffffffffffffffffff169081150290604051600060405180830381858888f19350505050158015610b69573d6000803e3d6000fd5b50505b8067ffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f54b9c72d790ad613d26b317d2d24e28dd1608f07ff121cb2d42ace3cbcd4eb0f60405160405180910390a3600260008267ffffffffffffffff1667ffffffffffffffff168152602001908152602001600020600080820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055600182016000610c1991906127af565b600282016000610c2991906127d0565b6003820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055600482016000610c6091906127af565b600582016000610c7091906127d0565b6006820160006101000a8154906fffffffffffffffffffffffffffffffff02191690556006820160106101000a8154906fffffffffffffffffffffffffffffffff0219169055505050565b600063150b7a0260e01b9050949350505050565b600160109054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff16341015610d42576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d39906131b9565b60405180910390fd5b81818051825114610d88576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d7f9061324b565b60405180910390fd5b6001600060148282829054906101000a900467ffffffffffffffff16610dae919061326b565b92506101000a81548167ffffffffffffffff021916908367ffffffffffffffff160217905550610de0333086866125f5565b6000600260008060149054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff1681526020019081526020016000209050338160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555084816001019080519060200190610e7b9291906127f1565b5083816002019080519060200190610e9492919061287b565b506000600160109054906101000a90046fffffffffffffffffffffffffffffffff169050806fffffffffffffffffffffffffffffffff16341115610f9c578034610ede91906130ed565b8260060160006101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff1602179055508160060160009054906101000a90046fffffffffffffffffffffffffffffffff16600160008282829054906101000a90046fffffffffffffffffffffffffffffffff16610f6591906132a9565b92506101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff1602179055505b868260030160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600060149054906101000a900467ffffffffffffffff1667ffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f47ab916bf7e1067c857bf17c72c33c4db59e95f2730e7283799f8a0b016aee078560060160009054906101000a90046fffffffffffffffffffffffffffffffff168a8a6040516110819392919061346b565b60405180910390a450505050505050565b61109a61266b565b73ffffffffffffffffffffffffffffffffffffffff166110b8612254565b73ffffffffffffffffffffffffffffffffffffffff161461110e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611105906134fc565b60405180910390fd5b6111186000612673565b565b80600260008267ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146111d3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111ca9061358e565b60405180910390fd5b6000600260008467ffffffffffffffff1667ffffffffffffffff1681526020019081526020016000206004018054905014158061126857506000600260008467ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060060160109054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff16115b801561130557506000600260008467ffffffffffffffff1667ffffffffffffffff1681526020019081526020016000206001018054905014158061130457506000600260008467ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060060160009054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff16115b5b611344576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161133b90613620565b60405180910390fd5b6114c030600260008567ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600260008667ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060040180548060200260200160405190810160405280929190818152602001828054801561143d57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116113f3575b5050505050600260008767ffffffffffffffff1667ffffffffffffffff1681526020019081526020016000206005018054806020026020016040519081016040528092919081815260200182805480156114b657602002820191906000526020600020905b8154815260200190600101908083116114a2575b50505050506125f5565b61163c30600260008567ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600260008667ffffffffffffffff1667ffffffffffffffff1681526020019081526020016000206001018054806020026020016040519081016040528092919081815260200182805480156115b957602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831161156f575b5050505050600260008767ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060020180548060200260200160405190810160405280929190818152602001828054801561163257602002820191906000526020600020905b81548152602001906001019080831161161e575b50505050506125f5565b6000600260008467ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060060160009054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff161461189757600260008367ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060060160009054906101000a90046fffffffffffffffffffffffffffffffff16600160008282829054906101000a90046fffffffffffffffffffffffffffffffff1661170f91906130ed565b92506101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff1602179055506000600260008467ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060060160009054906101000a90046fffffffffffffffffffffffffffffffff1690506000600260008567ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060060160006101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff160217905550600260008467ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc826fffffffffffffffffffffffffffffffff169081150290604051600060405180830381858888f19350505050158015611894573d6000803e3d6000fd5b50505b6000600260008467ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060060160109054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff1614611af257600260008367ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060060160109054906101000a90046fffffffffffffffffffffffffffffffff16600160008282829054906101000a90046fffffffffffffffffffffffffffffffff1661196a91906130ed565b92506101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff1602179055506000600260008467ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060060160109054906101000a90046fffffffffffffffffffffffffffffffff1690506000600260008567ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060060160106101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff160217905550600260008467ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc826fffffffffffffffffffffffffffffffff169081150290604051600060405180830381858888f19350505050158015611aef573d6000803e3d6000fd5b50505b8167ffffffffffffffff16600260008467ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600260008567ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8d1ef4e0ccd0f016857c236780af12f7aa46cb23459b4962f46e649e6a9c24f260405160405180910390a4600260008367ffffffffffffffff1667ffffffffffffffff168152602001908152602001600020600080820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055600182016000611c4a91906127af565b600282016000611c5a91906127d0565b6003820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055600482016000611c9191906127af565b600582016000611ca191906127d0565b6006820160006101000a8154906fffffffffffffffffffffffffffffffff02191690556006820160106101000a8154906fffffffffffffffffffffffffffffffff021916905550505050565b600160109054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff16341015611d60576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611d57906131b9565b60405180910390fd5b81818051825114611da6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611d9d9061324b565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff16600260008767ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611e5e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611e55906136b2565b60405180910390fd5b6000600260008767ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060060160109054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff16148015611f2c57506000600260008767ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060040180549050148015611f2b57506000600260008767ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060050180549050145b5b611f6b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611f6290613744565b60405180910390fd5b611f77333086866125f5565b83600260008767ffffffffffffffff1667ffffffffffffffff1681526020019081526020016000206004019080519060200190611fb59291906127f1565b5082600260008767ffffffffffffffff1667ffffffffffffffff1681526020019081526020016000206005019080519060200190611ff492919061287b565b506000600160109054906101000a90046fffffffffffffffffffffffffffffffff169050806fffffffffffffffffffffffffffffffff1634111561214857803461203e91906130ed565b600260008867ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060060160106101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff160217905550600260008767ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060060160109054906101000a90046fffffffffffffffffffffffffffffffff16600160008282829054906101000a90046fffffffffffffffffffffffffffffffff1661211191906132a9565b92506101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff1602179055505b8567ffffffffffffffff16600260008867ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f4e597ee0a0e4f52a7e43929928b9d21bd33282d3d7e7b2896cf4c0cd64c4029d600260008b67ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060060160109054906101000a90046fffffffffffffffffffffffffffffffff1689896040516122449392919061346b565b60405180910390a4505050505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61228561266b565b73ffffffffffffffffffffffffffffffffffffffff166122a3612254565b73ffffffffffffffffffffffffffffffffffffffff16146122f9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016122f0906134fc565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603612368576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161235f906137d6565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166108fc600160009054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff16476123be91906137f6565b9081150290604051600060405180830381858888f193505050501580156123e9573d6000803e3d6000fd5b5050565b6123f561266b565b73ffffffffffffffffffffffffffffffffffffffff16612413612254565b73ffffffffffffffffffffffffffffffffffffffff1614612469576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612460906134fc565b60405180910390fd5b80600160106101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff1602179055507f220ace5bd7df3a0637bc16073257c1c74f8a207436c0c1a8cf098ff268d4078a816040516124d19190612fd3565b60405180910390a150565b600160109054906101000a90046fffffffffffffffffffffffffffffffff1681565b61250661266b565b73ffffffffffffffffffffffffffffffffffffffff16612524612254565b73ffffffffffffffffffffffffffffffffffffffff161461257a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612571906134fc565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036125e9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016125e09061389c565b60405180910390fd5b6125f281612673565b50565b60005b8151811015612664576126518585858481518110612619576126186138bc565b5b6020026020010151858581518110612634576126336138bc565b5b602002602001015160405180602001604052806000815250612737565b808061265c906138eb565b9150506125f8565b5050505050565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b8273ffffffffffffffffffffffffffffffffffffffff1663b88d4fde868685856040518563ffffffff1660e01b815260040161277694939291906139ca565b600060405180830381600087803b15801561279057600080fd5b505af11580156127a4573d6000803e3d6000fd5b505050505050505050565b50805460008255906000526020600020908101906127cd91906128c8565b50565b50805460008255906000526020600020908101906127ee91906128c8565b50565b82805482825590600052602060002090810192821561286a579160200282015b828111156128695782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190612811565b5b50905061287791906128c8565b5090565b8280548282559060005260206000209081019282156128b7579160200282015b828111156128b657825182559160200191906001019061289b565b5b5090506128c491906128c8565b5090565b5b808211156128e15760008160009055506001016128c9565b5090565b6000604051905090565b600080fd5b600080fd5b600067ffffffffffffffff82169050919050565b612916816128f9565b811461292157600080fd5b50565b6000813590506129338161290d565b92915050565b60006020828403121561294f5761294e6128ef565b5b600061295d84828501612924565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061299182612966565b9050919050565b6129a181612986565b81146129ac57600080fd5b50565b6000813590506129be81612998565b92915050565b6000819050919050565b6129d7816129c4565b81146129e257600080fd5b50565b6000813590506129f4816129ce565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b612a4d82612a04565b810181811067ffffffffffffffff82111715612a6c57612a6b612a15565b5b80604052505050565b6000612a7f6128e5565b9050612a8b8282612a44565b919050565b600067ffffffffffffffff821115612aab57612aaa612a15565b5b612ab482612a04565b9050602081019050919050565b82818337600083830152505050565b6000612ae3612ade84612a90565b612a75565b905082815260208101848484011115612aff57612afe6129ff565b5b612b0a848285612ac1565b509392505050565b600082601f830112612b2757612b266129fa565b5b8135612b37848260208601612ad0565b91505092915050565b60008060008060808587031215612b5a57612b596128ef565b5b6000612b68878288016129af565b9450506020612b79878288016129af565b9350506040612b8a878288016129e5565b925050606085013567ffffffffffffffff811115612bab57612baa6128f4565b5b612bb787828801612b12565b91505092959194509250565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b612bf881612bc3565b82525050565b6000602082019050612c136000830184612bef565b92915050565b600067ffffffffffffffff821115612c3457612c33612a15565b5b602082029050602081019050919050565b600080fd5b6000612c5d612c5884612c19565b612a75565b90508083825260208201905060208402830185811115612c8057612c7f612c45565b5b835b81811015612ca95780612c9588826129af565b845260208401935050602081019050612c82565b5050509392505050565b600082601f830112612cc857612cc76129fa565b5b8135612cd8848260208601612c4a565b91505092915050565b600067ffffffffffffffff821115612cfc57612cfb612a15565b5b602082029050602081019050919050565b6000612d20612d1b84612ce1565b612a75565b90508083825260208201905060208402830185811115612d4357612d42612c45565b5b835b81811015612d6c5780612d5888826129e5565b845260208401935050602081019050612d45565b5050509392505050565b600082601f830112612d8b57612d8a6129fa565b5b8135612d9b848260208601612d0d565b91505092915050565b600080600060608486031215612dbd57612dbc6128ef565b5b6000612dcb868287016129af565b935050602084013567ffffffffffffffff811115612dec57612deb6128f4565b5b612df886828701612cb3565b925050604084013567ffffffffffffffff811115612e1957612e186128f4565b5b612e2586828701612d76565b9150509250925092565b600080600060608486031215612e4857612e476128ef565b5b6000612e5686828701612924565b935050602084013567ffffffffffffffff811115612e7757612e766128f4565b5b612e8386828701612cb3565b925050604084013567ffffffffffffffff811115612ea457612ea36128f4565b5b612eb086828701612d76565b9150509250925092565b612ec381612986565b82525050565b6000602082019050612ede6000830184612eba565b92915050565b6000612eef82612966565b9050919050565b612eff81612ee4565b8114612f0a57600080fd5b50565b600081359050612f1c81612ef6565b92915050565b600060208284031215612f3857612f376128ef565b5b6000612f4684828501612f0d565b91505092915050565b60006fffffffffffffffffffffffffffffffff82169050919050565b612f7481612f4f565b8114612f7f57600080fd5b50565b600081359050612f9181612f6b565b92915050565b600060208284031215612fad57612fac6128ef565b5b6000612fbb84828501612f82565b91505092915050565b612fcd81612f4f565b82525050565b6000602082019050612fe86000830184612fc4565b92915050565b600060208284031215613004576130036128ef565b5b6000613012848285016129af565b91505092915050565b600082825260208201905092915050565b7f54616d61676f537761703a2043616e27742063616e63656c20737761702c206d60008201527f7573742062652073776170207061727469636970616e74000000000000000000602082015250565b600061308860378361301b565b91506130938261302c565b604082019050919050565b600060208201905081810360008301526130b78161307b565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006130f882612f4f565b915061310383612f4f565b925082821015613116576131156130be565b5b828203905092915050565b7f54616d61676f537761703a2053656e742045544820616d6f756e74206e65656460008201527f7320746f206265206d6f7265206f7220657175616c206170706c69636174696f60208201527f6e20666565000000000000000000000000000000000000000000000000000000604082015250565b60006131a360458361301b565b91506131ae82613121565b606082019050919050565b600060208201905081810360008301526131d281613196565b9050919050565b7f54616d61676f537761703a204e465420616e642049442061727261797320686160008201527f766520746f2062652073616d65206c656e677468000000000000000000000000602082015250565b600061323560348361301b565b9150613240826131d9565b604082019050919050565b6000602082019050818103600083015261326481613228565b9050919050565b6000613276826128f9565b9150613281836128f9565b92508267ffffffffffffffff0382111561329e5761329d6130be565b5b828201905092915050565b60006132b482612f4f565b91506132bf83612f4f565b9250826fffffffffffffffffffffffffffffffff038211156132e4576132e36130be565b5b828201905092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b61332481612986565b82525050565b6000613336838361331b565b60208301905092915050565b6000602082019050919050565b600061335a826132ef565b61336481856132fa565b935061336f8361330b565b8060005b838110156133a0578151613387888261332a565b975061339283613342565b925050600181019050613373565b5085935050505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6133e2816129c4565b82525050565b60006133f483836133d9565b60208301905092915050565b6000602082019050919050565b6000613418826133ad565b61342281856133b8565b935061342d836133c9565b8060005b8381101561345e57815161344588826133e8565b975061345083613400565b925050600181019050613431565b5085935050505092915050565b60006060820190506134806000830186612fc4565b8181036020830152613492818561334f565b905081810360408301526134a6818461340d565b9050949350505050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b60006134e660208361301b565b91506134f1826134b0565b602082019050919050565b60006020820190508181036000830152613515816134d9565b9050919050565b7f54616d61676f537761703a2063616c6c6572206973206e6f742073776170206960008201527f6e69746961746f72000000000000000000000000000000000000000000000000602082015250565b600061357860288361301b565b91506135838261351c565b604082019050919050565b600060208201905081810360008301526135a78161356b565b9050919050565b7f54616d61676f537761703a2043616e27742061636365707420737761702c206260008201527f6f7468207061727469636970616e7473206469646e277420616464204e465473602082015250565b600061360a60408361301b565b9150613615826135ae565b604082019050919050565b60006020820190508181036000830152613639816135fd565b9050919050565b7f54616d61676f537761703a2063616c6c6572206973206e6f742073776170207060008201527f6172746963697061746f72000000000000000000000000000000000000000000602082015250565b600061369c602b8361301b565b91506136a782613640565b604082019050919050565b600060208201905081810360008301526136cb8161368f565b9050919050565b7f54616d61676f537761703a207377617020616c726561647920696e697469617460008201527f6564000000000000000000000000000000000000000000000000000000000000602082015250565b600061372e60228361301b565b9150613739826136d2565b604082019050919050565b6000602082019050818103600083015261375d81613721565b9050919050565b7f537761704b6977693a207472616e7366657220746f20746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b60006137c060268361301b565b91506137cb82613764565b604082019050919050565b600060208201905081810360008301526137ef816137b3565b9050919050565b6000613801826129c4565b915061380c836129c4565b92508282101561381f5761381e6130be565b5b828203905092915050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b600061388660268361301b565b91506138918261382a565b604082019050919050565b600060208201905081810360008301526138b581613879565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60006138f6826129c4565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203613928576139276130be565b5b600182019050919050565b61393c816129c4565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561397c578082015181840152602081019050613961565b8381111561398b576000848401525b50505050565b600061399c82613942565b6139a6818561394d565b93506139b681856020860161395e565b6139bf81612a04565b840191505092915050565b60006080820190506139df6000830187612eba565b6139ec6020830186612eba565b6139f96040830185613933565b8181036060830152613a0b8184613991565b90509594505050505056fea264697066735822122094f06357ec6bbbdf5d9a8a62c06d13f0adde311a145894a19780769c9c6a400a64736f6c634300080e0033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x3F2D CODESIZE SUB DUP1 PUSH3 0x3F2D DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x36F JUMP JUMPDEST PUSH3 0x57 PUSH3 0x4B PUSH3 0xAE PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0xB6 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x10 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH3 0xA6 DUP2 PUSH3 0x17A PUSH1 0x20 SHL PUSH3 0x24FE OR PUSH1 0x20 SHR JUMP JUMPDEST POP POP PUSH3 0x4D1 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH3 0x18A PUSH3 0xAE PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH3 0x1B0 PUSH3 0x28F PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH3 0x209 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x200 SWAP1 PUSH3 0x417 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x27B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x272 SWAP1 PUSH3 0x4AF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x28C DUP2 PUSH3 0xB6 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x2E4 DUP2 PUSH3 0x2BD JUMP JUMPDEST DUP2 EQ PUSH3 0x2F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x304 DUP2 PUSH3 0x2D9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x337 DUP3 PUSH3 0x30A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x349 DUP2 PUSH3 0x32A JUMP JUMPDEST DUP2 EQ PUSH3 0x355 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x369 DUP2 PUSH3 0x33E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x389 JUMPI PUSH3 0x388 PUSH3 0x2B8 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x399 DUP6 DUP3 DUP7 ADD PUSH3 0x2F3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH3 0x3AC DUP6 DUP3 DUP7 ADD PUSH3 0x358 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x3FF PUSH1 0x20 DUP4 PUSH3 0x3B6 JUMP JUMPDEST SWAP2 POP PUSH3 0x40C DUP3 PUSH3 0x3C7 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0x432 DUP2 PUSH3 0x3F0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x497 PUSH1 0x26 DUP4 PUSH3 0x3B6 JUMP JUMPDEST SWAP2 POP PUSH3 0x4A4 DUP3 PUSH3 0x439 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0x4CA DUP2 PUSH3 0x488 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3A4C DUP1 PUSH3 0x4E1 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x9C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7E3FE497 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0x7E3FE497 EQ PUSH2 0x163 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x17F JUMPI DUP1 PUSH4 0xAF933B57 EQ PUSH2 0x1AA JUMPI DUP1 PUSH4 0xB7719A9C EQ PUSH2 0x1D3 JUMPI DUP1 PUSH4 0xDDCA3F43 EQ PUSH2 0x1FC JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x227 JUMPI PUSH2 0x9C JUMP JUMPDEST DUP1 PUSH4 0xCCE448D EQ PUSH2 0xA1 JUMPI DUP1 PUSH4 0x150B7A02 EQ PUSH2 0xCA JUMPI DUP1 PUSH4 0x55A36D56 EQ PUSH2 0x107 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0x7500F85C EQ PUSH2 0x13A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xAD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xC8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0x2939 JUMP JUMPDEST PUSH2 0x250 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xD6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xF1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xEC SWAP2 SWAP1 PUSH2 0x2B40 JUMP JUMPDEST PUSH2 0xCBB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFE SWAP2 SWAP1 PUSH2 0x2BFE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x121 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x11C SWAP2 SWAP1 PUSH2 0x2DA4 JUMP JUMPDEST PUSH2 0xCCF JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x12F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x138 PUSH2 0x1092 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x146 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x161 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x15C SWAP2 SWAP1 PUSH2 0x2939 JUMP JUMPDEST PUSH2 0x111A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x17D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x178 SWAP2 SWAP1 PUSH2 0x2E2F JUMP JUMPDEST PUSH2 0x1CED JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x18B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x194 PUSH2 0x2254 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A1 SWAP2 SWAP1 PUSH2 0x2EC9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1CC SWAP2 SWAP1 PUSH2 0x2F22 JUMP JUMPDEST PUSH2 0x227D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F5 SWAP2 SWAP1 PUSH2 0x2F97 JUMP JUMPDEST PUSH2 0x23ED JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x208 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x211 PUSH2 0x24DC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21E SWAP2 SWAP1 PUSH2 0x2FD3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x233 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x24E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x249 SWAP2 SWAP1 PUSH2 0x2FEE JUMP JUMPDEST PUSH2 0x24FE JUMP JUMPDEST STOP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 PUSH1 0x0 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x349 JUMPI POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 PUSH1 0x0 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST PUSH2 0x388 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x37F SWAP1 PUSH2 0x309E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x504 ADDRESS PUSH1 0x2 PUSH1 0x0 DUP5 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 PUSH1 0x0 DUP6 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x481 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x437 JUMPI JUMPDEST POP POP POP POP POP PUSH1 0x2 PUSH1 0x0 DUP7 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x4FA JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x4E6 JUMPI JUMPDEST POP POP POP POP POP PUSH2 0x25F5 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x4 ADD DUP1 SLOAD SWAP1 POP EQ PUSH2 0x6B6 JUMPI PUSH2 0x6B5 ADDRESS PUSH1 0x2 PUSH1 0x0 DUP5 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 PUSH1 0x0 DUP6 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x4 ADD DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x632 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x5E8 JUMPI JUMPDEST POP POP POP POP POP PUSH1 0x2 PUSH1 0x0 DUP7 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x6AB JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x697 JUMPI JUMPDEST POP POP POP POP POP PUSH2 0x25F5 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x6 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x911 JUMPI PUSH1 0x2 PUSH1 0x0 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x6 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH1 0x0 DUP3 DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x789 SWAP2 SWAP1 PUSH2 0x30ED JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x6 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP5 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x6 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x2 PUSH1 0x0 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x90E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x6 ADD PUSH1 0x10 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xB6C JUMPI PUSH1 0x2 PUSH1 0x0 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x6 ADD PUSH1 0x10 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH1 0x0 DUP3 DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x9E4 SWAP2 SWAP1 PUSH2 0x30ED JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x6 ADD PUSH1 0x10 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP5 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x6 ADD PUSH1 0x10 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x2 PUSH1 0x0 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xB69 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP JUMPDEST DUP1 PUSH8 0xFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x54B9C72D790AD613D26B317D2D24E28DD1608F07FF121CB2D42ACE3CBCD4EB0F PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x2 PUSH1 0x0 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x0 PUSH2 0xC19 SWAP2 SWAP1 PUSH2 0x27AF JUMP JUMPDEST PUSH1 0x2 DUP3 ADD PUSH1 0x0 PUSH2 0xC29 SWAP2 SWAP1 PUSH2 0x27D0 JUMP JUMPDEST PUSH1 0x3 DUP3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x4 DUP3 ADD PUSH1 0x0 PUSH2 0xC60 SWAP2 SWAP1 PUSH2 0x27AF JUMP JUMPDEST PUSH1 0x5 DUP3 ADD PUSH1 0x0 PUSH2 0xC70 SWAP2 SWAP1 PUSH2 0x27D0 JUMP JUMPDEST PUSH1 0x6 DUP3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x6 DUP3 ADD PUSH1 0x10 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0x150B7A02 PUSH1 0xE0 SHL SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x10 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLVALUE LT ISZERO PUSH2 0xD42 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD39 SWAP1 PUSH2 0x31B9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 DUP1 MLOAD DUP3 MLOAD EQ PUSH2 0xD88 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD7F SWAP1 PUSH2 0x324B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 PUSH1 0x14 DUP3 DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH2 0xDAE SWAP2 SWAP1 PUSH2 0x326B JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0xDE0 CALLER ADDRESS DUP7 DUP7 PUSH2 0x25F5 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP1 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP CALLER DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP5 DUP2 PUSH1 0x1 ADD SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0xE7B SWAP3 SWAP2 SWAP1 PUSH2 0x27F1 JUMP JUMPDEST POP DUP4 DUP2 PUSH1 0x2 ADD SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0xE94 SWAP3 SWAP2 SWAP1 PUSH2 0x287B JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x10 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP1 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLVALUE GT ISZERO PUSH2 0xF9C JUMPI DUP1 CALLVALUE PUSH2 0xEDE SWAP2 SWAP1 PUSH2 0x30ED JUMP JUMPDEST DUP3 PUSH1 0x6 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0x6 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH1 0x0 DUP3 DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xF65 SWAP2 SWAP1 PUSH2 0x32A9 JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMPDEST DUP7 DUP3 PUSH1 0x3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x47AB916BF7E1067C857BF17C72C33C4DB59E95F2730E7283799F8A0B016AEE07 DUP6 PUSH1 0x6 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP11 DUP11 PUSH1 0x40 MLOAD PUSH2 0x1081 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x346B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x109A PUSH2 0x266B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x10B8 PUSH2 0x2254 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x110E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1105 SWAP1 PUSH2 0x34FC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1118 PUSH1 0x0 PUSH2 0x2673 JUMP JUMPDEST JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x11D3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11CA SWAP1 PUSH2 0x358E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP5 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x4 ADD DUP1 SLOAD SWAP1 POP EQ ISZERO DUP1 PUSH2 0x1268 JUMPI POP PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP5 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x6 ADD PUSH1 0x10 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND GT JUMPDEST DUP1 ISZERO PUSH2 0x1305 JUMPI POP PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP5 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD SWAP1 POP EQ ISZERO DUP1 PUSH2 0x1304 JUMPI POP PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP5 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x6 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND GT JUMPDEST JUMPDEST PUSH2 0x1344 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x133B SWAP1 PUSH2 0x3620 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x14C0 ADDRESS PUSH1 0x2 PUSH1 0x0 DUP6 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 PUSH1 0x0 DUP7 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x4 ADD DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x143D JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x13F3 JUMPI JUMPDEST POP POP POP POP POP PUSH1 0x2 PUSH1 0x0 DUP8 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x14B6 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x14A2 JUMPI JUMPDEST POP POP POP POP POP PUSH2 0x25F5 JUMP JUMPDEST PUSH2 0x163C ADDRESS PUSH1 0x2 PUSH1 0x0 DUP6 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 PUSH1 0x0 DUP7 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x15B9 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x156F JUMPI JUMPDEST POP POP POP POP POP PUSH1 0x2 PUSH1 0x0 DUP8 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x1632 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x161E JUMPI JUMPDEST POP POP POP POP POP PUSH2 0x25F5 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP5 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x6 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1897 JUMPI PUSH1 0x2 PUSH1 0x0 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x6 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH1 0x0 DUP3 DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x170F SWAP2 SWAP1 PUSH2 0x30ED JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP5 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x6 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP6 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x6 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x2 PUSH1 0x0 DUP5 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x1894 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP5 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x6 ADD PUSH1 0x10 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1AF2 JUMPI PUSH1 0x2 PUSH1 0x0 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x6 ADD PUSH1 0x10 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH1 0x0 DUP3 DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x196A SWAP2 SWAP1 PUSH2 0x30ED JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP5 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x6 ADD PUSH1 0x10 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP6 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x6 ADD PUSH1 0x10 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x2 PUSH1 0x0 DUP5 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x1AEF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP JUMPDEST DUP2 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0x2 PUSH1 0x0 DUP5 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 PUSH1 0x0 DUP6 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8D1EF4E0CCD0F016857C236780AF12F7AA46CB23459B4962F46E649E6A9C24F2 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x2 PUSH1 0x0 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x0 PUSH2 0x1C4A SWAP2 SWAP1 PUSH2 0x27AF JUMP JUMPDEST PUSH1 0x2 DUP3 ADD PUSH1 0x0 PUSH2 0x1C5A SWAP2 SWAP1 PUSH2 0x27D0 JUMP JUMPDEST PUSH1 0x3 DUP3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x4 DUP3 ADD PUSH1 0x0 PUSH2 0x1C91 SWAP2 SWAP1 PUSH2 0x27AF JUMP JUMPDEST PUSH1 0x5 DUP3 ADD PUSH1 0x0 PUSH2 0x1CA1 SWAP2 SWAP1 PUSH2 0x27D0 JUMP JUMPDEST PUSH1 0x6 DUP3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x6 DUP3 ADD PUSH1 0x10 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x10 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLVALUE LT ISZERO PUSH2 0x1D60 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D57 SWAP1 PUSH2 0x31B9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 DUP1 MLOAD DUP3 MLOAD EQ PUSH2 0x1DA6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D9D SWAP1 PUSH2 0x324B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 PUSH1 0x0 DUP8 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1E5E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E55 SWAP1 PUSH2 0x36B2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP8 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x6 ADD PUSH1 0x10 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x1F2C JUMPI POP PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP8 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x4 ADD DUP1 SLOAD SWAP1 POP EQ DUP1 ISZERO PUSH2 0x1F2B JUMPI POP PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP8 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD DUP1 SLOAD SWAP1 POP EQ JUMPDEST JUMPDEST PUSH2 0x1F6B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F62 SWAP1 PUSH2 0x3744 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1F77 CALLER ADDRESS DUP7 DUP7 PUSH2 0x25F5 JUMP JUMPDEST DUP4 PUSH1 0x2 PUSH1 0x0 DUP8 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x4 ADD SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x1FB5 SWAP3 SWAP2 SWAP1 PUSH2 0x27F1 JUMP JUMPDEST POP DUP3 PUSH1 0x2 PUSH1 0x0 DUP8 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x1FF4 SWAP3 SWAP2 SWAP1 PUSH2 0x287B JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x10 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP1 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLVALUE GT ISZERO PUSH2 0x2148 JUMPI DUP1 CALLVALUE PUSH2 0x203E SWAP2 SWAP1 PUSH2 0x30ED JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP9 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x6 ADD PUSH1 0x10 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x2 PUSH1 0x0 DUP8 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x6 ADD PUSH1 0x10 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH1 0x0 DUP3 DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2111 SWAP2 SWAP1 PUSH2 0x32A9 JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMPDEST DUP6 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0x2 PUSH1 0x0 DUP9 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x4E597EE0A0E4F52A7E43929928B9D21BD33282D3D7E7B2896CF4C0CD64C4029D PUSH1 0x2 PUSH1 0x0 DUP12 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x6 ADD PUSH1 0x10 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP10 DUP10 PUSH1 0x40 MLOAD PUSH2 0x2244 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x346B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x2285 PUSH2 0x266B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x22A3 PUSH2 0x2254 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x22F9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x22F0 SWAP1 PUSH2 0x34FC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2368 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x235F SWAP1 PUSH2 0x37D6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SELFBALANCE PUSH2 0x23BE SWAP2 SWAP1 PUSH2 0x37F6 JUMP JUMPDEST SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x23E9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x23F5 PUSH2 0x266B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2413 PUSH2 0x2254 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2469 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2460 SWAP1 PUSH2 0x34FC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x10 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0x220ACE5BD7DF3A0637BC16073257C1C74F8A207436C0C1A8CF098FF268D4078A DUP2 PUSH1 0x40 MLOAD PUSH2 0x24D1 SWAP2 SWAP1 PUSH2 0x2FD3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x10 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x2506 PUSH2 0x266B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2524 PUSH2 0x2254 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x257A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2571 SWAP1 PUSH2 0x34FC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x25E9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x25E0 SWAP1 PUSH2 0x389C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x25F2 DUP2 PUSH2 0x2673 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x2664 JUMPI PUSH2 0x2651 DUP6 DUP6 DUP6 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x2619 JUMPI PUSH2 0x2618 PUSH2 0x38BC JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x2634 JUMPI PUSH2 0x2633 PUSH2 0x38BC JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x2737 JUMP JUMPDEST DUP1 DUP1 PUSH2 0x265C SWAP1 PUSH2 0x38EB JUMP JUMPDEST SWAP2 POP POP PUSH2 0x25F8 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xB88D4FDE DUP7 DUP7 DUP6 DUP6 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2776 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x39CA JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2790 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x27A4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST POP DUP1 SLOAD PUSH1 0x0 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP1 PUSH2 0x27CD SWAP2 SWAP1 PUSH2 0x28C8 JUMP JUMPDEST POP JUMP JUMPDEST POP DUP1 SLOAD PUSH1 0x0 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP1 PUSH2 0x27EE SWAP2 SWAP1 PUSH2 0x28C8 JUMP JUMPDEST POP JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0x286A JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x2869 JUMPI DUP3 MLOAD DUP3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x2811 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH2 0x2877 SWAP2 SWAP1 PUSH2 0x28C8 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0x28B7 JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x28B6 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x289B JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH2 0x28C4 SWAP2 SWAP1 PUSH2 0x28C8 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x28E1 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0x28C9 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2916 DUP2 PUSH2 0x28F9 JUMP JUMPDEST DUP2 EQ PUSH2 0x2921 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2933 DUP2 PUSH2 0x290D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x294F JUMPI PUSH2 0x294E PUSH2 0x28EF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x295D DUP5 DUP3 DUP6 ADD PUSH2 0x2924 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2991 DUP3 PUSH2 0x2966 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x29A1 DUP2 PUSH2 0x2986 JUMP JUMPDEST DUP2 EQ PUSH2 0x29AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x29BE DUP2 PUSH2 0x2998 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x29D7 DUP2 PUSH2 0x29C4 JUMP JUMPDEST DUP2 EQ PUSH2 0x29E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x29F4 DUP2 PUSH2 0x29CE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x2A4D DUP3 PUSH2 0x2A04 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x2A6C JUMPI PUSH2 0x2A6B PUSH2 0x2A15 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A7F PUSH2 0x28E5 JUMP JUMPDEST SWAP1 POP PUSH2 0x2A8B DUP3 DUP3 PUSH2 0x2A44 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2AAB JUMPI PUSH2 0x2AAA PUSH2 0x2A15 JUMP JUMPDEST JUMPDEST PUSH2 0x2AB4 DUP3 PUSH2 0x2A04 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2AE3 PUSH2 0x2ADE DUP5 PUSH2 0x2A90 JUMP JUMPDEST PUSH2 0x2A75 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x2AFF JUMPI PUSH2 0x2AFE PUSH2 0x29FF JUMP JUMPDEST JUMPDEST PUSH2 0x2B0A DUP5 DUP3 DUP6 PUSH2 0x2AC1 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2B27 JUMPI PUSH2 0x2B26 PUSH2 0x29FA JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2B37 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x2AD0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x2B5A JUMPI PUSH2 0x2B59 PUSH2 0x28EF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2B68 DUP8 DUP3 DUP9 ADD PUSH2 0x29AF JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x2B79 DUP8 DUP3 DUP9 ADD PUSH2 0x29AF JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x2B8A DUP8 DUP3 DUP9 ADD PUSH2 0x29E5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2BAB JUMPI PUSH2 0x2BAA PUSH2 0x28F4 JUMP JUMPDEST JUMPDEST PUSH2 0x2BB7 DUP8 DUP3 DUP9 ADD PUSH2 0x2B12 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2BF8 DUP2 PUSH2 0x2BC3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2C13 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2BEF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2C34 JUMPI PUSH2 0x2C33 PUSH2 0x2A15 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2C5D PUSH2 0x2C58 DUP5 PUSH2 0x2C19 JUMP JUMPDEST PUSH2 0x2A75 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x2C80 JUMPI PUSH2 0x2C7F PUSH2 0x2C45 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2CA9 JUMPI DUP1 PUSH2 0x2C95 DUP9 DUP3 PUSH2 0x29AF JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2C82 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2CC8 JUMPI PUSH2 0x2CC7 PUSH2 0x29FA JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2CD8 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x2C4A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2CFC JUMPI PUSH2 0x2CFB PUSH2 0x2A15 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2D20 PUSH2 0x2D1B DUP5 PUSH2 0x2CE1 JUMP JUMPDEST PUSH2 0x2A75 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x2D43 JUMPI PUSH2 0x2D42 PUSH2 0x2C45 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2D6C JUMPI DUP1 PUSH2 0x2D58 DUP9 DUP3 PUSH2 0x29E5 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2D45 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2D8B JUMPI PUSH2 0x2D8A PUSH2 0x29FA JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2D9B DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x2D0D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2DBD JUMPI PUSH2 0x2DBC PUSH2 0x28EF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2DCB DUP7 DUP3 DUP8 ADD PUSH2 0x29AF JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2DEC JUMPI PUSH2 0x2DEB PUSH2 0x28F4 JUMP JUMPDEST JUMPDEST PUSH2 0x2DF8 DUP7 DUP3 DUP8 ADD PUSH2 0x2CB3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2E19 JUMPI PUSH2 0x2E18 PUSH2 0x28F4 JUMP JUMPDEST JUMPDEST PUSH2 0x2E25 DUP7 DUP3 DUP8 ADD PUSH2 0x2D76 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2E48 JUMPI PUSH2 0x2E47 PUSH2 0x28EF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2E56 DUP7 DUP3 DUP8 ADD PUSH2 0x2924 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2E77 JUMPI PUSH2 0x2E76 PUSH2 0x28F4 JUMP JUMPDEST JUMPDEST PUSH2 0x2E83 DUP7 DUP3 DUP8 ADD PUSH2 0x2CB3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2EA4 JUMPI PUSH2 0x2EA3 PUSH2 0x28F4 JUMP JUMPDEST JUMPDEST PUSH2 0x2EB0 DUP7 DUP3 DUP8 ADD PUSH2 0x2D76 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x2EC3 DUP2 PUSH2 0x2986 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2EDE PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2EBA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2EEF DUP3 PUSH2 0x2966 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2EFF DUP2 PUSH2 0x2EE4 JUMP JUMPDEST DUP2 EQ PUSH2 0x2F0A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2F1C DUP2 PUSH2 0x2EF6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2F38 JUMPI PUSH2 0x2F37 PUSH2 0x28EF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2F46 DUP5 DUP3 DUP6 ADD PUSH2 0x2F0D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2F74 DUP2 PUSH2 0x2F4F JUMP JUMPDEST DUP2 EQ PUSH2 0x2F7F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2F91 DUP2 PUSH2 0x2F6B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2FAD JUMPI PUSH2 0x2FAC PUSH2 0x28EF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2FBB DUP5 DUP3 DUP6 ADD PUSH2 0x2F82 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2FCD DUP2 PUSH2 0x2F4F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2FE8 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2FC4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3004 JUMPI PUSH2 0x3003 PUSH2 0x28EF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3012 DUP5 DUP3 DUP6 ADD PUSH2 0x29AF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x54616D61676F537761703A2043616E27742063616E63656C20737761702C206D PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7573742062652073776170207061727469636970616E74000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3088 PUSH1 0x37 DUP4 PUSH2 0x301B JUMP JUMPDEST SWAP2 POP PUSH2 0x3093 DUP3 PUSH2 0x302C JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x30B7 DUP2 PUSH2 0x307B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x30F8 DUP3 PUSH2 0x2F4F JUMP JUMPDEST SWAP2 POP PUSH2 0x3103 DUP4 PUSH2 0x2F4F JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x3116 JUMPI PUSH2 0x3115 PUSH2 0x30BE JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x54616D61676F537761703A2053656E742045544820616D6F756E74206E656564 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7320746F206265206D6F7265206F7220657175616C206170706C69636174696F PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x6E20666565000000000000000000000000000000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x31A3 PUSH1 0x45 DUP4 PUSH2 0x301B JUMP JUMPDEST SWAP2 POP PUSH2 0x31AE DUP3 PUSH2 0x3121 JUMP JUMPDEST PUSH1 0x60 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x31D2 DUP2 PUSH2 0x3196 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x54616D61676F537761703A204E465420616E6420494420617272617973206861 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x766520746F2062652073616D65206C656E677468000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3235 PUSH1 0x34 DUP4 PUSH2 0x301B JUMP JUMPDEST SWAP2 POP PUSH2 0x3240 DUP3 PUSH2 0x31D9 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3264 DUP2 PUSH2 0x3228 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3276 DUP3 PUSH2 0x28F9 JUMP JUMPDEST SWAP2 POP PUSH2 0x3281 DUP4 PUSH2 0x28F9 JUMP JUMPDEST SWAP3 POP DUP3 PUSH8 0xFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x329E JUMPI PUSH2 0x329D PUSH2 0x30BE JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x32B4 DUP3 PUSH2 0x2F4F JUMP JUMPDEST SWAP2 POP PUSH2 0x32BF DUP4 PUSH2 0x2F4F JUMP JUMPDEST SWAP3 POP DUP3 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x32E4 JUMPI PUSH2 0x32E3 PUSH2 0x30BE JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3324 DUP2 PUSH2 0x2986 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3336 DUP4 DUP4 PUSH2 0x331B JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x335A DUP3 PUSH2 0x32EF JUMP JUMPDEST PUSH2 0x3364 DUP2 DUP6 PUSH2 0x32FA JUMP JUMPDEST SWAP4 POP PUSH2 0x336F DUP4 PUSH2 0x330B JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x33A0 JUMPI DUP2 MLOAD PUSH2 0x3387 DUP9 DUP3 PUSH2 0x332A JUMP JUMPDEST SWAP8 POP PUSH2 0x3392 DUP4 PUSH2 0x3342 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x3373 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x33E2 DUP2 PUSH2 0x29C4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x33F4 DUP4 DUP4 PUSH2 0x33D9 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3418 DUP3 PUSH2 0x33AD JUMP JUMPDEST PUSH2 0x3422 DUP2 DUP6 PUSH2 0x33B8 JUMP JUMPDEST SWAP4 POP PUSH2 0x342D DUP4 PUSH2 0x33C9 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x345E JUMPI DUP2 MLOAD PUSH2 0x3445 DUP9 DUP3 PUSH2 0x33E8 JUMP JUMPDEST SWAP8 POP PUSH2 0x3450 DUP4 PUSH2 0x3400 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x3431 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x3480 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x2FC4 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x3492 DUP2 DUP6 PUSH2 0x334F JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x34A6 DUP2 DUP5 PUSH2 0x340D JUMP JUMPDEST SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x34E6 PUSH1 0x20 DUP4 PUSH2 0x301B JUMP JUMPDEST SWAP2 POP PUSH2 0x34F1 DUP3 PUSH2 0x34B0 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3515 DUP2 PUSH2 0x34D9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x54616D61676F537761703A2063616C6C6572206973206E6F7420737761702069 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6E69746961746F72000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3578 PUSH1 0x28 DUP4 PUSH2 0x301B JUMP JUMPDEST SWAP2 POP PUSH2 0x3583 DUP3 PUSH2 0x351C JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x35A7 DUP2 PUSH2 0x356B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x54616D61676F537761703A2043616E27742061636365707420737761702C2062 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F7468207061727469636970616E7473206469646E277420616464204E465473 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x360A PUSH1 0x40 DUP4 PUSH2 0x301B JUMP JUMPDEST SWAP2 POP PUSH2 0x3615 DUP3 PUSH2 0x35AE JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3639 DUP2 PUSH2 0x35FD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x54616D61676F537761703A2063616C6C6572206973206E6F7420737761702070 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6172746963697061746F72000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x369C PUSH1 0x2B DUP4 PUSH2 0x301B JUMP JUMPDEST SWAP2 POP PUSH2 0x36A7 DUP3 PUSH2 0x3640 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x36CB DUP2 PUSH2 0x368F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x54616D61676F537761703A207377617020616C726561647920696E6974696174 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6564000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x372E PUSH1 0x22 DUP4 PUSH2 0x301B JUMP JUMPDEST SWAP2 POP PUSH2 0x3739 DUP3 PUSH2 0x36D2 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x375D DUP2 PUSH2 0x3721 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x537761704B6977693A207472616E7366657220746F20746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x37C0 PUSH1 0x26 DUP4 PUSH2 0x301B JUMP JUMPDEST SWAP2 POP PUSH2 0x37CB DUP3 PUSH2 0x3764 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x37EF DUP2 PUSH2 0x37B3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3801 DUP3 PUSH2 0x29C4 JUMP JUMPDEST SWAP2 POP PUSH2 0x380C DUP4 PUSH2 0x29C4 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x381F JUMPI PUSH2 0x381E PUSH2 0x30BE JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3886 PUSH1 0x26 DUP4 PUSH2 0x301B JUMP JUMPDEST SWAP2 POP PUSH2 0x3891 DUP3 PUSH2 0x382A JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x38B5 DUP2 PUSH2 0x3879 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x38F6 DUP3 PUSH2 0x29C4 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x3928 JUMPI PUSH2 0x3927 PUSH2 0x30BE JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x393C DUP2 PUSH2 0x29C4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x397C JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x3961 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x398B JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x399C DUP3 PUSH2 0x3942 JUMP JUMPDEST PUSH2 0x39A6 DUP2 DUP6 PUSH2 0x394D JUMP JUMPDEST SWAP4 POP PUSH2 0x39B6 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x395E JUMP JUMPDEST PUSH2 0x39BF DUP2 PUSH2 0x2A04 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x39DF PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x2EBA JUMP JUMPDEST PUSH2 0x39EC PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x2EBA JUMP JUMPDEST PUSH2 0x39F9 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x3933 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x3A0B DUP2 DUP5 PUSH2 0x3991 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP5 CREATE PUSH4 0x57EC6BBB 0xDF 0x5D SWAP11 DUP11 PUSH3 0xC06D13 CREATE 0xAD 0xDE BALANCE BYTE EQ PC SWAP5 LOG1 SWAP8 DUP1 PUSH23 0x9C9C6A400A64736F6C634300080E003300000000000000 ",
              "sourceMap": "321:8556:7:-:0;;;2015:139;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;921:32:0;940:12;:10;;;:12;;:::i;:::-;921:18;;;:32;;:::i;:::-;2089:12:7;2083:3;;:18;;;;;;;;;;;;;;;;;;2105:45;2129:20;2105:23;;;;;:45;;:::i;:::-;2015:139;;321:8556;;640:96:5;693:7;719:10;712:17;;640:96;:::o;2270:187:0:-;2343:16;2362:6;;;;;;;;;;;2343:25;;2387:8;2378:6;;:17;;;;;;;;;;;;;;;;;;2441:8;2410:40;;2431:8;2410:40;;;;;;;;;;;;2333:124;2270:187;:::o;1918:198::-;1259:12;:10;;;:12;;:::i;:::-;1248:23;;:7;:5;;;:7;;:::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;2026:1:::1;2006:22;;:8;:22;;::::0;1998:73:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;2081:28;2100:8;2081:18;;;:28;;:::i;:::-;1918:198:::0;:::o;1036:85::-;1082:7;1108:6;;;;;;;;;;;1101:13;;1036:85;:::o;88:117:8:-;197:1;194;187:12;334:118;371:7;411:34;404:5;400:46;389:57;;334:118;;;:::o;458:122::-;531:24;549:5;531:24;:::i;:::-;524:5;521:35;511:63;;570:1;567;560:12;511:63;458:122;:::o;586:143::-;643:5;674:6;668:13;659:22;;690:33;717:5;690:33;:::i;:::-;586:143;;;;:::o;735:126::-;772:7;812:42;805:5;801:54;790:65;;735:126;;;:::o;867:96::-;904:7;933:24;951:5;933:24;:::i;:::-;922:35;;867:96;;;:::o;969:122::-;1042:24;1060:5;1042:24;:::i;:::-;1035:5;1032:35;1022:63;;1081:1;1078;1071:12;1022:63;969:122;:::o;1097:143::-;1154:5;1185:6;1179:13;1170:22;;1201:33;1228:5;1201:33;:::i;:::-;1097:143;;;;:::o;1246:507::-;1325:6;1333;1382:2;1370:9;1361:7;1357:23;1353:32;1350:119;;;1388:79;;:::i;:::-;1350:119;1508:1;1533:64;1589:7;1580:6;1569:9;1565:22;1533:64;:::i;:::-;1523:74;;1479:128;1646:2;1672:64;1728:7;1719:6;1708:9;1704:22;1672:64;:::i;:::-;1662:74;;1617:129;1246:507;;;;;:::o;1759:169::-;1843:11;1877:6;1872:3;1865:19;1917:4;1912:3;1908:14;1893:29;;1759:169;;;;:::o;1934:182::-;2074:34;2070:1;2062:6;2058:14;2051:58;1934:182;:::o;2122:366::-;2264:3;2285:67;2349:2;2344:3;2285:67;:::i;:::-;2278:74;;2361:93;2450:3;2361:93;:::i;:::-;2479:2;2474:3;2470:12;2463:19;;2122:366;;;:::o;2494:419::-;2660:4;2698:2;2687:9;2683:18;2675:26;;2747:9;2741:4;2737:20;2733:1;2722:9;2718:17;2711:47;2775:131;2901:4;2775:131;:::i;:::-;2767:139;;2494:419;;;:::o;2919:225::-;3059:34;3055:1;3047:6;3043:14;3036:58;3128:8;3123:2;3115:6;3111:15;3104:33;2919:225;:::o;3150:366::-;3292:3;3313:67;3377:2;3372:3;3313:67;:::i;:::-;3306:74;;3389:93;3478:3;3389:93;:::i;:::-;3507:2;3502:3;3498:12;3491:19;;3150:366;;;:::o;3522:419::-;3688:4;3726:2;3715:9;3711:18;3703:26;;3775:9;3769:4;3765:20;3761:1;3750:9;3746:17;3739:47;3803:131;3929:4;3803:131;:::i;:::-;3795:139;;3522:419;;;:::o;321:8556:7:-;;;;;;;"
            },
            "deployedBytecode": {
              "functionDebugData": {
                "@_msgSender_355": {
                  "entryPoint": 9835,
                  "id": 355,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "@_transferOwnership_103": {
                  "entryPoint": 9843,
                  "id": 103,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "@acceptSwap_986": {
                  "entryPoint": 4378,
                  "id": 986,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "@cancelSwap_1144": {
                  "entryPoint": 592,
                  "id": 1144,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "@fee_393": {
                  "entryPoint": 9436,
                  "id": 393,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@initiateSwap_812": {
                  "entryPoint": 7405,
                  "id": 812,
                  "parameterSlots": 3,
                  "returnSlots": 0
                },
                "@onERC721Received_342": {
                  "entryPoint": 3259,
                  "id": 342,
                  "parameterSlots": 4,
                  "returnSlots": 1
                },
                "@owner_32": {
                  "entryPoint": 8788,
                  "id": 32,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "@proposeSwap_684": {
                  "entryPoint": 3279,
                  "id": 684,
                  "parameterSlots": 3,
                  "returnSlots": 0
                },
                "@renounceOwnership_60": {
                  "entryPoint": 4242,
                  "id": 60,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@safeMultipleTransfersFrom_1183": {
                  "entryPoint": 9717,
                  "id": 1183,
                  "parameterSlots": 4,
                  "returnSlots": 0
                },
                "@safeTransferFrom_1207": {
                  "entryPoint": 10039,
                  "id": 1207,
                  "parameterSlots": 5,
                  "returnSlots": 0
                },
                "@setAppFee_574": {
                  "entryPoint": 9197,
                  "id": 574,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "@transferOwnership_83": {
                  "entryPoint": 9470,
                  "id": 83,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "@withdrawEther_1238": {
                  "entryPoint": 8829,
                  "id": 1238,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr": {
                  "entryPoint": 11338,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 1
                },
                "abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr": {
                  "entryPoint": 11533,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 1
                },
                "abi_decode_available_length_t_bytes_memory_ptr": {
                  "entryPoint": 10960,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 1
                },
                "abi_decode_t_address": {
                  "entryPoint": 10671,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_t_address_payable": {
                  "entryPoint": 12045,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_t_array$_t_address_$dyn_memory_ptr": {
                  "entryPoint": 11443,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_t_array$_t_uint256_$dyn_memory_ptr": {
                  "entryPoint": 11638,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_t_bytes_memory_ptr": {
                  "entryPoint": 11026,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_t_uint128": {
                  "entryPoint": 12162,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_t_uint256": {
                  "entryPoint": 10725,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_t_uint64": {
                  "entryPoint": 10532,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_tuple_t_address": {
                  "entryPoint": 12270,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_tuple_t_address_payable": {
                  "entryPoint": 12066,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr": {
                  "entryPoint": 11072,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 4
                },
                "abi_decode_tuple_t_addresst_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr": {
                  "entryPoint": 11684,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 3
                },
                "abi_decode_tuple_t_uint128": {
                  "entryPoint": 12183,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_tuple_t_uint64": {
                  "entryPoint": 10553,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_tuple_t_uint64t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr": {
                  "entryPoint": 11823,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 3
                },
                "abi_encodeUpdatedPos_t_address_to_t_address": {
                  "entryPoint": 13098,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encodeUpdatedPos_t_uint256_to_t_uint256": {
                  "entryPoint": 13288,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_t_address_to_t_address": {
                  "entryPoint": 13083,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "abi_encode_t_address_to_t_address_fromStack": {
                  "entryPoint": 11962,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack": {
                  "entryPoint": 13135,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack": {
                  "entryPoint": 13325,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_t_bytes4_to_t_bytes4_fromStack": {
                  "entryPoint": 11247,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack": {
                  "entryPoint": 14737,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack": {
                  "entryPoint": 14457,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_t_stringliteral_31462d0c7c62b4e669eb3c4207095a95e4463c3e8a74323217f416e4bbd08730_to_t_string_memory_ptr_fromStack": {
                  "entryPoint": 12694,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_t_stringliteral_7c11936e879e02ba8af5ac65179495154b284668aa2c04dfce7131087aa7595d_to_t_string_memory_ptr_fromStack": {
                  "entryPoint": 13967,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_t_stringliteral_953728946f4dd7c915837ecb7b08bc74f9ce9ef91eccfc26f01991f60f6fad9f_to_t_string_memory_ptr_fromStack": {
                  "entryPoint": 12411,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_t_stringliteral_98a1486cbfa3b557b740701a05e4c08459bb73548e1fbb3d25790ee22bcb4d9b_to_t_string_memory_ptr_fromStack": {
                  "entryPoint": 13675,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack": {
                  "entryPoint": 13529,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_t_stringliteral_cff939502c9eeeccfa94266f78ed7408a2ebceb3feb9a1845d0577828bfc6f3e_to_t_string_memory_ptr_fromStack": {
                  "entryPoint": 12840,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_t_stringliteral_e4bc94dc7e0f6ea744b0216d3560bbacc55b7ae7dfd5b7d9106cd4b3fc41a6de_to_t_string_memory_ptr_fromStack": {
                  "entryPoint": 14259,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_t_stringliteral_ead993d41c5eced30c94f7fda4f6f7557805adef8fd0aa2d3dfd14feef62bd94_to_t_string_memory_ptr_fromStack": {
                  "entryPoint": 13821,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_t_stringliteral_f61faac6105dde7c1f360d4cbad4dcdffde68858cd217607b25e250fe83f3d73_to_t_string_memory_ptr_fromStack": {
                  "entryPoint": 14113,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_t_uint128_to_t_uint128_fromStack": {
                  "entryPoint": 12228,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "abi_encode_t_uint256_to_t_uint256": {
                  "entryPoint": 13273,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "abi_encode_t_uint256_to_t_uint256_fromStack": {
                  "entryPoint": 14643,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
                  "entryPoint": 11977,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
                  "entryPoint": 14794,
                  "id": null,
                  "parameterSlots": 5,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed": {
                  "entryPoint": 11262,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": 14492,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_31462d0c7c62b4e669eb3c4207095a95e4463c3e8a74323217f416e4bbd08730__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": 12729,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_7c11936e879e02ba8af5ac65179495154b284668aa2c04dfce7131087aa7595d__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": 14002,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_953728946f4dd7c915837ecb7b08bc74f9ce9ef91eccfc26f01991f60f6fad9f__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": 12446,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_98a1486cbfa3b557b740701a05e4c08459bb73548e1fbb3d25790ee22bcb4d9b__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": 13710,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": 13564,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_cff939502c9eeeccfa94266f78ed7408a2ebceb3feb9a1845d0577828bfc6f3e__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": 12875,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_e4bc94dc7e0f6ea744b0216d3560bbacc55b7ae7dfd5b7d9106cd4b3fc41a6de__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": 14294,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_ead993d41c5eced30c94f7fda4f6f7557805adef8fd0aa2d3dfd14feef62bd94__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": 13856,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_f61faac6105dde7c1f360d4cbad4dcdffde68858cd217607b25e250fe83f3d73__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": 14148,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_uint128__to_t_uint128__fromStack_reversed": {
                  "entryPoint": 12243,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_uint128_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_uint128_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed": {
                  "entryPoint": 13419,
                  "id": null,
                  "parameterSlots": 4,
                  "returnSlots": 1
                },
                "allocate_memory": {
                  "entryPoint": 10869,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "allocate_unbounded": {
                  "entryPoint": 10469,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "array_allocation_size_t_array$_t_address_$dyn_memory_ptr": {
                  "entryPoint": 11289,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr": {
                  "entryPoint": 11489,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "array_allocation_size_t_bytes_memory_ptr": {
                  "entryPoint": 10896,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "array_dataslot_t_array$_t_address_$dyn_memory_ptr": {
                  "entryPoint": 13067,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "array_dataslot_t_array$_t_uint256_$dyn_memory_ptr": {
                  "entryPoint": 13257,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "array_length_t_array$_t_address_$dyn_memory_ptr": {
                  "entryPoint": 13039,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "array_length_t_array$_t_uint256_$dyn_memory_ptr": {
                  "entryPoint": 13229,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "array_length_t_bytes_memory_ptr": {
                  "entryPoint": 14658,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "array_nextElement_t_array$_t_address_$dyn_memory_ptr": {
                  "entryPoint": 13122,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "array_nextElement_t_array$_t_uint256_$dyn_memory_ptr": {
                  "entryPoint": 13312,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack": {
                  "entryPoint": 13050,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack": {
                  "entryPoint": 13240,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack": {
                  "entryPoint": 14669,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
                  "entryPoint": 12315,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "checked_add_t_uint128": {
                  "entryPoint": 12969,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "checked_add_t_uint64": {
                  "entryPoint": 12907,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "checked_sub_t_uint128": {
                  "entryPoint": 12525,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "checked_sub_t_uint256": {
                  "entryPoint": 14326,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "cleanup_t_address": {
                  "entryPoint": 10630,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_t_address_payable": {
                  "entryPoint": 12004,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_t_bytes4": {
                  "entryPoint": 11203,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_t_uint128": {
                  "entryPoint": 12111,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_t_uint160": {
                  "entryPoint": 10598,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_t_uint256": {
                  "entryPoint": 10692,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_t_uint64": {
                  "entryPoint": 10489,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "copy_calldata_to_memory": {
                  "entryPoint": 10945,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 0
                },
                "copy_memory_to_memory": {
                  "entryPoint": 14686,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 0
                },
                "finalize_allocation": {
                  "entryPoint": 10820,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "increment_t_uint256": {
                  "entryPoint": 14571,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "panic_error_0x11": {
                  "entryPoint": 12478,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "panic_error_0x32": {
                  "entryPoint": 14524,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "panic_error_0x41": {
                  "entryPoint": 10773,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
                  "entryPoint": 10746,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef": {
                  "entryPoint": 11333,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
                  "entryPoint": 10751,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
                  "entryPoint": 10484,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
                  "entryPoint": 10479,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "round_up_to_mul_of_32": {
                  "entryPoint": 10756,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe": {
                  "entryPoint": 14378,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "store_literal_in_memory_31462d0c7c62b4e669eb3c4207095a95e4463c3e8a74323217f416e4bbd08730": {
                  "entryPoint": 12577,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "store_literal_in_memory_7c11936e879e02ba8af5ac65179495154b284668aa2c04dfce7131087aa7595d": {
                  "entryPoint": 13888,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "store_literal_in_memory_953728946f4dd7c915837ecb7b08bc74f9ce9ef91eccfc26f01991f60f6fad9f": {
                  "entryPoint": 12332,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "store_literal_in_memory_98a1486cbfa3b557b740701a05e4c08459bb73548e1fbb3d25790ee22bcb4d9b": {
                  "entryPoint": 13596,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe": {
                  "entryPoint": 13488,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "store_literal_in_memory_cff939502c9eeeccfa94266f78ed7408a2ebceb3feb9a1845d0577828bfc6f3e": {
                  "entryPoint": 12761,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "store_literal_in_memory_e4bc94dc7e0f6ea744b0216d3560bbacc55b7ae7dfd5b7d9106cd4b3fc41a6de": {
                  "entryPoint": 14180,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "store_literal_in_memory_ead993d41c5eced30c94f7fda4f6f7557805adef8fd0aa2d3dfd14feef62bd94": {
                  "entryPoint": 13742,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "store_literal_in_memory_f61faac6105dde7c1f360d4cbad4dcdffde68858cd217607b25e250fe83f3d73": {
                  "entryPoint": 14034,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "validator_revert_t_address": {
                  "entryPoint": 10648,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "validator_revert_t_address_payable": {
                  "entryPoint": 12022,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "validator_revert_t_uint128": {
                  "entryPoint": 12139,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "validator_revert_t_uint256": {
                  "entryPoint": 10702,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "validator_revert_t_uint64": {
                  "entryPoint": 10509,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                }
              },
              "generatedSources": [
                {
                  "ast": {
                    "nodeType": "YulBlock",
                    "src": "0:31023:8",
                    "statements": [
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "47:35:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "57:19:8",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "73:2:8",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "67:5:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "67:9:8"
                              },
                              "variableNames": [
                                {
                                  "name": "memPtr",
                                  "nodeType": "YulIdentifier",
                                  "src": "57:6:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "allocate_unbounded",
                        "nodeType": "YulFunctionDefinition",
                        "returnVariables": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulTypedName",
                            "src": "40:6:8",
                            "type": ""
                          }
                        ],
                        "src": "7:75:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "177:28:8",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "194:1:8",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "197:1:8",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "187:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "187:12:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "187:12:8"
                            }
                          ]
                        },
                        "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                        "nodeType": "YulFunctionDefinition",
                        "src": "88:117:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "300:28:8",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "317:1:8",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "320:1:8",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "310:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "310:12:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "310:12:8"
                            }
                          ]
                        },
                        "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
                        "nodeType": "YulFunctionDefinition",
                        "src": "211:117:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "378:57:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "388:41:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "403:5:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "410:18:8",
                                    "type": "",
                                    "value": "0xffffffffffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "399:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "399:30:8"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nodeType": "YulIdentifier",
                                  "src": "388:7:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "cleanup_t_uint64",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "360:5:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulTypedName",
                            "src": "370:7:8",
                            "type": ""
                          }
                        ],
                        "src": "334:101:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "483:78:8",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "539:16:8",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "548:1:8",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "551:1:8",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "541:6:8"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "541:12:8"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "541:12:8"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "506:5:8"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "530:5:8"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "cleanup_t_uint64",
                                          "nodeType": "YulIdentifier",
                                          "src": "513:16:8"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "513:23:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "503:2:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "503:34:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "496:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "496:42:8"
                              },
                              "nodeType": "YulIf",
                              "src": "493:62:8"
                            }
                          ]
                        },
                        "name": "validator_revert_t_uint64",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "476:5:8",
                            "type": ""
                          }
                        ],
                        "src": "441:120:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "618:86:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "628:29:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "650:6:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "637:12:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "637:20:8"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "628:5:8"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "692:5:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_t_uint64",
                                  "nodeType": "YulIdentifier",
                                  "src": "666:25:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "666:32:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "666:32:8"
                            }
                          ]
                        },
                        "name": "abi_decode_t_uint64",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "596:6:8",
                            "type": ""
                          },
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "604:3:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "612:5:8",
                            "type": ""
                          }
                        ],
                        "src": "567:137:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "775:262:8",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "821:83:8",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                                        "nodeType": "YulIdentifier",
                                        "src": "823:77:8"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "823:79:8"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "823:79:8"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "796:7:8"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "805:9:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "792:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "792:23:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "817:2:8",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "788:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "788:32:8"
                              },
                              "nodeType": "YulIf",
                              "src": "785:119:8"
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "914:116:8",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "929:15:8",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "943:1:8",
                                    "type": "",
                                    "value": "0"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "933:6:8",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "958:62:8",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "992:9:8"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "1003:6:8"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "988:3:8"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "988:22:8"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "1012:7:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_uint64",
                                      "nodeType": "YulIdentifier",
                                      "src": "968:19:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "968:52:8"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value0",
                                      "nodeType": "YulIdentifier",
                                      "src": "958:6:8"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_uint64",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "745:9:8",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "756:7:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "768:6:8",
                            "type": ""
                          }
                        ],
                        "src": "710:327:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1088:81:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "1098:65:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "1113:5:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1120:42:8",
                                    "type": "",
                                    "value": "0xffffffffffffffffffffffffffffffffffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "1109:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1109:54:8"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nodeType": "YulIdentifier",
                                  "src": "1098:7:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "cleanup_t_uint160",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "1070:5:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulTypedName",
                            "src": "1080:7:8",
                            "type": ""
                          }
                        ],
                        "src": "1043:126:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1220:51:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "1230:35:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "1259:5:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_uint160",
                                  "nodeType": "YulIdentifier",
                                  "src": "1241:17:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1241:24:8"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nodeType": "YulIdentifier",
                                  "src": "1230:7:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "cleanup_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "1202:5:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulTypedName",
                            "src": "1212:7:8",
                            "type": ""
                          }
                        ],
                        "src": "1175:96:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1320:79:8",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1377:16:8",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1386:1:8",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1389:1:8",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "1379:6:8"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1379:12:8"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1379:12:8"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "1343:5:8"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "1368:5:8"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "cleanup_t_address",
                                          "nodeType": "YulIdentifier",
                                          "src": "1350:17:8"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "1350:24:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "1340:2:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1340:35:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "1333:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1333:43:8"
                              },
                              "nodeType": "YulIf",
                              "src": "1330:63:8"
                            }
                          ]
                        },
                        "name": "validator_revert_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "1313:5:8",
                            "type": ""
                          }
                        ],
                        "src": "1277:122:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1457:87:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "1467:29:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "1489:6:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "1476:12:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1476:20:8"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "1467:5:8"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "1532:5:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_t_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "1505:26:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1505:33:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1505:33:8"
                            }
                          ]
                        },
                        "name": "abi_decode_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "1435:6:8",
                            "type": ""
                          },
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "1443:3:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "1451:5:8",
                            "type": ""
                          }
                        ],
                        "src": "1405:139:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1595:32:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "1605:16:8",
                              "value": {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1616:5:8"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nodeType": "YulIdentifier",
                                  "src": "1605:7:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "cleanup_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "1577:5:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulTypedName",
                            "src": "1587:7:8",
                            "type": ""
                          }
                        ],
                        "src": "1550:77:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1676:79:8",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1733:16:8",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1742:1:8",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1745:1:8",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "1735:6:8"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1735:12:8"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1735:12:8"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "1699:5:8"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "1724:5:8"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "cleanup_t_uint256",
                                          "nodeType": "YulIdentifier",
                                          "src": "1706:17:8"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "1706:24:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "1696:2:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1696:35:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "1689:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1689:43:8"
                              },
                              "nodeType": "YulIf",
                              "src": "1686:63:8"
                            }
                          ]
                        },
                        "name": "validator_revert_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "1669:5:8",
                            "type": ""
                          }
                        ],
                        "src": "1633:122:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1813:87:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "1823:29:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "1845:6:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "1832:12:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1832:20:8"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "1823:5:8"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "1888:5:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_t_uint256",
                                  "nodeType": "YulIdentifier",
                                  "src": "1861:26:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1861:33:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1861:33:8"
                            }
                          ]
                        },
                        "name": "abi_decode_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "1791:6:8",
                            "type": ""
                          },
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "1799:3:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "1807:5:8",
                            "type": ""
                          }
                        ],
                        "src": "1761:139:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1995:28:8",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2012:1:8",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2015:1:8",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "2005:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2005:12:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2005:12:8"
                            }
                          ]
                        },
                        "name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
                        "nodeType": "YulFunctionDefinition",
                        "src": "1906:117:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2118:28:8",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2135:1:8",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2138:1:8",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "2128:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2128:12:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2128:12:8"
                            }
                          ]
                        },
                        "name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
                        "nodeType": "YulFunctionDefinition",
                        "src": "2029:117:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2200:54:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "2210:38:8",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "2228:5:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2235:2:8",
                                        "type": "",
                                        "value": "31"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "2224:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2224:14:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2244:2:8",
                                        "type": "",
                                        "value": "31"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "not",
                                      "nodeType": "YulIdentifier",
                                      "src": "2240:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2240:7:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "2220:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2220:28:8"
                              },
                              "variableNames": [
                                {
                                  "name": "result",
                                  "nodeType": "YulIdentifier",
                                  "src": "2210:6:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "round_up_to_mul_of_32",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "2183:5:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "result",
                            "nodeType": "YulTypedName",
                            "src": "2193:6:8",
                            "type": ""
                          }
                        ],
                        "src": "2152:102:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2288:152:8",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2305:1:8",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2308:77:8",
                                    "type": "",
                                    "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "2298:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2298:88:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2298:88:8"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2402:1:8",
                                    "type": "",
                                    "value": "4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2405:4:8",
                                    "type": "",
                                    "value": "0x41"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "2395:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2395:15:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2395:15:8"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2426:1:8",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2429:4:8",
                                    "type": "",
                                    "value": "0x24"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "2419:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2419:15:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2419:15:8"
                            }
                          ]
                        },
                        "name": "panic_error_0x41",
                        "nodeType": "YulFunctionDefinition",
                        "src": "2260:180:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2489:238:8",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "2499:58:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "memPtr",
                                    "nodeType": "YulIdentifier",
                                    "src": "2521:6:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "size",
                                        "nodeType": "YulIdentifier",
                                        "src": "2551:4:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "round_up_to_mul_of_32",
                                      "nodeType": "YulIdentifier",
                                      "src": "2529:21:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2529:27:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "2517:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2517:40:8"
                              },
                              "variables": [
                                {
                                  "name": "newFreePtr",
                                  "nodeType": "YulTypedName",
                                  "src": "2503:10:8",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "2668:22:8",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x41",
                                        "nodeType": "YulIdentifier",
                                        "src": "2670:16:8"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2670:18:8"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "2670:18:8"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "newFreePtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "2611:10:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2623:18:8",
                                        "type": "",
                                        "value": "0xffffffffffffffff"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "gt",
                                      "nodeType": "YulIdentifier",
                                      "src": "2608:2:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2608:34:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "newFreePtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "2647:10:8"
                                      },
                                      {
                                        "name": "memPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "2659:6:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "lt",
                                      "nodeType": "YulIdentifier",
                                      "src": "2644:2:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2644:22:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "or",
                                  "nodeType": "YulIdentifier",
                                  "src": "2605:2:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2605:62:8"
                              },
                              "nodeType": "YulIf",
                              "src": "2602:88:8"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2706:2:8",
                                    "type": "",
                                    "value": "64"
                                  },
                                  {
                                    "name": "newFreePtr",
                                    "nodeType": "YulIdentifier",
                                    "src": "2710:10:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "2699:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2699:22:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2699:22:8"
                            }
                          ]
                        },
                        "name": "finalize_allocation",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulTypedName",
                            "src": "2475:6:8",
                            "type": ""
                          },
                          {
                            "name": "size",
                            "nodeType": "YulTypedName",
                            "src": "2483:4:8",
                            "type": ""
                          }
                        ],
                        "src": "2446:281:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2774:88:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "2784:30:8",
                              "value": {
                                "arguments": [],
                                "functionName": {
                                  "name": "allocate_unbounded",
                                  "nodeType": "YulIdentifier",
                                  "src": "2794:18:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2794:20:8"
                              },
                              "variableNames": [
                                {
                                  "name": "memPtr",
                                  "nodeType": "YulIdentifier",
                                  "src": "2784:6:8"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "memPtr",
                                    "nodeType": "YulIdentifier",
                                    "src": "2843:6:8"
                                  },
                                  {
                                    "name": "size",
                                    "nodeType": "YulIdentifier",
                                    "src": "2851:4:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "finalize_allocation",
                                  "nodeType": "YulIdentifier",
                                  "src": "2823:19:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2823:33:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2823:33:8"
                            }
                          ]
                        },
                        "name": "allocate_memory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "size",
                            "nodeType": "YulTypedName",
                            "src": "2758:4:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulTypedName",
                            "src": "2767:6:8",
                            "type": ""
                          }
                        ],
                        "src": "2733:129:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2934:241:8",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "3039:22:8",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x41",
                                        "nodeType": "YulIdentifier",
                                        "src": "3041:16:8"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "3041:18:8"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "3041:18:8"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "3011:6:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3019:18:8",
                                    "type": "",
                                    "value": "0xffffffffffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "3008:2:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3008:30:8"
                              },
                              "nodeType": "YulIf",
                              "src": "3005:56:8"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "3071:37:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "3101:6:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "round_up_to_mul_of_32",
                                  "nodeType": "YulIdentifier",
                                  "src": "3079:21:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3079:29:8"
                              },
                              "variableNames": [
                                {
                                  "name": "size",
                                  "nodeType": "YulIdentifier",
                                  "src": "3071:4:8"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "3145:23:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "size",
                                    "nodeType": "YulIdentifier",
                                    "src": "3157:4:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3163:4:8",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "3153:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3153:15:8"
                              },
                              "variableNames": [
                                {
                                  "name": "size",
                                  "nodeType": "YulIdentifier",
                                  "src": "3145:4:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "array_allocation_size_t_bytes_memory_ptr",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "length",
                            "nodeType": "YulTypedName",
                            "src": "2918:6:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "size",
                            "nodeType": "YulTypedName",
                            "src": "2929:4:8",
                            "type": ""
                          }
                        ],
                        "src": "2868:307:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3232:103:8",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "dst",
                                    "nodeType": "YulIdentifier",
                                    "src": "3255:3:8"
                                  },
                                  {
                                    "name": "src",
                                    "nodeType": "YulIdentifier",
                                    "src": "3260:3:8"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "3265:6:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldatacopy",
                                  "nodeType": "YulIdentifier",
                                  "src": "3242:12:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3242:30:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3242:30:8"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dst",
                                        "nodeType": "YulIdentifier",
                                        "src": "3313:3:8"
                                      },
                                      {
                                        "name": "length",
                                        "nodeType": "YulIdentifier",
                                        "src": "3318:6:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3309:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3309:16:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3327:1:8",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "3302:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3302:27:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3302:27:8"
                            }
                          ]
                        },
                        "name": "copy_calldata_to_memory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "src",
                            "nodeType": "YulTypedName",
                            "src": "3214:3:8",
                            "type": ""
                          },
                          {
                            "name": "dst",
                            "nodeType": "YulTypedName",
                            "src": "3219:3:8",
                            "type": ""
                          },
                          {
                            "name": "length",
                            "nodeType": "YulTypedName",
                            "src": "3224:6:8",
                            "type": ""
                          }
                        ],
                        "src": "3181:154:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3424:327:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "3434:74:8",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "length",
                                        "nodeType": "YulIdentifier",
                                        "src": "3500:6:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "array_allocation_size_t_bytes_memory_ptr",
                                      "nodeType": "YulIdentifier",
                                      "src": "3459:40:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3459:48:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "allocate_memory",
                                  "nodeType": "YulIdentifier",
                                  "src": "3443:15:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3443:65:8"
                              },
                              "variableNames": [
                                {
                                  "name": "array",
                                  "nodeType": "YulIdentifier",
                                  "src": "3434:5:8"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "array",
                                    "nodeType": "YulIdentifier",
                                    "src": "3524:5:8"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "3531:6:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "3517:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3517:21:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3517:21:8"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "3547:27:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "array",
                                    "nodeType": "YulIdentifier",
                                    "src": "3562:5:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3569:4:8",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "3558:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3558:16:8"
                              },
                              "variables": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulTypedName",
                                  "src": "3551:3:8",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "3612:83:8",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
                                        "nodeType": "YulIdentifier",
                                        "src": "3614:77:8"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "3614:79:8"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "3614:79:8"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "src",
                                        "nodeType": "YulIdentifier",
                                        "src": "3593:3:8"
                                      },
                                      {
                                        "name": "length",
                                        "nodeType": "YulIdentifier",
                                        "src": "3598:6:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3589:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3589:16:8"
                                  },
                                  {
                                    "name": "end",
                                    "nodeType": "YulIdentifier",
                                    "src": "3607:3:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "3586:2:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3586:25:8"
                              },
                              "nodeType": "YulIf",
                              "src": "3583:112:8"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "src",
                                    "nodeType": "YulIdentifier",
                                    "src": "3728:3:8"
                                  },
                                  {
                                    "name": "dst",
                                    "nodeType": "YulIdentifier",
                                    "src": "3733:3:8"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "3738:6:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "copy_calldata_to_memory",
                                  "nodeType": "YulIdentifier",
                                  "src": "3704:23:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3704:41:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3704:41:8"
                            }
                          ]
                        },
                        "name": "abi_decode_available_length_t_bytes_memory_ptr",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "src",
                            "nodeType": "YulTypedName",
                            "src": "3397:3:8",
                            "type": ""
                          },
                          {
                            "name": "length",
                            "nodeType": "YulTypedName",
                            "src": "3402:6:8",
                            "type": ""
                          },
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "3410:3:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "array",
                            "nodeType": "YulTypedName",
                            "src": "3418:5:8",
                            "type": ""
                          }
                        ],
                        "src": "3341:410:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3831:277:8",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "3880:83:8",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
                                        "nodeType": "YulIdentifier",
                                        "src": "3882:77:8"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "3882:79:8"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "3882:79:8"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "3859:6:8"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "3867:4:8",
                                            "type": "",
                                            "value": "0x1f"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "3855:3:8"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "3855:17:8"
                                      },
                                      {
                                        "name": "end",
                                        "nodeType": "YulIdentifier",
                                        "src": "3874:3:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "slt",
                                      "nodeType": "YulIdentifier",
                                      "src": "3851:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3851:27:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "3844:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3844:35:8"
                              },
                              "nodeType": "YulIf",
                              "src": "3841:122:8"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "3972:34:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "3999:6:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "3986:12:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3986:20:8"
                              },
                              "variables": [
                                {
                                  "name": "length",
                                  "nodeType": "YulTypedName",
                                  "src": "3976:6:8",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "4015:87:8",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "offset",
                                        "nodeType": "YulIdentifier",
                                        "src": "4075:6:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "4083:4:8",
                                        "type": "",
                                        "value": "0x20"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "4071:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4071:17:8"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "4090:6:8"
                                  },
                                  {
                                    "name": "end",
                                    "nodeType": "YulIdentifier",
                                    "src": "4098:3:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_available_length_t_bytes_memory_ptr",
                                  "nodeType": "YulIdentifier",
                                  "src": "4024:46:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4024:78:8"
                              },
                              "variableNames": [
                                {
                                  "name": "array",
                                  "nodeType": "YulIdentifier",
                                  "src": "4015:5:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_t_bytes_memory_ptr",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "3809:6:8",
                            "type": ""
                          },
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "3817:3:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "array",
                            "nodeType": "YulTypedName",
                            "src": "3825:5:8",
                            "type": ""
                          }
                        ],
                        "src": "3770:338:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "4240:817:8",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "4287:83:8",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                                        "nodeType": "YulIdentifier",
                                        "src": "4289:77:8"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "4289:79:8"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "4289:79:8"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "4261:7:8"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "4270:9:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "4257:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4257:23:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4282:3:8",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "4253:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4253:33:8"
                              },
                              "nodeType": "YulIf",
                              "src": "4250:120:8"
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "4380:117:8",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "4395:15:8",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4409:1:8",
                                    "type": "",
                                    "value": "0"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "4399:6:8",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "4424:63:8",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "4459:9:8"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "4470:6:8"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "4455:3:8"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "4455:22:8"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "4479:7:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_address",
                                      "nodeType": "YulIdentifier",
                                      "src": "4434:20:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4434:53:8"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value0",
                                      "nodeType": "YulIdentifier",
                                      "src": "4424:6:8"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "4507:118:8",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "4522:16:8",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4536:2:8",
                                    "type": "",
                                    "value": "32"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "4526:6:8",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "4552:63:8",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "4587:9:8"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "4598:6:8"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "4583:3:8"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "4583:22:8"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "4607:7:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_address",
                                      "nodeType": "YulIdentifier",
                                      "src": "4562:20:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4562:53:8"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value1",
                                      "nodeType": "YulIdentifier",
                                      "src": "4552:6:8"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "4635:118:8",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "4650:16:8",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4664:2:8",
                                    "type": "",
                                    "value": "64"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "4654:6:8",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "4680:63:8",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "4715:9:8"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "4726:6:8"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "4711:3:8"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "4711:22:8"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "4735:7:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_uint256",
                                      "nodeType": "YulIdentifier",
                                      "src": "4690:20:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4690:53:8"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value2",
                                      "nodeType": "YulIdentifier",
                                      "src": "4680:6:8"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "4763:287:8",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "4778:46:8",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "4809:9:8"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "4820:2:8",
                                            "type": "",
                                            "value": "96"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "4805:3:8"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "4805:18:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "calldataload",
                                      "nodeType": "YulIdentifier",
                                      "src": "4792:12:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4792:32:8"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "4782:6:8",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "body": {
                                    "nodeType": "YulBlock",
                                    "src": "4871:83:8",
                                    "statements": [
                                      {
                                        "expression": {
                                          "arguments": [],
                                          "functionName": {
                                            "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
                                            "nodeType": "YulIdentifier",
                                            "src": "4873:77:8"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "4873:79:8"
                                        },
                                        "nodeType": "YulExpressionStatement",
                                        "src": "4873:79:8"
                                      }
                                    ]
                                  },
                                  "condition": {
                                    "arguments": [
                                      {
                                        "name": "offset",
                                        "nodeType": "YulIdentifier",
                                        "src": "4843:6:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "4851:18:8",
                                        "type": "",
                                        "value": "0xffffffffffffffff"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "gt",
                                      "nodeType": "YulIdentifier",
                                      "src": "4840:2:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4840:30:8"
                                  },
                                  "nodeType": "YulIf",
                                  "src": "4837:117:8"
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "4968:72:8",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "5012:9:8"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "5023:6:8"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "5008:3:8"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "5008:22:8"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "5032:7:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_bytes_memory_ptr",
                                      "nodeType": "YulIdentifier",
                                      "src": "4978:29:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4978:62:8"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value3",
                                      "nodeType": "YulIdentifier",
                                      "src": "4968:6:8"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "4186:9:8",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "4197:7:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "4209:6:8",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "4217:6:8",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulTypedName",
                            "src": "4225:6:8",
                            "type": ""
                          },
                          {
                            "name": "value3",
                            "nodeType": "YulTypedName",
                            "src": "4233:6:8",
                            "type": ""
                          }
                        ],
                        "src": "4114:943:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "5107:105:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "5117:89:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "5132:5:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5139:66:8",
                                    "type": "",
                                    "value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "5128:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5128:78:8"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nodeType": "YulIdentifier",
                                  "src": "5117:7:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "cleanup_t_bytes4",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "5089:5:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulTypedName",
                            "src": "5099:7:8",
                            "type": ""
                          }
                        ],
                        "src": "5063:149:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "5281:52:8",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "5298:3:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "5320:5:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "cleanup_t_bytes4",
                                      "nodeType": "YulIdentifier",
                                      "src": "5303:16:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5303:23:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "5291:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5291:36:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5291:36:8"
                            }
                          ]
                        },
                        "name": "abi_encode_t_bytes4_to_t_bytes4_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "5269:5:8",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "5276:3:8",
                            "type": ""
                          }
                        ],
                        "src": "5218:115:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "5435:122:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "5445:26:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "5457:9:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5468:2:8",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "5453:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5453:18:8"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "5445:4:8"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "5523:6:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "5536:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "5547:1:8",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "5532:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5532:17:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_bytes4_to_t_bytes4_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "5481:41:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5481:69:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5481:69:8"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "5407:9:8",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "5419:6:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "5430:4:8",
                            "type": ""
                          }
                        ],
                        "src": "5339:218:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "5645:229:8",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "5750:22:8",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x41",
                                        "nodeType": "YulIdentifier",
                                        "src": "5752:16:8"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "5752:18:8"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "5752:18:8"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "5722:6:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5730:18:8",
                                    "type": "",
                                    "value": "0xffffffffffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "5719:2:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5719:30:8"
                              },
                              "nodeType": "YulIf",
                              "src": "5716:56:8"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "5782:25:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "5794:6:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5802:4:8",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "mul",
                                  "nodeType": "YulIdentifier",
                                  "src": "5790:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5790:17:8"
                              },
                              "variableNames": [
                                {
                                  "name": "size",
                                  "nodeType": "YulIdentifier",
                                  "src": "5782:4:8"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "5844:23:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "size",
                                    "nodeType": "YulIdentifier",
                                    "src": "5856:4:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5862:4:8",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "5852:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5852:15:8"
                              },
                              "variableNames": [
                                {
                                  "name": "size",
                                  "nodeType": "YulIdentifier",
                                  "src": "5844:4:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "array_allocation_size_t_array$_t_address_$dyn_memory_ptr",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "length",
                            "nodeType": "YulTypedName",
                            "src": "5629:6:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "size",
                            "nodeType": "YulTypedName",
                            "src": "5640:4:8",
                            "type": ""
                          }
                        ],
                        "src": "5563:311:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "5969:28:8",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5986:1:8",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5989:1:8",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "5979:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5979:12:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5979:12:8"
                            }
                          ]
                        },
                        "name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
                        "nodeType": "YulFunctionDefinition",
                        "src": "5880:117:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "6122:608:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "6132:90:8",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "length",
                                        "nodeType": "YulIdentifier",
                                        "src": "6214:6:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "array_allocation_size_t_array$_t_address_$dyn_memory_ptr",
                                      "nodeType": "YulIdentifier",
                                      "src": "6157:56:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6157:64:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "allocate_memory",
                                  "nodeType": "YulIdentifier",
                                  "src": "6141:15:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6141:81:8"
                              },
                              "variableNames": [
                                {
                                  "name": "array",
                                  "nodeType": "YulIdentifier",
                                  "src": "6132:5:8"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "6231:16:8",
                              "value": {
                                "name": "array",
                                "nodeType": "YulIdentifier",
                                "src": "6242:5:8"
                              },
                              "variables": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulTypedName",
                                  "src": "6235:3:8",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "array",
                                    "nodeType": "YulIdentifier",
                                    "src": "6264:5:8"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "6271:6:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "6257:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6257:21:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "6257:21:8"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "6287:23:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "array",
                                    "nodeType": "YulIdentifier",
                                    "src": "6298:5:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6305:4:8",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "6294:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6294:16:8"
                              },
                              "variableNames": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "6287:3:8"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "6320:44:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "6338:6:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "length",
                                        "nodeType": "YulIdentifier",
                                        "src": "6350:6:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "6358:4:8",
                                        "type": "",
                                        "value": "0x20"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mul",
                                      "nodeType": "YulIdentifier",
                                      "src": "6346:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6346:17:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "6334:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6334:30:8"
                              },
                              "variables": [
                                {
                                  "name": "srcEnd",
                                  "nodeType": "YulTypedName",
                                  "src": "6324:6:8",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "6392:103:8",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
                                        "nodeType": "YulIdentifier",
                                        "src": "6406:77:8"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "6406:79:8"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "6406:79:8"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "srcEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "6379:6:8"
                                  },
                                  {
                                    "name": "end",
                                    "nodeType": "YulIdentifier",
                                    "src": "6387:3:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "6376:2:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6376:15:8"
                              },
                              "nodeType": "YulIf",
                              "src": "6373:122:8"
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "6580:144:8",
                                "statements": [
                                  {
                                    "nodeType": "YulVariableDeclaration",
                                    "src": "6595:21:8",
                                    "value": {
                                      "name": "src",
                                      "nodeType": "YulIdentifier",
                                      "src": "6613:3:8"
                                    },
                                    "variables": [
                                      {
                                        "name": "elementPos",
                                        "nodeType": "YulTypedName",
                                        "src": "6599:10:8",
                                        "type": ""
                                      }
                                    ]
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "dst",
                                          "nodeType": "YulIdentifier",
                                          "src": "6637:3:8"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "name": "elementPos",
                                              "nodeType": "YulIdentifier",
                                              "src": "6663:10:8"
                                            },
                                            {
                                              "name": "end",
                                              "nodeType": "YulIdentifier",
                                              "src": "6675:3:8"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "abi_decode_t_address",
                                            "nodeType": "YulIdentifier",
                                            "src": "6642:20:8"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "6642:37:8"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "6630:6:8"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "6630:50:8"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "6630:50:8"
                                  },
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "6693:21:8",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "dst",
                                          "nodeType": "YulIdentifier",
                                          "src": "6704:3:8"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "6709:4:8",
                                          "type": "",
                                          "value": "0x20"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "6700:3:8"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "6700:14:8"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "dst",
                                        "nodeType": "YulIdentifier",
                                        "src": "6693:3:8"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "src",
                                    "nodeType": "YulIdentifier",
                                    "src": "6533:3:8"
                                  },
                                  {
                                    "name": "srcEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "6538:6:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "lt",
                                  "nodeType": "YulIdentifier",
                                  "src": "6530:2:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6530:15:8"
                              },
                              "nodeType": "YulForLoop",
                              "post": {
                                "nodeType": "YulBlock",
                                "src": "6546:25:8",
                                "statements": [
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "6548:21:8",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "src",
                                          "nodeType": "YulIdentifier",
                                          "src": "6559:3:8"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "6564:4:8",
                                          "type": "",
                                          "value": "0x20"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "6555:3:8"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "6555:14:8"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "src",
                                        "nodeType": "YulIdentifier",
                                        "src": "6548:3:8"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "pre": {
                                "nodeType": "YulBlock",
                                "src": "6508:21:8",
                                "statements": [
                                  {
                                    "nodeType": "YulVariableDeclaration",
                                    "src": "6510:17:8",
                                    "value": {
                                      "name": "offset",
                                      "nodeType": "YulIdentifier",
                                      "src": "6521:6:8"
                                    },
                                    "variables": [
                                      {
                                        "name": "src",
                                        "nodeType": "YulTypedName",
                                        "src": "6514:3:8",
                                        "type": ""
                                      }
                                    ]
                                  }
                                ]
                              },
                              "src": "6504:220:8"
                            }
                          ]
                        },
                        "name": "abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "6092:6:8",
                            "type": ""
                          },
                          {
                            "name": "length",
                            "nodeType": "YulTypedName",
                            "src": "6100:6:8",
                            "type": ""
                          },
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "6108:3:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "array",
                            "nodeType": "YulTypedName",
                            "src": "6116:5:8",
                            "type": ""
                          }
                        ],
                        "src": "6020:710:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "6830:293:8",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "6879:83:8",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
                                        "nodeType": "YulIdentifier",
                                        "src": "6881:77:8"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "6881:79:8"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "6881:79:8"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "6858:6:8"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "6866:4:8",
                                            "type": "",
                                            "value": "0x1f"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "6854:3:8"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "6854:17:8"
                                      },
                                      {
                                        "name": "end",
                                        "nodeType": "YulIdentifier",
                                        "src": "6873:3:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "slt",
                                      "nodeType": "YulIdentifier",
                                      "src": "6850:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6850:27:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "6843:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6843:35:8"
                              },
                              "nodeType": "YulIf",
                              "src": "6840:122:8"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "6971:34:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "6998:6:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "6985:12:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6985:20:8"
                              },
                              "variables": [
                                {
                                  "name": "length",
                                  "nodeType": "YulTypedName",
                                  "src": "6975:6:8",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "7014:103:8",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "offset",
                                        "nodeType": "YulIdentifier",
                                        "src": "7090:6:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "7098:4:8",
                                        "type": "",
                                        "value": "0x20"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "7086:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7086:17:8"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "7105:6:8"
                                  },
                                  {
                                    "name": "end",
                                    "nodeType": "YulIdentifier",
                                    "src": "7113:3:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr",
                                  "nodeType": "YulIdentifier",
                                  "src": "7023:62:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7023:94:8"
                              },
                              "variableNames": [
                                {
                                  "name": "array",
                                  "nodeType": "YulIdentifier",
                                  "src": "7014:5:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_t_array$_t_address_$dyn_memory_ptr",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "6808:6:8",
                            "type": ""
                          },
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "6816:3:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "array",
                            "nodeType": "YulTypedName",
                            "src": "6824:5:8",
                            "type": ""
                          }
                        ],
                        "src": "6753:370:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "7211:229:8",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "7316:22:8",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x41",
                                        "nodeType": "YulIdentifier",
                                        "src": "7318:16:8"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "7318:18:8"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "7318:18:8"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "7288:6:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7296:18:8",
                                    "type": "",
                                    "value": "0xffffffffffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "7285:2:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7285:30:8"
                              },
                              "nodeType": "YulIf",
                              "src": "7282:56:8"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "7348:25:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "7360:6:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7368:4:8",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "mul",
                                  "nodeType": "YulIdentifier",
                                  "src": "7356:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7356:17:8"
                              },
                              "variableNames": [
                                {
                                  "name": "size",
                                  "nodeType": "YulIdentifier",
                                  "src": "7348:4:8"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "7410:23:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "size",
                                    "nodeType": "YulIdentifier",
                                    "src": "7422:4:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7428:4:8",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "7418:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7418:15:8"
                              },
                              "variableNames": [
                                {
                                  "name": "size",
                                  "nodeType": "YulIdentifier",
                                  "src": "7410:4:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "length",
                            "nodeType": "YulTypedName",
                            "src": "7195:6:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "size",
                            "nodeType": "YulTypedName",
                            "src": "7206:4:8",
                            "type": ""
                          }
                        ],
                        "src": "7129:311:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "7565:608:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "7575:90:8",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "length",
                                        "nodeType": "YulIdentifier",
                                        "src": "7657:6:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr",
                                      "nodeType": "YulIdentifier",
                                      "src": "7600:56:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7600:64:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "allocate_memory",
                                  "nodeType": "YulIdentifier",
                                  "src": "7584:15:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7584:81:8"
                              },
                              "variableNames": [
                                {
                                  "name": "array",
                                  "nodeType": "YulIdentifier",
                                  "src": "7575:5:8"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "7674:16:8",
                              "value": {
                                "name": "array",
                                "nodeType": "YulIdentifier",
                                "src": "7685:5:8"
                              },
                              "variables": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulTypedName",
                                  "src": "7678:3:8",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "array",
                                    "nodeType": "YulIdentifier",
                                    "src": "7707:5:8"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "7714:6:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "7700:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7700:21:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "7700:21:8"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "7730:23:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "array",
                                    "nodeType": "YulIdentifier",
                                    "src": "7741:5:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7748:4:8",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "7737:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7737:16:8"
                              },
                              "variableNames": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "7730:3:8"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "7763:44:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "7781:6:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "length",
                                        "nodeType": "YulIdentifier",
                                        "src": "7793:6:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "7801:4:8",
                                        "type": "",
                                        "value": "0x20"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mul",
                                      "nodeType": "YulIdentifier",
                                      "src": "7789:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7789:17:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "7777:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7777:30:8"
                              },
                              "variables": [
                                {
                                  "name": "srcEnd",
                                  "nodeType": "YulTypedName",
                                  "src": "7767:6:8",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "7835:103:8",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
                                        "nodeType": "YulIdentifier",
                                        "src": "7849:77:8"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "7849:79:8"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "7849:79:8"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "srcEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "7822:6:8"
                                  },
                                  {
                                    "name": "end",
                                    "nodeType": "YulIdentifier",
                                    "src": "7830:3:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "7819:2:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7819:15:8"
                              },
                              "nodeType": "YulIf",
                              "src": "7816:122:8"
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "8023:144:8",
                                "statements": [
                                  {
                                    "nodeType": "YulVariableDeclaration",
                                    "src": "8038:21:8",
                                    "value": {
                                      "name": "src",
                                      "nodeType": "YulIdentifier",
                                      "src": "8056:3:8"
                                    },
                                    "variables": [
                                      {
                                        "name": "elementPos",
                                        "nodeType": "YulTypedName",
                                        "src": "8042:10:8",
                                        "type": ""
                                      }
                                    ]
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "dst",
                                          "nodeType": "YulIdentifier",
                                          "src": "8080:3:8"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "name": "elementPos",
                                              "nodeType": "YulIdentifier",
                                              "src": "8106:10:8"
                                            },
                                            {
                                              "name": "end",
                                              "nodeType": "YulIdentifier",
                                              "src": "8118:3:8"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "abi_decode_t_uint256",
                                            "nodeType": "YulIdentifier",
                                            "src": "8085:20:8"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "8085:37:8"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "8073:6:8"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "8073:50:8"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "8073:50:8"
                                  },
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "8136:21:8",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "dst",
                                          "nodeType": "YulIdentifier",
                                          "src": "8147:3:8"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "8152:4:8",
                                          "type": "",
                                          "value": "0x20"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "8143:3:8"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "8143:14:8"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "dst",
                                        "nodeType": "YulIdentifier",
                                        "src": "8136:3:8"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "src",
                                    "nodeType": "YulIdentifier",
                                    "src": "7976:3:8"
                                  },
                                  {
                                    "name": "srcEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "7981:6:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "lt",
                                  "nodeType": "YulIdentifier",
                                  "src": "7973:2:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7973:15:8"
                              },
                              "nodeType": "YulForLoop",
                              "post": {
                                "nodeType": "YulBlock",
                                "src": "7989:25:8",
                                "statements": [
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "7991:21:8",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "src",
                                          "nodeType": "YulIdentifier",
                                          "src": "8002:3:8"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "8007:4:8",
                                          "type": "",
                                          "value": "0x20"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "7998:3:8"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "7998:14:8"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "src",
                                        "nodeType": "YulIdentifier",
                                        "src": "7991:3:8"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "pre": {
                                "nodeType": "YulBlock",
                                "src": "7951:21:8",
                                "statements": [
                                  {
                                    "nodeType": "YulVariableDeclaration",
                                    "src": "7953:17:8",
                                    "value": {
                                      "name": "offset",
                                      "nodeType": "YulIdentifier",
                                      "src": "7964:6:8"
                                    },
                                    "variables": [
                                      {
                                        "name": "src",
                                        "nodeType": "YulTypedName",
                                        "src": "7957:3:8",
                                        "type": ""
                                      }
                                    ]
                                  }
                                ]
                              },
                              "src": "7947:220:8"
                            }
                          ]
                        },
                        "name": "abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "7535:6:8",
                            "type": ""
                          },
                          {
                            "name": "length",
                            "nodeType": "YulTypedName",
                            "src": "7543:6:8",
                            "type": ""
                          },
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "7551:3:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "array",
                            "nodeType": "YulTypedName",
                            "src": "7559:5:8",
                            "type": ""
                          }
                        ],
                        "src": "7463:710:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "8273:293:8",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "8322:83:8",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
                                        "nodeType": "YulIdentifier",
                                        "src": "8324:77:8"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "8324:79:8"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "8324:79:8"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "8301:6:8"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "8309:4:8",
                                            "type": "",
                                            "value": "0x1f"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "8297:3:8"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "8297:17:8"
                                      },
                                      {
                                        "name": "end",
                                        "nodeType": "YulIdentifier",
                                        "src": "8316:3:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "slt",
                                      "nodeType": "YulIdentifier",
                                      "src": "8293:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "8293:27:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "8286:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8286:35:8"
                              },
                              "nodeType": "YulIf",
                              "src": "8283:122:8"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "8414:34:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "8441:6:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "8428:12:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8428:20:8"
                              },
                              "variables": [
                                {
                                  "name": "length",
                                  "nodeType": "YulTypedName",
                                  "src": "8418:6:8",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "8457:103:8",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "offset",
                                        "nodeType": "YulIdentifier",
                                        "src": "8533:6:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "8541:4:8",
                                        "type": "",
                                        "value": "0x20"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "8529:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "8529:17:8"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "8548:6:8"
                                  },
                                  {
                                    "name": "end",
                                    "nodeType": "YulIdentifier",
                                    "src": "8556:3:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr",
                                  "nodeType": "YulIdentifier",
                                  "src": "8466:62:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8466:94:8"
                              },
                              "variableNames": [
                                {
                                  "name": "array",
                                  "nodeType": "YulIdentifier",
                                  "src": "8457:5:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "8251:6:8",
                            "type": ""
                          },
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "8259:3:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "array",
                            "nodeType": "YulTypedName",
                            "src": "8267:5:8",
                            "type": ""
                          }
                        ],
                        "src": "8196:370:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "8722:889:8",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "8768:83:8",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                                        "nodeType": "YulIdentifier",
                                        "src": "8770:77:8"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "8770:79:8"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "8770:79:8"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "8743:7:8"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "8752:9:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "8739:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "8739:23:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8764:2:8",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "8735:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8735:32:8"
                              },
                              "nodeType": "YulIf",
                              "src": "8732:119:8"
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "8861:117:8",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "8876:15:8",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8890:1:8",
                                    "type": "",
                                    "value": "0"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "8880:6:8",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "8905:63:8",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "8940:9:8"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "8951:6:8"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "8936:3:8"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "8936:22:8"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "8960:7:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_address",
                                      "nodeType": "YulIdentifier",
                                      "src": "8915:20:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "8915:53:8"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value0",
                                      "nodeType": "YulIdentifier",
                                      "src": "8905:6:8"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "8988:303:8",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "9003:46:8",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "9034:9:8"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "9045:2:8",
                                            "type": "",
                                            "value": "32"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "9030:3:8"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "9030:18:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "calldataload",
                                      "nodeType": "YulIdentifier",
                                      "src": "9017:12:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "9017:32:8"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "9007:6:8",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "body": {
                                    "nodeType": "YulBlock",
                                    "src": "9096:83:8",
                                    "statements": [
                                      {
                                        "expression": {
                                          "arguments": [],
                                          "functionName": {
                                            "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
                                            "nodeType": "YulIdentifier",
                                            "src": "9098:77:8"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "9098:79:8"
                                        },
                                        "nodeType": "YulExpressionStatement",
                                        "src": "9098:79:8"
                                      }
                                    ]
                                  },
                                  "condition": {
                                    "arguments": [
                                      {
                                        "name": "offset",
                                        "nodeType": "YulIdentifier",
                                        "src": "9068:6:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "9076:18:8",
                                        "type": "",
                                        "value": "0xffffffffffffffff"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "gt",
                                      "nodeType": "YulIdentifier",
                                      "src": "9065:2:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "9065:30:8"
                                  },
                                  "nodeType": "YulIf",
                                  "src": "9062:117:8"
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "9193:88:8",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "9253:9:8"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "9264:6:8"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "9249:3:8"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "9249:22:8"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "9273:7:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_array$_t_address_$dyn_memory_ptr",
                                      "nodeType": "YulIdentifier",
                                      "src": "9203:45:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "9203:78:8"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value1",
                                      "nodeType": "YulIdentifier",
                                      "src": "9193:6:8"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "9301:303:8",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "9316:46:8",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "9347:9:8"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "9358:2:8",
                                            "type": "",
                                            "value": "64"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "9343:3:8"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "9343:18:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "calldataload",
                                      "nodeType": "YulIdentifier",
                                      "src": "9330:12:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "9330:32:8"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "9320:6:8",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "body": {
                                    "nodeType": "YulBlock",
                                    "src": "9409:83:8",
                                    "statements": [
                                      {
                                        "expression": {
                                          "arguments": [],
                                          "functionName": {
                                            "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
                                            "nodeType": "YulIdentifier",
                                            "src": "9411:77:8"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "9411:79:8"
                                        },
                                        "nodeType": "YulExpressionStatement",
                                        "src": "9411:79:8"
                                      }
                                    ]
                                  },
                                  "condition": {
                                    "arguments": [
                                      {
                                        "name": "offset",
                                        "nodeType": "YulIdentifier",
                                        "src": "9381:6:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "9389:18:8",
                                        "type": "",
                                        "value": "0xffffffffffffffff"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "gt",
                                      "nodeType": "YulIdentifier",
                                      "src": "9378:2:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "9378:30:8"
                                  },
                                  "nodeType": "YulIf",
                                  "src": "9375:117:8"
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "9506:88:8",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "9566:9:8"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "9577:6:8"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "9562:3:8"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "9562:22:8"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "9586:7:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr",
                                      "nodeType": "YulIdentifier",
                                      "src": "9516:45:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "9516:78:8"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value2",
                                      "nodeType": "YulIdentifier",
                                      "src": "9506:6:8"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_addresst_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "8676:9:8",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "8687:7:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "8699:6:8",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "8707:6:8",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulTypedName",
                            "src": "8715:6:8",
                            "type": ""
                          }
                        ],
                        "src": "8572:1039:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "9766:888:8",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "9812:83:8",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                                        "nodeType": "YulIdentifier",
                                        "src": "9814:77:8"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "9814:79:8"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "9814:79:8"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "9787:7:8"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "9796:9:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "9783:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "9783:23:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "9808:2:8",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "9779:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9779:32:8"
                              },
                              "nodeType": "YulIf",
                              "src": "9776:119:8"
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "9905:116:8",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "9920:15:8",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "9934:1:8",
                                    "type": "",
                                    "value": "0"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "9924:6:8",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "9949:62:8",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "9983:9:8"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "9994:6:8"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "9979:3:8"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "9979:22:8"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "10003:7:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_uint64",
                                      "nodeType": "YulIdentifier",
                                      "src": "9959:19:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "9959:52:8"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value0",
                                      "nodeType": "YulIdentifier",
                                      "src": "9949:6:8"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "10031:303:8",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "10046:46:8",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "10077:9:8"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "10088:2:8",
                                            "type": "",
                                            "value": "32"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "10073:3:8"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "10073:18:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "calldataload",
                                      "nodeType": "YulIdentifier",
                                      "src": "10060:12:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "10060:32:8"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "10050:6:8",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "body": {
                                    "nodeType": "YulBlock",
                                    "src": "10139:83:8",
                                    "statements": [
                                      {
                                        "expression": {
                                          "arguments": [],
                                          "functionName": {
                                            "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
                                            "nodeType": "YulIdentifier",
                                            "src": "10141:77:8"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "10141:79:8"
                                        },
                                        "nodeType": "YulExpressionStatement",
                                        "src": "10141:79:8"
                                      }
                                    ]
                                  },
                                  "condition": {
                                    "arguments": [
                                      {
                                        "name": "offset",
                                        "nodeType": "YulIdentifier",
                                        "src": "10111:6:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "10119:18:8",
                                        "type": "",
                                        "value": "0xffffffffffffffff"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "gt",
                                      "nodeType": "YulIdentifier",
                                      "src": "10108:2:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "10108:30:8"
                                  },
                                  "nodeType": "YulIf",
                                  "src": "10105:117:8"
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "10236:88:8",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "10296:9:8"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "10307:6:8"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "10292:3:8"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "10292:22:8"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "10316:7:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_array$_t_address_$dyn_memory_ptr",
                                      "nodeType": "YulIdentifier",
                                      "src": "10246:45:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "10246:78:8"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value1",
                                      "nodeType": "YulIdentifier",
                                      "src": "10236:6:8"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "10344:303:8",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "10359:46:8",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "10390:9:8"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "10401:2:8",
                                            "type": "",
                                            "value": "64"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "10386:3:8"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "10386:18:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "calldataload",
                                      "nodeType": "YulIdentifier",
                                      "src": "10373:12:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "10373:32:8"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "10363:6:8",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "body": {
                                    "nodeType": "YulBlock",
                                    "src": "10452:83:8",
                                    "statements": [
                                      {
                                        "expression": {
                                          "arguments": [],
                                          "functionName": {
                                            "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
                                            "nodeType": "YulIdentifier",
                                            "src": "10454:77:8"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "10454:79:8"
                                        },
                                        "nodeType": "YulExpressionStatement",
                                        "src": "10454:79:8"
                                      }
                                    ]
                                  },
                                  "condition": {
                                    "arguments": [
                                      {
                                        "name": "offset",
                                        "nodeType": "YulIdentifier",
                                        "src": "10424:6:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "10432:18:8",
                                        "type": "",
                                        "value": "0xffffffffffffffff"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "gt",
                                      "nodeType": "YulIdentifier",
                                      "src": "10421:2:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "10421:30:8"
                                  },
                                  "nodeType": "YulIf",
                                  "src": "10418:117:8"
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "10549:88:8",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "10609:9:8"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "10620:6:8"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "10605:3:8"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "10605:22:8"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "10629:7:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr",
                                      "nodeType": "YulIdentifier",
                                      "src": "10559:45:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "10559:78:8"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value2",
                                      "nodeType": "YulIdentifier",
                                      "src": "10549:6:8"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_uint64t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "9720:9:8",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "9731:7:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "9743:6:8",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "9751:6:8",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulTypedName",
                            "src": "9759:6:8",
                            "type": ""
                          }
                        ],
                        "src": "9617:1037:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "10725:53:8",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "10742:3:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "10765:5:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "cleanup_t_address",
                                      "nodeType": "YulIdentifier",
                                      "src": "10747:17:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "10747:24:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "10735:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10735:37:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "10735:37:8"
                            }
                          ]
                        },
                        "name": "abi_encode_t_address_to_t_address_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "10713:5:8",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "10720:3:8",
                            "type": ""
                          }
                        ],
                        "src": "10660:118:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "10882:124:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "10892:26:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "10904:9:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10915:2:8",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "10900:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10900:18:8"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "10892:4:8"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "10972:6:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "10985:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "10996:1:8",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "10981:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "10981:17:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_address_to_t_address_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "10928:43:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10928:71:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "10928:71:8"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "10854:9:8",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "10866:6:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "10877:4:8",
                            "type": ""
                          }
                        ],
                        "src": "10784:222:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "11065:51:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "11075:35:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "11104:5:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_uint160",
                                  "nodeType": "YulIdentifier",
                                  "src": "11086:17:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11086:24:8"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nodeType": "YulIdentifier",
                                  "src": "11075:7:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "cleanup_t_address_payable",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "11047:5:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulTypedName",
                            "src": "11057:7:8",
                            "type": ""
                          }
                        ],
                        "src": "11012:104:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "11173:87:8",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "11238:16:8",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "11247:1:8",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "11250:1:8",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "11240:6:8"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "11240:12:8"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "11240:12:8"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "11196:5:8"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "11229:5:8"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "cleanup_t_address_payable",
                                          "nodeType": "YulIdentifier",
                                          "src": "11203:25:8"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "11203:32:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "11193:2:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "11193:43:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "11186:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11186:51:8"
                              },
                              "nodeType": "YulIf",
                              "src": "11183:71:8"
                            }
                          ]
                        },
                        "name": "validator_revert_t_address_payable",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "11166:5:8",
                            "type": ""
                          }
                        ],
                        "src": "11122:138:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "11326:95:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "11336:29:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "11358:6:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "11345:12:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11345:20:8"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "11336:5:8"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "11409:5:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_t_address_payable",
                                  "nodeType": "YulIdentifier",
                                  "src": "11374:34:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11374:41:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "11374:41:8"
                            }
                          ]
                        },
                        "name": "abi_decode_t_address_payable",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "11304:6:8",
                            "type": ""
                          },
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "11312:3:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "11320:5:8",
                            "type": ""
                          }
                        ],
                        "src": "11266:155:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "11501:271:8",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "11547:83:8",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                                        "nodeType": "YulIdentifier",
                                        "src": "11549:77:8"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "11549:79:8"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "11549:79:8"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "11522:7:8"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "11531:9:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "11518:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "11518:23:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11543:2:8",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "11514:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11514:32:8"
                              },
                              "nodeType": "YulIf",
                              "src": "11511:119:8"
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "11640:125:8",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "11655:15:8",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11669:1:8",
                                    "type": "",
                                    "value": "0"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "11659:6:8",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "11684:71:8",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "11727:9:8"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "11738:6:8"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "11723:3:8"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "11723:22:8"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "11747:7:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_address_payable",
                                      "nodeType": "YulIdentifier",
                                      "src": "11694:28:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "11694:61:8"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value0",
                                      "nodeType": "YulIdentifier",
                                      "src": "11684:6:8"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_address_payable",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "11471:9:8",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "11482:7:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "11494:6:8",
                            "type": ""
                          }
                        ],
                        "src": "11427:345:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "11823:73:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "11833:57:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "11848:5:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11855:34:8",
                                    "type": "",
                                    "value": "0xffffffffffffffffffffffffffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "11844:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11844:46:8"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nodeType": "YulIdentifier",
                                  "src": "11833:7:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "cleanup_t_uint128",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "11805:5:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulTypedName",
                            "src": "11815:7:8",
                            "type": ""
                          }
                        ],
                        "src": "11778:118:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "11945:79:8",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "12002:16:8",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "12011:1:8",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "12014:1:8",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "12004:6:8"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "12004:12:8"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "12004:12:8"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "11968:5:8"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "11993:5:8"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "cleanup_t_uint128",
                                          "nodeType": "YulIdentifier",
                                          "src": "11975:17:8"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "11975:24:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "11965:2:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "11965:35:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "11958:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11958:43:8"
                              },
                              "nodeType": "YulIf",
                              "src": "11955:63:8"
                            }
                          ]
                        },
                        "name": "validator_revert_t_uint128",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "11938:5:8",
                            "type": ""
                          }
                        ],
                        "src": "11902:122:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "12082:87:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "12092:29:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "12114:6:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "12101:12:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12101:20:8"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "12092:5:8"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "12157:5:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_t_uint128",
                                  "nodeType": "YulIdentifier",
                                  "src": "12130:26:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12130:33:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "12130:33:8"
                            }
                          ]
                        },
                        "name": "abi_decode_t_uint128",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "12060:6:8",
                            "type": ""
                          },
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "12068:3:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "12076:5:8",
                            "type": ""
                          }
                        ],
                        "src": "12030:139:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "12241:263:8",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "12287:83:8",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                                        "nodeType": "YulIdentifier",
                                        "src": "12289:77:8"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "12289:79:8"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "12289:79:8"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "12262:7:8"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "12271:9:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "12258:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "12258:23:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "12283:2:8",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "12254:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12254:32:8"
                              },
                              "nodeType": "YulIf",
                              "src": "12251:119:8"
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "12380:117:8",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "12395:15:8",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "12409:1:8",
                                    "type": "",
                                    "value": "0"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "12399:6:8",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "12424:63:8",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "12459:9:8"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "12470:6:8"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "12455:3:8"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "12455:22:8"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "12479:7:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_uint128",
                                      "nodeType": "YulIdentifier",
                                      "src": "12434:20:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "12434:53:8"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value0",
                                      "nodeType": "YulIdentifier",
                                      "src": "12424:6:8"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_uint128",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "12211:9:8",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "12222:7:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "12234:6:8",
                            "type": ""
                          }
                        ],
                        "src": "12175:329:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "12575:53:8",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "12592:3:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "12615:5:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "cleanup_t_uint128",
                                      "nodeType": "YulIdentifier",
                                      "src": "12597:17:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "12597:24:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "12585:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12585:37:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "12585:37:8"
                            }
                          ]
                        },
                        "name": "abi_encode_t_uint128_to_t_uint128_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "12563:5:8",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "12570:3:8",
                            "type": ""
                          }
                        ],
                        "src": "12510:118:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "12732:124:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "12742:26:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "12754:9:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "12765:2:8",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "12750:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12750:18:8"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "12742:4:8"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "12822:6:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "12835:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "12846:1:8",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "12831:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "12831:17:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_uint128_to_t_uint128_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "12778:43:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12778:71:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "12778:71:8"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_uint128__to_t_uint128__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "12704:9:8",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "12716:6:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "12727:4:8",
                            "type": ""
                          }
                        ],
                        "src": "12634:222:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "12928:263:8",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "12974:83:8",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                                        "nodeType": "YulIdentifier",
                                        "src": "12976:77:8"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "12976:79:8"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "12976:79:8"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "12949:7:8"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "12958:9:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "12945:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "12945:23:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "12970:2:8",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "12941:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12941:32:8"
                              },
                              "nodeType": "YulIf",
                              "src": "12938:119:8"
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "13067:117:8",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "13082:15:8",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "13096:1:8",
                                    "type": "",
                                    "value": "0"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "13086:6:8",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "13111:63:8",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "13146:9:8"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "13157:6:8"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "13142:3:8"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "13142:22:8"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "13166:7:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_address",
                                      "nodeType": "YulIdentifier",
                                      "src": "13121:20:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "13121:53:8"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value0",
                                      "nodeType": "YulIdentifier",
                                      "src": "13111:6:8"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "12898:9:8",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "12909:7:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "12921:6:8",
                            "type": ""
                          }
                        ],
                        "src": "12862:329:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "13293:73:8",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "13310:3:8"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "13315:6:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "13303:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13303:19:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "13303:19:8"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "13331:29:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "13350:3:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "13355:4:8",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "13346:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13346:14:8"
                              },
                              "variableNames": [
                                {
                                  "name": "updated_pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "13331:11:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "13265:3:8",
                            "type": ""
                          },
                          {
                            "name": "length",
                            "nodeType": "YulTypedName",
                            "src": "13270:6:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "updated_pos",
                            "nodeType": "YulTypedName",
                            "src": "13281:11:8",
                            "type": ""
                          }
                        ],
                        "src": "13197:169:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "13478:136:8",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "memPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "13500:6:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "13508:1:8",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "13496:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "13496:14:8"
                                  },
                                  {
                                    "hexValue": "54616d61676f537761703a2043616e27742063616e63656c20737761702c206d",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "13512:34:8",
                                    "type": "",
                                    "value": "TamagoSwap: Can't cancel swap, m"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "13489:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13489:58:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "13489:58:8"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "memPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "13568:6:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "13576:2:8",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "13564:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "13564:15:8"
                                  },
                                  {
                                    "hexValue": "7573742062652073776170207061727469636970616e74",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "13581:25:8",
                                    "type": "",
                                    "value": "ust be swap participant"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "13557:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13557:50:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "13557:50:8"
                            }
                          ]
                        },
                        "name": "store_literal_in_memory_953728946f4dd7c915837ecb7b08bc74f9ce9ef91eccfc26f01991f60f6fad9f",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulTypedName",
                            "src": "13470:6:8",
                            "type": ""
                          }
                        ],
                        "src": "13372:242:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "13766:220:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "13776:74:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "13842:3:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "13847:2:8",
                                    "type": "",
                                    "value": "55"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "13783:58:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13783:67:8"
                              },
                              "variableNames": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "13776:3:8"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "13948:3:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "store_literal_in_memory_953728946f4dd7c915837ecb7b08bc74f9ce9ef91eccfc26f01991f60f6fad9f",
                                  "nodeType": "YulIdentifier",
                                  "src": "13859:88:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13859:93:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "13859:93:8"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "13961:19:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "13972:3:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "13977:2:8",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "13968:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13968:12:8"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "13961:3:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_t_stringliteral_953728946f4dd7c915837ecb7b08bc74f9ce9ef91eccfc26f01991f60f6fad9f_to_t_string_memory_ptr_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "13754:3:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "13762:3:8",
                            "type": ""
                          }
                        ],
                        "src": "13620:366:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "14163:248:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "14173:26:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "14185:9:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "14196:2:8",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "14181:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14181:18:8"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "14173:4:8"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "14220:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "14231:1:8",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "14216:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "14216:17:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "tail",
                                        "nodeType": "YulIdentifier",
                                        "src": "14239:4:8"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "14245:9:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "14235:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "14235:20:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "14209:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14209:47:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "14209:47:8"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "14265:139:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "tail",
                                    "nodeType": "YulIdentifier",
                                    "src": "14399:4:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_stringliteral_953728946f4dd7c915837ecb7b08bc74f9ce9ef91eccfc26f01991f60f6fad9f_to_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "14273:124:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14273:131:8"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "14265:4:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_953728946f4dd7c915837ecb7b08bc74f9ce9ef91eccfc26f01991f60f6fad9f__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "14143:9:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "14158:4:8",
                            "type": ""
                          }
                        ],
                        "src": "13992:419:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "14445:152:8",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "14462:1:8",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "14465:77:8",
                                    "type": "",
                                    "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "14455:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14455:88:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "14455:88:8"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "14559:1:8",
                                    "type": "",
                                    "value": "4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "14562:4:8",
                                    "type": "",
                                    "value": "0x11"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "14552:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14552:15:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "14552:15:8"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "14583:1:8",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "14586:4:8",
                                    "type": "",
                                    "value": "0x24"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "14576:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14576:15:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "14576:15:8"
                            }
                          ]
                        },
                        "name": "panic_error_0x11",
                        "nodeType": "YulFunctionDefinition",
                        "src": "14417:180:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "14648:146:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "14658:25:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "14681:1:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_uint128",
                                  "nodeType": "YulIdentifier",
                                  "src": "14663:17:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14663:20:8"
                              },
                              "variableNames": [
                                {
                                  "name": "x",
                                  "nodeType": "YulIdentifier",
                                  "src": "14658:1:8"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "14692:25:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "14715:1:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_uint128",
                                  "nodeType": "YulIdentifier",
                                  "src": "14697:17:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14697:20:8"
                              },
                              "variableNames": [
                                {
                                  "name": "y",
                                  "nodeType": "YulIdentifier",
                                  "src": "14692:1:8"
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "14739:22:8",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x11",
                                        "nodeType": "YulIdentifier",
                                        "src": "14741:16:8"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "14741:18:8"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "14741:18:8"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "14733:1:8"
                                  },
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "14736:1:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "lt",
                                  "nodeType": "YulIdentifier",
                                  "src": "14730:2:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14730:8:8"
                              },
                              "nodeType": "YulIf",
                              "src": "14727:34:8"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "14771:17:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "14783:1:8"
                                  },
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "14786:1:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "14779:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14779:9:8"
                              },
                              "variableNames": [
                                {
                                  "name": "diff",
                                  "nodeType": "YulIdentifier",
                                  "src": "14771:4:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "checked_sub_t_uint128",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "x",
                            "nodeType": "YulTypedName",
                            "src": "14634:1:8",
                            "type": ""
                          },
                          {
                            "name": "y",
                            "nodeType": "YulTypedName",
                            "src": "14637:1:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "diff",
                            "nodeType": "YulTypedName",
                            "src": "14643:4:8",
                            "type": ""
                          }
                        ],
                        "src": "14603:191:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "14906:187:8",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "memPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "14928:6:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "14936:1:8",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "14924:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "14924:14:8"
                                  },
                                  {
                                    "hexValue": "54616d61676f537761703a2053656e742045544820616d6f756e74206e656564",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "14940:34:8",
                                    "type": "",
                                    "value": "TamagoSwap: Sent ETH amount need"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "14917:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14917:58:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "14917:58:8"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "memPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "14996:6:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "15004:2:8",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "14992:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "14992:15:8"
                                  },
                                  {
                                    "hexValue": "7320746f206265206d6f7265206f7220657175616c206170706c69636174696f",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "15009:34:8",
                                    "type": "",
                                    "value": "s to be more or equal applicatio"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "14985:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14985:59:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "14985:59:8"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "memPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "15065:6:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "15073:2:8",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "15061:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "15061:15:8"
                                  },
                                  {
                                    "hexValue": "6e20666565",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "15078:7:8",
                                    "type": "",
                                    "value": "n fee"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "15054:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15054:32:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "15054:32:8"
                            }
                          ]
                        },
                        "name": "store_literal_in_memory_31462d0c7c62b4e669eb3c4207095a95e4463c3e8a74323217f416e4bbd08730",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulTypedName",
                            "src": "14898:6:8",
                            "type": ""
                          }
                        ],
                        "src": "14800:293:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "15245:220:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "15255:74:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "15321:3:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "15326:2:8",
                                    "type": "",
                                    "value": "69"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "15262:58:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15262:67:8"
                              },
                              "variableNames": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "15255:3:8"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "15427:3:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "store_literal_in_memory_31462d0c7c62b4e669eb3c4207095a95e4463c3e8a74323217f416e4bbd08730",
                                  "nodeType": "YulIdentifier",
                                  "src": "15338:88:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15338:93:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "15338:93:8"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "15440:19:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "15451:3:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "15456:2:8",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "15447:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15447:12:8"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "15440:3:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_t_stringliteral_31462d0c7c62b4e669eb3c4207095a95e4463c3e8a74323217f416e4bbd08730_to_t_string_memory_ptr_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "15233:3:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "15241:3:8",
                            "type": ""
                          }
                        ],
                        "src": "15099:366:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "15642:248:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "15652:26:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "15664:9:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "15675:2:8",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "15660:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15660:18:8"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "15652:4:8"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "15699:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "15710:1:8",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "15695:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "15695:17:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "tail",
                                        "nodeType": "YulIdentifier",
                                        "src": "15718:4:8"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "15724:9:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "15714:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "15714:20:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "15688:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15688:47:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "15688:47:8"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "15744:139:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "tail",
                                    "nodeType": "YulIdentifier",
                                    "src": "15878:4:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_stringliteral_31462d0c7c62b4e669eb3c4207095a95e4463c3e8a74323217f416e4bbd08730_to_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "15752:124:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15752:131:8"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "15744:4:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_31462d0c7c62b4e669eb3c4207095a95e4463c3e8a74323217f416e4bbd08730__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "15622:9:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "15637:4:8",
                            "type": ""
                          }
                        ],
                        "src": "15471:419:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "16002:133:8",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "memPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "16024:6:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "16032:1:8",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "16020:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "16020:14:8"
                                  },
                                  {
                                    "hexValue": "54616d61676f537761703a204e465420616e6420494420617272617973206861",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "16036:34:8",
                                    "type": "",
                                    "value": "TamagoSwap: NFT and ID arrays ha"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "16013:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "16013:58:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "16013:58:8"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "memPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "16092:6:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "16100:2:8",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "16088:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "16088:15:8"
                                  },
                                  {
                                    "hexValue": "766520746f2062652073616d65206c656e677468",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "16105:22:8",
                                    "type": "",
                                    "value": "ve to be same length"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "16081:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "16081:47:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "16081:47:8"
                            }
                          ]
                        },
                        "name": "store_literal_in_memory_cff939502c9eeeccfa94266f78ed7408a2ebceb3feb9a1845d0577828bfc6f3e",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulTypedName",
                            "src": "15994:6:8",
                            "type": ""
                          }
                        ],
                        "src": "15896:239:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "16287:220:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "16297:74:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "16363:3:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "16368:2:8",
                                    "type": "",
                                    "value": "52"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "16304:58:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "16304:67:8"
                              },
                              "variableNames": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "16297:3:8"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "16469:3:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "store_literal_in_memory_cff939502c9eeeccfa94266f78ed7408a2ebceb3feb9a1845d0577828bfc6f3e",
                                  "nodeType": "YulIdentifier",
                                  "src": "16380:88:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "16380:93:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "16380:93:8"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "16482:19:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "16493:3:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "16498:2:8",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "16489:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "16489:12:8"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "16482:3:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_t_stringliteral_cff939502c9eeeccfa94266f78ed7408a2ebceb3feb9a1845d0577828bfc6f3e_to_t_string_memory_ptr_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "16275:3:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "16283:3:8",
                            "type": ""
                          }
                        ],
                        "src": "16141:366:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "16684:248:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "16694:26:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "16706:9:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "16717:2:8",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "16702:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "16702:18:8"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "16694:4:8"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "16741:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "16752:1:8",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "16737:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "16737:17:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "tail",
                                        "nodeType": "YulIdentifier",
                                        "src": "16760:4:8"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "16766:9:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "16756:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "16756:20:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "16730:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "16730:47:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "16730:47:8"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "16786:139:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "tail",
                                    "nodeType": "YulIdentifier",
                                    "src": "16920:4:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_stringliteral_cff939502c9eeeccfa94266f78ed7408a2ebceb3feb9a1845d0577828bfc6f3e_to_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "16794:124:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "16794:131:8"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "16786:4:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_cff939502c9eeeccfa94266f78ed7408a2ebceb3feb9a1845d0577828bfc6f3e__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "16664:9:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "16679:4:8",
                            "type": ""
                          }
                        ],
                        "src": "16513:419:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "16981:211:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "16991:24:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "17013:1:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_uint64",
                                  "nodeType": "YulIdentifier",
                                  "src": "16996:16:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "16996:19:8"
                              },
                              "variableNames": [
                                {
                                  "name": "x",
                                  "nodeType": "YulIdentifier",
                                  "src": "16991:1:8"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "17024:24:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "17046:1:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_uint64",
                                  "nodeType": "YulIdentifier",
                                  "src": "17029:16:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "17029:19:8"
                              },
                              "variableNames": [
                                {
                                  "name": "y",
                                  "nodeType": "YulIdentifier",
                                  "src": "17024:1:8"
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "17138:22:8",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x11",
                                        "nodeType": "YulIdentifier",
                                        "src": "17140:16:8"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "17140:18:8"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "17140:18:8"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "17107:1:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "17114:18:8",
                                        "type": "",
                                        "value": "0xffffffffffffffff"
                                      },
                                      {
                                        "name": "y",
                                        "nodeType": "YulIdentifier",
                                        "src": "17134:1:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "17110:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "17110:26:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "17104:2:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "17104:33:8"
                              },
                              "nodeType": "YulIf",
                              "src": "17101:59:8"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "17170:16:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "17181:1:8"
                                  },
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "17184:1:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "17177:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "17177:9:8"
                              },
                              "variableNames": [
                                {
                                  "name": "sum",
                                  "nodeType": "YulIdentifier",
                                  "src": "17170:3:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "checked_add_t_uint64",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "x",
                            "nodeType": "YulTypedName",
                            "src": "16968:1:8",
                            "type": ""
                          },
                          {
                            "name": "y",
                            "nodeType": "YulTypedName",
                            "src": "16971:1:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "sum",
                            "nodeType": "YulTypedName",
                            "src": "16977:3:8",
                            "type": ""
                          }
                        ],
                        "src": "16938:254:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "17242:229:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "17252:25:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "17275:1:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_uint128",
                                  "nodeType": "YulIdentifier",
                                  "src": "17257:17:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "17257:20:8"
                              },
                              "variableNames": [
                                {
                                  "name": "x",
                                  "nodeType": "YulIdentifier",
                                  "src": "17252:1:8"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "17286:25:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "17309:1:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_uint128",
                                  "nodeType": "YulIdentifier",
                                  "src": "17291:17:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "17291:20:8"
                              },
                              "variableNames": [
                                {
                                  "name": "y",
                                  "nodeType": "YulIdentifier",
                                  "src": "17286:1:8"
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "17417:22:8",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x11",
                                        "nodeType": "YulIdentifier",
                                        "src": "17419:16:8"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "17419:18:8"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "17419:18:8"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "17370:1:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "17377:34:8",
                                        "type": "",
                                        "value": "0xffffffffffffffffffffffffffffffff"
                                      },
                                      {
                                        "name": "y",
                                        "nodeType": "YulIdentifier",
                                        "src": "17413:1:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "17373:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "17373:42:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "17367:2:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "17367:49:8"
                              },
                              "nodeType": "YulIf",
                              "src": "17364:75:8"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "17449:16:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "17460:1:8"
                                  },
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "17463:1:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "17456:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "17456:9:8"
                              },
                              "variableNames": [
                                {
                                  "name": "sum",
                                  "nodeType": "YulIdentifier",
                                  "src": "17449:3:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "checked_add_t_uint128",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "x",
                            "nodeType": "YulTypedName",
                            "src": "17229:1:8",
                            "type": ""
                          },
                          {
                            "name": "y",
                            "nodeType": "YulTypedName",
                            "src": "17232:1:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "sum",
                            "nodeType": "YulTypedName",
                            "src": "17238:3:8",
                            "type": ""
                          }
                        ],
                        "src": "17198:273:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "17551:40:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "17562:22:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "17578:5:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "17572:5:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "17572:12:8"
                              },
                              "variableNames": [
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "17562:6:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "array_length_t_array$_t_address_$dyn_memory_ptr",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "17534:5:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "length",
                            "nodeType": "YulTypedName",
                            "src": "17544:6:8",
                            "type": ""
                          }
                        ],
                        "src": "17477:114:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "17708:73:8",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "17725:3:8"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "17730:6:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "17718:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "17718:19:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "17718:19:8"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "17746:29:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "17765:3:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "17770:4:8",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "17761:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "17761:14:8"
                              },
                              "variableNames": [
                                {
                                  "name": "updated_pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "17746:11:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "17680:3:8",
                            "type": ""
                          },
                          {
                            "name": "length",
                            "nodeType": "YulTypedName",
                            "src": "17685:6:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "updated_pos",
                            "nodeType": "YulTypedName",
                            "src": "17696:11:8",
                            "type": ""
                          }
                        ],
                        "src": "17597:184:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "17859:60:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "17869:11:8",
                              "value": {
                                "name": "ptr",
                                "nodeType": "YulIdentifier",
                                "src": "17877:3:8"
                              },
                              "variableNames": [
                                {
                                  "name": "data",
                                  "nodeType": "YulIdentifier",
                                  "src": "17869:4:8"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "17890:22:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "ptr",
                                    "nodeType": "YulIdentifier",
                                    "src": "17902:3:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "17907:4:8",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "17898:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "17898:14:8"
                              },
                              "variableNames": [
                                {
                                  "name": "data",
                                  "nodeType": "YulIdentifier",
                                  "src": "17890:4:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "array_dataslot_t_array$_t_address_$dyn_memory_ptr",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "ptr",
                            "nodeType": "YulTypedName",
                            "src": "17846:3:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "data",
                            "nodeType": "YulTypedName",
                            "src": "17854:4:8",
                            "type": ""
                          }
                        ],
                        "src": "17787:132:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "17980:53:8",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "17997:3:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "18020:5:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "cleanup_t_address",
                                      "nodeType": "YulIdentifier",
                                      "src": "18002:17:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "18002:24:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "17990:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "17990:37:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "17990:37:8"
                            }
                          ]
                        },
                        "name": "abi_encode_t_address_to_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "17968:5:8",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "17975:3:8",
                            "type": ""
                          }
                        ],
                        "src": "17925:108:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "18119:99:8",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "18163:6:8"
                                  },
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "18171:3:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_address_to_t_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "18129:33:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "18129:46:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "18129:46:8"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "18184:28:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "18202:3:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "18207:4:8",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "18198:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "18198:14:8"
                              },
                              "variableNames": [
                                {
                                  "name": "updatedPos",
                                  "nodeType": "YulIdentifier",
                                  "src": "18184:10:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encodeUpdatedPos_t_address_to_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "18092:6:8",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "18100:3:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "updatedPos",
                            "nodeType": "YulTypedName",
                            "src": "18108:10:8",
                            "type": ""
                          }
                        ],
                        "src": "18039:179:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "18299:38:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "18309:22:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "ptr",
                                    "nodeType": "YulIdentifier",
                                    "src": "18321:3:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "18326:4:8",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "18317:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "18317:14:8"
                              },
                              "variableNames": [
                                {
                                  "name": "next",
                                  "nodeType": "YulIdentifier",
                                  "src": "18309:4:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "array_nextElement_t_array$_t_address_$dyn_memory_ptr",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "ptr",
                            "nodeType": "YulTypedName",
                            "src": "18286:3:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "next",
                            "nodeType": "YulTypedName",
                            "src": "18294:4:8",
                            "type": ""
                          }
                        ],
                        "src": "18224:113:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "18497:608:8",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "18507:68:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "18569:5:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_length_t_array$_t_address_$dyn_memory_ptr",
                                  "nodeType": "YulIdentifier",
                                  "src": "18521:47:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "18521:54:8"
                              },
                              "variables": [
                                {
                                  "name": "length",
                                  "nodeType": "YulTypedName",
                                  "src": "18511:6:8",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "18584:93:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "18665:3:8"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "18670:6:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "18591:73:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "18591:86:8"
                              },
                              "variableNames": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "18584:3:8"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "18686:71:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "18751:5:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_dataslot_t_array$_t_address_$dyn_memory_ptr",
                                  "nodeType": "YulIdentifier",
                                  "src": "18701:49:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "18701:56:8"
                              },
                              "variables": [
                                {
                                  "name": "baseRef",
                                  "nodeType": "YulTypedName",
                                  "src": "18690:7:8",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "18766:21:8",
                              "value": {
                                "name": "baseRef",
                                "nodeType": "YulIdentifier",
                                "src": "18780:7:8"
                              },
                              "variables": [
                                {
                                  "name": "srcPtr",
                                  "nodeType": "YulTypedName",
                                  "src": "18770:6:8",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "18856:224:8",
                                "statements": [
                                  {
                                    "nodeType": "YulVariableDeclaration",
                                    "src": "18870:34:8",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "srcPtr",
                                          "nodeType": "YulIdentifier",
                                          "src": "18897:6:8"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mload",
                                        "nodeType": "YulIdentifier",
                                        "src": "18891:5:8"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "18891:13:8"
                                    },
                                    "variables": [
                                      {
                                        "name": "elementValue0",
                                        "nodeType": "YulTypedName",
                                        "src": "18874:13:8",
                                        "type": ""
                                      }
                                    ]
                                  },
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "18917:70:8",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "elementValue0",
                                          "nodeType": "YulIdentifier",
                                          "src": "18968:13:8"
                                        },
                                        {
                                          "name": "pos",
                                          "nodeType": "YulIdentifier",
                                          "src": "18983:3:8"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "abi_encodeUpdatedPos_t_address_to_t_address",
                                        "nodeType": "YulIdentifier",
                                        "src": "18924:43:8"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "18924:63:8"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "pos",
                                        "nodeType": "YulIdentifier",
                                        "src": "18917:3:8"
                                      }
                                    ]
                                  },
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "19000:70:8",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "srcPtr",
                                          "nodeType": "YulIdentifier",
                                          "src": "19063:6:8"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "array_nextElement_t_array$_t_address_$dyn_memory_ptr",
                                        "nodeType": "YulIdentifier",
                                        "src": "19010:52:8"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "19010:60:8"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "srcPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "19000:6:8"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "i",
                                    "nodeType": "YulIdentifier",
                                    "src": "18818:1:8"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "18821:6:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "lt",
                                  "nodeType": "YulIdentifier",
                                  "src": "18815:2:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "18815:13:8"
                              },
                              "nodeType": "YulForLoop",
                              "post": {
                                "nodeType": "YulBlock",
                                "src": "18829:18:8",
                                "statements": [
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "18831:14:8",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "i",
                                          "nodeType": "YulIdentifier",
                                          "src": "18840:1:8"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "18843:1:8",
                                          "type": "",
                                          "value": "1"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "18836:3:8"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "18836:9:8"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "i",
                                        "nodeType": "YulIdentifier",
                                        "src": "18831:1:8"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "pre": {
                                "nodeType": "YulBlock",
                                "src": "18800:14:8",
                                "statements": [
                                  {
                                    "nodeType": "YulVariableDeclaration",
                                    "src": "18802:10:8",
                                    "value": {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "18811:1:8",
                                      "type": "",
                                      "value": "0"
                                    },
                                    "variables": [
                                      {
                                        "name": "i",
                                        "nodeType": "YulTypedName",
                                        "src": "18806:1:8",
                                        "type": ""
                                      }
                                    ]
                                  }
                                ]
                              },
                              "src": "18796:284:8"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "19089:10:8",
                              "value": {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "19096:3:8"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "19089:3:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "18476:5:8",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "18483:3:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "18492:3:8",
                            "type": ""
                          }
                        ],
                        "src": "18373:732:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "19185:40:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "19196:22:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "19212:5:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "19206:5:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "19206:12:8"
                              },
                              "variableNames": [
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "19196:6:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "array_length_t_array$_t_uint256_$dyn_memory_ptr",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "19168:5:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "length",
                            "nodeType": "YulTypedName",
                            "src": "19178:6:8",
                            "type": ""
                          }
                        ],
                        "src": "19111:114:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "19342:73:8",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "19359:3:8"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "19364:6:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "19352:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "19352:19:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "19352:19:8"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "19380:29:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "19399:3:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "19404:4:8",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "19395:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "19395:14:8"
                              },
                              "variableNames": [
                                {
                                  "name": "updated_pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "19380:11:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "19314:3:8",
                            "type": ""
                          },
                          {
                            "name": "length",
                            "nodeType": "YulTypedName",
                            "src": "19319:6:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "updated_pos",
                            "nodeType": "YulTypedName",
                            "src": "19330:11:8",
                            "type": ""
                          }
                        ],
                        "src": "19231:184:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "19493:60:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "19503:11:8",
                              "value": {
                                "name": "ptr",
                                "nodeType": "YulIdentifier",
                                "src": "19511:3:8"
                              },
                              "variableNames": [
                                {
                                  "name": "data",
                                  "nodeType": "YulIdentifier",
                                  "src": "19503:4:8"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "19524:22:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "ptr",
                                    "nodeType": "YulIdentifier",
                                    "src": "19536:3:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "19541:4:8",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "19532:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "19532:14:8"
                              },
                              "variableNames": [
                                {
                                  "name": "data",
                                  "nodeType": "YulIdentifier",
                                  "src": "19524:4:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "array_dataslot_t_array$_t_uint256_$dyn_memory_ptr",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "ptr",
                            "nodeType": "YulTypedName",
                            "src": "19480:3:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "data",
                            "nodeType": "YulTypedName",
                            "src": "19488:4:8",
                            "type": ""
                          }
                        ],
                        "src": "19421:132:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "19614:53:8",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "19631:3:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "19654:5:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "cleanup_t_uint256",
                                      "nodeType": "YulIdentifier",
                                      "src": "19636:17:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "19636:24:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "19624:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "19624:37:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "19624:37:8"
                            }
                          ]
                        },
                        "name": "abi_encode_t_uint256_to_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "19602:5:8",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "19609:3:8",
                            "type": ""
                          }
                        ],
                        "src": "19559:108:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "19753:99:8",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "19797:6:8"
                                  },
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "19805:3:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_uint256_to_t_uint256",
                                  "nodeType": "YulIdentifier",
                                  "src": "19763:33:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "19763:46:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "19763:46:8"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "19818:28:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "19836:3:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "19841:4:8",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "19832:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "19832:14:8"
                              },
                              "variableNames": [
                                {
                                  "name": "updatedPos",
                                  "nodeType": "YulIdentifier",
                                  "src": "19818:10:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encodeUpdatedPos_t_uint256_to_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "19726:6:8",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "19734:3:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "updatedPos",
                            "nodeType": "YulTypedName",
                            "src": "19742:10:8",
                            "type": ""
                          }
                        ],
                        "src": "19673:179:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "19933:38:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "19943:22:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "ptr",
                                    "nodeType": "YulIdentifier",
                                    "src": "19955:3:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "19960:4:8",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "19951:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "19951:14:8"
                              },
                              "variableNames": [
                                {
                                  "name": "next",
                                  "nodeType": "YulIdentifier",
                                  "src": "19943:4:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "array_nextElement_t_array$_t_uint256_$dyn_memory_ptr",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "ptr",
                            "nodeType": "YulTypedName",
                            "src": "19920:3:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "next",
                            "nodeType": "YulTypedName",
                            "src": "19928:4:8",
                            "type": ""
                          }
                        ],
                        "src": "19858:113:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "20131:608:8",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "20141:68:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "20203:5:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_length_t_array$_t_uint256_$dyn_memory_ptr",
                                  "nodeType": "YulIdentifier",
                                  "src": "20155:47:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "20155:54:8"
                              },
                              "variables": [
                                {
                                  "name": "length",
                                  "nodeType": "YulTypedName",
                                  "src": "20145:6:8",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "20218:93:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "20299:3:8"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "20304:6:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "20225:73:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "20225:86:8"
                              },
                              "variableNames": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "20218:3:8"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "20320:71:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "20385:5:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_dataslot_t_array$_t_uint256_$dyn_memory_ptr",
                                  "nodeType": "YulIdentifier",
                                  "src": "20335:49:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "20335:56:8"
                              },
                              "variables": [
                                {
                                  "name": "baseRef",
                                  "nodeType": "YulTypedName",
                                  "src": "20324:7:8",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "20400:21:8",
                              "value": {
                                "name": "baseRef",
                                "nodeType": "YulIdentifier",
                                "src": "20414:7:8"
                              },
                              "variables": [
                                {
                                  "name": "srcPtr",
                                  "nodeType": "YulTypedName",
                                  "src": "20404:6:8",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "20490:224:8",
                                "statements": [
                                  {
                                    "nodeType": "YulVariableDeclaration",
                                    "src": "20504:34:8",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "srcPtr",
                                          "nodeType": "YulIdentifier",
                                          "src": "20531:6:8"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mload",
                                        "nodeType": "YulIdentifier",
                                        "src": "20525:5:8"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "20525:13:8"
                                    },
                                    "variables": [
                                      {
                                        "name": "elementValue0",
                                        "nodeType": "YulTypedName",
                                        "src": "20508:13:8",
                                        "type": ""
                                      }
                                    ]
                                  },
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "20551:70:8",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "elementValue0",
                                          "nodeType": "YulIdentifier",
                                          "src": "20602:13:8"
                                        },
                                        {
                                          "name": "pos",
                                          "nodeType": "YulIdentifier",
                                          "src": "20617:3:8"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "abi_encodeUpdatedPos_t_uint256_to_t_uint256",
                                        "nodeType": "YulIdentifier",
                                        "src": "20558:43:8"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "20558:63:8"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "pos",
                                        "nodeType": "YulIdentifier",
                                        "src": "20551:3:8"
                                      }
                                    ]
                                  },
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "20634:70:8",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "srcPtr",
                                          "nodeType": "YulIdentifier",
                                          "src": "20697:6:8"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "array_nextElement_t_array$_t_uint256_$dyn_memory_ptr",
                                        "nodeType": "YulIdentifier",
                                        "src": "20644:52:8"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "20644:60:8"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "srcPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "20634:6:8"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "i",
                                    "nodeType": "YulIdentifier",
                                    "src": "20452:1:8"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "20455:6:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "lt",
                                  "nodeType": "YulIdentifier",
                                  "src": "20449:2:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "20449:13:8"
                              },
                              "nodeType": "YulForLoop",
                              "post": {
                                "nodeType": "YulBlock",
                                "src": "20463:18:8",
                                "statements": [
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "20465:14:8",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "i",
                                          "nodeType": "YulIdentifier",
                                          "src": "20474:1:8"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "20477:1:8",
                                          "type": "",
                                          "value": "1"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "20470:3:8"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "20470:9:8"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "i",
                                        "nodeType": "YulIdentifier",
                                        "src": "20465:1:8"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "pre": {
                                "nodeType": "YulBlock",
                                "src": "20434:14:8",
                                "statements": [
                                  {
                                    "nodeType": "YulVariableDeclaration",
                                    "src": "20436:10:8",
                                    "value": {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "20445:1:8",
                                      "type": "",
                                      "value": "0"
                                    },
                                    "variables": [
                                      {
                                        "name": "i",
                                        "nodeType": "YulTypedName",
                                        "src": "20440:1:8",
                                        "type": ""
                                      }
                                    ]
                                  }
                                ]
                              },
                              "src": "20430:284:8"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "20723:10:8",
                              "value": {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "20730:3:8"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "20723:3:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "20110:5:8",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "20117:3:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "20126:3:8",
                            "type": ""
                          }
                        ],
                        "src": "20007:732:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "20999:490:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "21009:26:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "21021:9:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "21032:2:8",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "21017:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "21017:18:8"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "21009:4:8"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "21089:6:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "21102:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "21113:1:8",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "21098:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "21098:17:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_uint128_to_t_uint128_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "21045:43:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "21045:71:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "21045:71:8"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "21137:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "21148:2:8",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "21133:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "21133:18:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "tail",
                                        "nodeType": "YulIdentifier",
                                        "src": "21157:4:8"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "21163:9:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "21153:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "21153:20:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "21126:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "21126:48:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "21126:48:8"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "21183:116:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value1",
                                    "nodeType": "YulIdentifier",
                                    "src": "21285:6:8"
                                  },
                                  {
                                    "name": "tail",
                                    "nodeType": "YulIdentifier",
                                    "src": "21294:4:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "21191:93:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "21191:108:8"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "21183:4:8"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "21320:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "21331:2:8",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "21316:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "21316:18:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "tail",
                                        "nodeType": "YulIdentifier",
                                        "src": "21340:4:8"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "21346:9:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "21336:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "21336:20:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "21309:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "21309:48:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "21309:48:8"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "21366:116:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value2",
                                    "nodeType": "YulIdentifier",
                                    "src": "21468:6:8"
                                  },
                                  {
                                    "name": "tail",
                                    "nodeType": "YulIdentifier",
                                    "src": "21477:4:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "21374:93:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "21374:108:8"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "21366:4:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_uint128_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_uint128_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "20955:9:8",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulTypedName",
                            "src": "20967:6:8",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "20975:6:8",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "20983:6:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "20994:4:8",
                            "type": ""
                          }
                        ],
                        "src": "20745:744:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "21601:76:8",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "memPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "21623:6:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "21631:1:8",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "21619:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "21619:14:8"
                                  },
                                  {
                                    "hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "21635:34:8",
                                    "type": "",
                                    "value": "Ownable: caller is not the owner"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "21612:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "21612:58:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "21612:58:8"
                            }
                          ]
                        },
                        "name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulTypedName",
                            "src": "21593:6:8",
                            "type": ""
                          }
                        ],
                        "src": "21495:182:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "21829:220:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "21839:74:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "21905:3:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "21910:2:8",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "21846:58:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "21846:67:8"
                              },
                              "variableNames": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "21839:3:8"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "22011:3:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
                                  "nodeType": "YulIdentifier",
                                  "src": "21922:88:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "21922:93:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "21922:93:8"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "22024:19:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "22035:3:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "22040:2:8",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "22031:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "22031:12:8"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "22024:3:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "21817:3:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "21825:3:8",
                            "type": ""
                          }
                        ],
                        "src": "21683:366:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "22226:248:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "22236:26:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "22248:9:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "22259:2:8",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "22244:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "22244:18:8"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "22236:4:8"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "22283:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "22294:1:8",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "22279:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "22279:17:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "tail",
                                        "nodeType": "YulIdentifier",
                                        "src": "22302:4:8"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "22308:9:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "22298:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "22298:20:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "22272:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "22272:47:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "22272:47:8"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "22328:139:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "tail",
                                    "nodeType": "YulIdentifier",
                                    "src": "22462:4:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "22336:124:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "22336:131:8"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "22328:4:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "22206:9:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "22221:4:8",
                            "type": ""
                          }
                        ],
                        "src": "22055:419:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "22586:121:8",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "memPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "22608:6:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "22616:1:8",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "22604:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "22604:14:8"
                                  },
                                  {
                                    "hexValue": "54616d61676f537761703a2063616c6c6572206973206e6f7420737761702069",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "22620:34:8",
                                    "type": "",
                                    "value": "TamagoSwap: caller is not swap i"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "22597:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "22597:58:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "22597:58:8"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "memPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "22676:6:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "22684:2:8",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "22672:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "22672:15:8"
                                  },
                                  {
                                    "hexValue": "6e69746961746f72",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "22689:10:8",
                                    "type": "",
                                    "value": "nitiator"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "22665:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "22665:35:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "22665:35:8"
                            }
                          ]
                        },
                        "name": "store_literal_in_memory_98a1486cbfa3b557b740701a05e4c08459bb73548e1fbb3d25790ee22bcb4d9b",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulTypedName",
                            "src": "22578:6:8",
                            "type": ""
                          }
                        ],
                        "src": "22480:227:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "22859:220:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "22869:74:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "22935:3:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "22940:2:8",
                                    "type": "",
                                    "value": "40"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "22876:58:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "22876:67:8"
                              },
                              "variableNames": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "22869:3:8"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "23041:3:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "store_literal_in_memory_98a1486cbfa3b557b740701a05e4c08459bb73548e1fbb3d25790ee22bcb4d9b",
                                  "nodeType": "YulIdentifier",
                                  "src": "22952:88:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "22952:93:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "22952:93:8"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "23054:19:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "23065:3:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "23070:2:8",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "23061:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "23061:12:8"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "23054:3:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_t_stringliteral_98a1486cbfa3b557b740701a05e4c08459bb73548e1fbb3d25790ee22bcb4d9b_to_t_string_memory_ptr_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "22847:3:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "22855:3:8",
                            "type": ""
                          }
                        ],
                        "src": "22713:366:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "23256:248:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "23266:26:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "23278:9:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "23289:2:8",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "23274:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "23274:18:8"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "23266:4:8"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "23313:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "23324:1:8",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "23309:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "23309:17:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "tail",
                                        "nodeType": "YulIdentifier",
                                        "src": "23332:4:8"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "23338:9:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "23328:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "23328:20:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "23302:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "23302:47:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "23302:47:8"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "23358:139:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "tail",
                                    "nodeType": "YulIdentifier",
                                    "src": "23492:4:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_stringliteral_98a1486cbfa3b557b740701a05e4c08459bb73548e1fbb3d25790ee22bcb4d9b_to_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "23366:124:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "23366:131:8"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "23358:4:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_98a1486cbfa3b557b740701a05e4c08459bb73548e1fbb3d25790ee22bcb4d9b__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "23236:9:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "23251:4:8",
                            "type": ""
                          }
                        ],
                        "src": "23085:419:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "23616:145:8",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "memPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "23638:6:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "23646:1:8",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "23634:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "23634:14:8"
                                  },
                                  {
                                    "hexValue": "54616d61676f537761703a2043616e27742061636365707420737761702c2062",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "23650:34:8",
                                    "type": "",
                                    "value": "TamagoSwap: Can't accept swap, b"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "23627:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "23627:58:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "23627:58:8"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "memPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "23706:6:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "23714:2:8",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "23702:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "23702:15:8"
                                  },
                                  {
                                    "hexValue": "6f7468207061727469636970616e7473206469646e277420616464204e465473",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "23719:34:8",
                                    "type": "",
                                    "value": "oth participants didn't add NFTs"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "23695:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "23695:59:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "23695:59:8"
                            }
                          ]
                        },
                        "name": "store_literal_in_memory_ead993d41c5eced30c94f7fda4f6f7557805adef8fd0aa2d3dfd14feef62bd94",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulTypedName",
                            "src": "23608:6:8",
                            "type": ""
                          }
                        ],
                        "src": "23510:251:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "23913:220:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "23923:74:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "23989:3:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "23994:2:8",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "23930:58:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "23930:67:8"
                              },
                              "variableNames": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "23923:3:8"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "24095:3:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "store_literal_in_memory_ead993d41c5eced30c94f7fda4f6f7557805adef8fd0aa2d3dfd14feef62bd94",
                                  "nodeType": "YulIdentifier",
                                  "src": "24006:88:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "24006:93:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "24006:93:8"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "24108:19:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "24119:3:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "24124:2:8",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "24115:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "24115:12:8"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "24108:3:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_t_stringliteral_ead993d41c5eced30c94f7fda4f6f7557805adef8fd0aa2d3dfd14feef62bd94_to_t_string_memory_ptr_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "23901:3:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "23909:3:8",
                            "type": ""
                          }
                        ],
                        "src": "23767:366:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "24310:248:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "24320:26:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "24332:9:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "24343:2:8",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "24328:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "24328:18:8"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "24320:4:8"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "24367:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "24378:1:8",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "24363:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "24363:17:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "tail",
                                        "nodeType": "YulIdentifier",
                                        "src": "24386:4:8"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "24392:9:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "24382:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "24382:20:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "24356:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "24356:47:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "24356:47:8"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "24412:139:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "tail",
                                    "nodeType": "YulIdentifier",
                                    "src": "24546:4:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_stringliteral_ead993d41c5eced30c94f7fda4f6f7557805adef8fd0aa2d3dfd14feef62bd94_to_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "24420:124:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "24420:131:8"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "24412:4:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_ead993d41c5eced30c94f7fda4f6f7557805adef8fd0aa2d3dfd14feef62bd94__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "24290:9:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "24305:4:8",
                            "type": ""
                          }
                        ],
                        "src": "24139:419:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "24670:124:8",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "memPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "24692:6:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "24700:1:8",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "24688:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "24688:14:8"
                                  },
                                  {
                                    "hexValue": "54616d61676f537761703a2063616c6c6572206973206e6f7420737761702070",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "24704:34:8",
                                    "type": "",
                                    "value": "TamagoSwap: caller is not swap p"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "24681:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "24681:58:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "24681:58:8"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "memPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "24760:6:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "24768:2:8",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "24756:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "24756:15:8"
                                  },
                                  {
                                    "hexValue": "6172746963697061746f72",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "24773:13:8",
                                    "type": "",
                                    "value": "articipator"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "24749:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "24749:38:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "24749:38:8"
                            }
                          ]
                        },
                        "name": "store_literal_in_memory_7c11936e879e02ba8af5ac65179495154b284668aa2c04dfce7131087aa7595d",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulTypedName",
                            "src": "24662:6:8",
                            "type": ""
                          }
                        ],
                        "src": "24564:230:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "24946:220:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "24956:74:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "25022:3:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "25027:2:8",
                                    "type": "",
                                    "value": "43"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "24963:58:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "24963:67:8"
                              },
                              "variableNames": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "24956:3:8"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "25128:3:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "store_literal_in_memory_7c11936e879e02ba8af5ac65179495154b284668aa2c04dfce7131087aa7595d",
                                  "nodeType": "YulIdentifier",
                                  "src": "25039:88:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "25039:93:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "25039:93:8"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "25141:19:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "25152:3:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "25157:2:8",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "25148:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "25148:12:8"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "25141:3:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_t_stringliteral_7c11936e879e02ba8af5ac65179495154b284668aa2c04dfce7131087aa7595d_to_t_string_memory_ptr_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "24934:3:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "24942:3:8",
                            "type": ""
                          }
                        ],
                        "src": "24800:366:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "25343:248:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "25353:26:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "25365:9:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "25376:2:8",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "25361:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "25361:18:8"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "25353:4:8"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "25400:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "25411:1:8",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "25396:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "25396:17:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "tail",
                                        "nodeType": "YulIdentifier",
                                        "src": "25419:4:8"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "25425:9:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "25415:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "25415:20:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "25389:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "25389:47:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "25389:47:8"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "25445:139:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "tail",
                                    "nodeType": "YulIdentifier",
                                    "src": "25579:4:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_stringliteral_7c11936e879e02ba8af5ac65179495154b284668aa2c04dfce7131087aa7595d_to_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "25453:124:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "25453:131:8"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "25445:4:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_7c11936e879e02ba8af5ac65179495154b284668aa2c04dfce7131087aa7595d__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "25323:9:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "25338:4:8",
                            "type": ""
                          }
                        ],
                        "src": "25172:419:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "25703:115:8",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "memPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "25725:6:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "25733:1:8",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "25721:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "25721:14:8"
                                  },
                                  {
                                    "hexValue": "54616d61676f537761703a207377617020616c726561647920696e6974696174",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "25737:34:8",
                                    "type": "",
                                    "value": "TamagoSwap: swap already initiat"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "25714:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "25714:58:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "25714:58:8"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "memPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "25793:6:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "25801:2:8",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "25789:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "25789:15:8"
                                  },
                                  {
                                    "hexValue": "6564",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "25806:4:8",
                                    "type": "",
                                    "value": "ed"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "25782:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "25782:29:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "25782:29:8"
                            }
                          ]
                        },
                        "name": "store_literal_in_memory_f61faac6105dde7c1f360d4cbad4dcdffde68858cd217607b25e250fe83f3d73",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulTypedName",
                            "src": "25695:6:8",
                            "type": ""
                          }
                        ],
                        "src": "25597:221:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "25970:220:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "25980:74:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "26046:3:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "26051:2:8",
                                    "type": "",
                                    "value": "34"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "25987:58:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "25987:67:8"
                              },
                              "variableNames": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "25980:3:8"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "26152:3:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "store_literal_in_memory_f61faac6105dde7c1f360d4cbad4dcdffde68858cd217607b25e250fe83f3d73",
                                  "nodeType": "YulIdentifier",
                                  "src": "26063:88:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "26063:93:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "26063:93:8"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "26165:19:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "26176:3:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "26181:2:8",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "26172:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "26172:12:8"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "26165:3:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_t_stringliteral_f61faac6105dde7c1f360d4cbad4dcdffde68858cd217607b25e250fe83f3d73_to_t_string_memory_ptr_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "25958:3:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "25966:3:8",
                            "type": ""
                          }
                        ],
                        "src": "25824:366:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "26367:248:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "26377:26:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "26389:9:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "26400:2:8",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "26385:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "26385:18:8"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "26377:4:8"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "26424:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "26435:1:8",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "26420:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "26420:17:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "tail",
                                        "nodeType": "YulIdentifier",
                                        "src": "26443:4:8"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "26449:9:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "26439:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "26439:20:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "26413:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "26413:47:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "26413:47:8"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "26469:139:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "tail",
                                    "nodeType": "YulIdentifier",
                                    "src": "26603:4:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_stringliteral_f61faac6105dde7c1f360d4cbad4dcdffde68858cd217607b25e250fe83f3d73_to_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "26477:124:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "26477:131:8"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "26469:4:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_f61faac6105dde7c1f360d4cbad4dcdffde68858cd217607b25e250fe83f3d73__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "26347:9:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "26362:4:8",
                            "type": ""
                          }
                        ],
                        "src": "26196:419:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "26727:119:8",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "memPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "26749:6:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "26757:1:8",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "26745:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "26745:14:8"
                                  },
                                  {
                                    "hexValue": "537761704b6977693a207472616e7366657220746f20746865207a65726f2061",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "26761:34:8",
                                    "type": "",
                                    "value": "SwapKiwi: transfer to the zero a"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "26738:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "26738:58:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "26738:58:8"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "memPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "26817:6:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "26825:2:8",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "26813:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "26813:15:8"
                                  },
                                  {
                                    "hexValue": "646472657373",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "26830:8:8",
                                    "type": "",
                                    "value": "ddress"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "26806:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "26806:33:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "26806:33:8"
                            }
                          ]
                        },
                        "name": "store_literal_in_memory_e4bc94dc7e0f6ea744b0216d3560bbacc55b7ae7dfd5b7d9106cd4b3fc41a6de",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulTypedName",
                            "src": "26719:6:8",
                            "type": ""
                          }
                        ],
                        "src": "26621:225:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "26998:220:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "27008:74:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "27074:3:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "27079:2:8",
                                    "type": "",
                                    "value": "38"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "27015:58:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "27015:67:8"
                              },
                              "variableNames": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "27008:3:8"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "27180:3:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "store_literal_in_memory_e4bc94dc7e0f6ea744b0216d3560bbacc55b7ae7dfd5b7d9106cd4b3fc41a6de",
                                  "nodeType": "YulIdentifier",
                                  "src": "27091:88:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "27091:93:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "27091:93:8"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "27193:19:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "27204:3:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "27209:2:8",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "27200:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "27200:12:8"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "27193:3:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_t_stringliteral_e4bc94dc7e0f6ea744b0216d3560bbacc55b7ae7dfd5b7d9106cd4b3fc41a6de_to_t_string_memory_ptr_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "26986:3:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "26994:3:8",
                            "type": ""
                          }
                        ],
                        "src": "26852:366:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "27395:248:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "27405:26:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "27417:9:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "27428:2:8",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "27413:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "27413:18:8"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "27405:4:8"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "27452:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "27463:1:8",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "27448:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "27448:17:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "tail",
                                        "nodeType": "YulIdentifier",
                                        "src": "27471:4:8"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "27477:9:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "27467:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "27467:20:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "27441:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "27441:47:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "27441:47:8"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "27497:139:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "tail",
                                    "nodeType": "YulIdentifier",
                                    "src": "27631:4:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_stringliteral_e4bc94dc7e0f6ea744b0216d3560bbacc55b7ae7dfd5b7d9106cd4b3fc41a6de_to_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "27505:124:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "27505:131:8"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "27497:4:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_e4bc94dc7e0f6ea744b0216d3560bbacc55b7ae7dfd5b7d9106cd4b3fc41a6de__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "27375:9:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "27390:4:8",
                            "type": ""
                          }
                        ],
                        "src": "27224:419:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "27694:146:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "27704:25:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "27727:1:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_uint256",
                                  "nodeType": "YulIdentifier",
                                  "src": "27709:17:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "27709:20:8"
                              },
                              "variableNames": [
                                {
                                  "name": "x",
                                  "nodeType": "YulIdentifier",
                                  "src": "27704:1:8"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "27738:25:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "27761:1:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_uint256",
                                  "nodeType": "YulIdentifier",
                                  "src": "27743:17:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "27743:20:8"
                              },
                              "variableNames": [
                                {
                                  "name": "y",
                                  "nodeType": "YulIdentifier",
                                  "src": "27738:1:8"
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "27785:22:8",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x11",
                                        "nodeType": "YulIdentifier",
                                        "src": "27787:16:8"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "27787:18:8"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "27787:18:8"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "27779:1:8"
                                  },
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "27782:1:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "lt",
                                  "nodeType": "YulIdentifier",
                                  "src": "27776:2:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "27776:8:8"
                              },
                              "nodeType": "YulIf",
                              "src": "27773:34:8"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "27817:17:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "27829:1:8"
                                  },
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "27832:1:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "27825:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "27825:9:8"
                              },
                              "variableNames": [
                                {
                                  "name": "diff",
                                  "nodeType": "YulIdentifier",
                                  "src": "27817:4:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "checked_sub_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "x",
                            "nodeType": "YulTypedName",
                            "src": "27680:1:8",
                            "type": ""
                          },
                          {
                            "name": "y",
                            "nodeType": "YulTypedName",
                            "src": "27683:1:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "diff",
                            "nodeType": "YulTypedName",
                            "src": "27689:4:8",
                            "type": ""
                          }
                        ],
                        "src": "27649:191:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "27952:119:8",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "memPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "27974:6:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "27982:1:8",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "27970:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "27970:14:8"
                                  },
                                  {
                                    "hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "27986:34:8",
                                    "type": "",
                                    "value": "Ownable: new owner is the zero a"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "27963:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "27963:58:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "27963:58:8"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "memPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "28042:6:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "28050:2:8",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "28038:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "28038:15:8"
                                  },
                                  {
                                    "hexValue": "646472657373",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "28055:8:8",
                                    "type": "",
                                    "value": "ddress"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "28031:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "28031:33:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "28031:33:8"
                            }
                          ]
                        },
                        "name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulTypedName",
                            "src": "27944:6:8",
                            "type": ""
                          }
                        ],
                        "src": "27846:225:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "28223:220:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "28233:74:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "28299:3:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "28304:2:8",
                                    "type": "",
                                    "value": "38"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "28240:58:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "28240:67:8"
                              },
                              "variableNames": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "28233:3:8"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "28405:3:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
                                  "nodeType": "YulIdentifier",
                                  "src": "28316:88:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "28316:93:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "28316:93:8"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "28418:19:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "28429:3:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "28434:2:8",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "28425:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "28425:12:8"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "28418:3:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "28211:3:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "28219:3:8",
                            "type": ""
                          }
                        ],
                        "src": "28077:366:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "28620:248:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "28630:26:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "28642:9:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "28653:2:8",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "28638:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "28638:18:8"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "28630:4:8"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "28677:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "28688:1:8",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "28673:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "28673:17:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "tail",
                                        "nodeType": "YulIdentifier",
                                        "src": "28696:4:8"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "28702:9:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "28692:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "28692:20:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "28666:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "28666:47:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "28666:47:8"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "28722:139:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "tail",
                                    "nodeType": "YulIdentifier",
                                    "src": "28856:4:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "28730:124:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "28730:131:8"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "28722:4:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "28600:9:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "28615:4:8",
                            "type": ""
                          }
                        ],
                        "src": "28449:419:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "28902:152:8",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "28919:1:8",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "28922:77:8",
                                    "type": "",
                                    "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "28912:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "28912:88:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "28912:88:8"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "29016:1:8",
                                    "type": "",
                                    "value": "4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "29019:4:8",
                                    "type": "",
                                    "value": "0x32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "29009:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "29009:15:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "29009:15:8"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "29040:1:8",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "29043:4:8",
                                    "type": "",
                                    "value": "0x24"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "29033:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "29033:15:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "29033:15:8"
                            }
                          ]
                        },
                        "name": "panic_error_0x32",
                        "nodeType": "YulFunctionDefinition",
                        "src": "28874:180:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "29103:190:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "29113:33:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "29140:5:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_uint256",
                                  "nodeType": "YulIdentifier",
                                  "src": "29122:17:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "29122:24:8"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "29113:5:8"
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "29236:22:8",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x11",
                                        "nodeType": "YulIdentifier",
                                        "src": "29238:16:8"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "29238:18:8"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "29238:18:8"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "29161:5:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "29168:66:8",
                                    "type": "",
                                    "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "eq",
                                  "nodeType": "YulIdentifier",
                                  "src": "29158:2:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "29158:77:8"
                              },
                              "nodeType": "YulIf",
                              "src": "29155:103:8"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "29267:20:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "29278:5:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "29285:1:8",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "29274:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "29274:13:8"
                              },
                              "variableNames": [
                                {
                                  "name": "ret",
                                  "nodeType": "YulIdentifier",
                                  "src": "29267:3:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "increment_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "29089:5:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "ret",
                            "nodeType": "YulTypedName",
                            "src": "29099:3:8",
                            "type": ""
                          }
                        ],
                        "src": "29060:233:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "29364:53:8",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "29381:3:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "29404:5:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "cleanup_t_uint256",
                                      "nodeType": "YulIdentifier",
                                      "src": "29386:17:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "29386:24:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "29374:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "29374:37:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "29374:37:8"
                            }
                          ]
                        },
                        "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "29352:5:8",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "29359:3:8",
                            "type": ""
                          }
                        ],
                        "src": "29299:118:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "29481:40:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "29492:22:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "29508:5:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "29502:5:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "29502:12:8"
                              },
                              "variableNames": [
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "29492:6:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "array_length_t_bytes_memory_ptr",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "29464:5:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "length",
                            "nodeType": "YulTypedName",
                            "src": "29474:6:8",
                            "type": ""
                          }
                        ],
                        "src": "29423:98:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "29622:73:8",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "29639:3:8"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "29644:6:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "29632:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "29632:19:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "29632:19:8"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "29660:29:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "29679:3:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "29684:4:8",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "29675:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "29675:14:8"
                              },
                              "variableNames": [
                                {
                                  "name": "updated_pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "29660:11:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "29594:3:8",
                            "type": ""
                          },
                          {
                            "name": "length",
                            "nodeType": "YulTypedName",
                            "src": "29599:6:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "updated_pos",
                            "nodeType": "YulTypedName",
                            "src": "29610:11:8",
                            "type": ""
                          }
                        ],
                        "src": "29527:168:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "29750:258:8",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "29760:10:8",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "29769:1:8",
                                "type": "",
                                "value": "0"
                              },
                              "variables": [
                                {
                                  "name": "i",
                                  "nodeType": "YulTypedName",
                                  "src": "29764:1:8",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "29829:63:8",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "name": "dst",
                                              "nodeType": "YulIdentifier",
                                              "src": "29854:3:8"
                                            },
                                            {
                                              "name": "i",
                                              "nodeType": "YulIdentifier",
                                              "src": "29859:1:8"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "add",
                                            "nodeType": "YulIdentifier",
                                            "src": "29850:3:8"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "29850:11:8"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "arguments": [
                                                {
                                                  "name": "src",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "29873:3:8"
                                                },
                                                {
                                                  "name": "i",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "29878:1:8"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "add",
                                                "nodeType": "YulIdentifier",
                                                "src": "29869:3:8"
                                              },
                                              "nodeType": "YulFunctionCall",
                                              "src": "29869:11:8"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "mload",
                                            "nodeType": "YulIdentifier",
                                            "src": "29863:5:8"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "29863:18:8"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "29843:6:8"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "29843:39:8"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "29843:39:8"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "i",
                                    "nodeType": "YulIdentifier",
                                    "src": "29790:1:8"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "29793:6:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "lt",
                                  "nodeType": "YulIdentifier",
                                  "src": "29787:2:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "29787:13:8"
                              },
                              "nodeType": "YulForLoop",
                              "post": {
                                "nodeType": "YulBlock",
                                "src": "29801:19:8",
                                "statements": [
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "29803:15:8",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "i",
                                          "nodeType": "YulIdentifier",
                                          "src": "29812:1:8"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "29815:2:8",
                                          "type": "",
                                          "value": "32"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "29808:3:8"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "29808:10:8"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "i",
                                        "nodeType": "YulIdentifier",
                                        "src": "29803:1:8"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "pre": {
                                "nodeType": "YulBlock",
                                "src": "29783:3:8",
                                "statements": []
                              },
                              "src": "29779:113:8"
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "29926:76:8",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "name": "dst",
                                              "nodeType": "YulIdentifier",
                                              "src": "29976:3:8"
                                            },
                                            {
                                              "name": "length",
                                              "nodeType": "YulIdentifier",
                                              "src": "29981:6:8"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "add",
                                            "nodeType": "YulIdentifier",
                                            "src": "29972:3:8"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "29972:16:8"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "29990:1:8",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "29965:6:8"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "29965:27:8"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "29965:27:8"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "i",
                                    "nodeType": "YulIdentifier",
                                    "src": "29907:1:8"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "29910:6:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "29904:2:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "29904:13:8"
                              },
                              "nodeType": "YulIf",
                              "src": "29901:101:8"
                            }
                          ]
                        },
                        "name": "copy_memory_to_memory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "src",
                            "nodeType": "YulTypedName",
                            "src": "29732:3:8",
                            "type": ""
                          },
                          {
                            "name": "dst",
                            "nodeType": "YulTypedName",
                            "src": "29737:3:8",
                            "type": ""
                          },
                          {
                            "name": "length",
                            "nodeType": "YulTypedName",
                            "src": "29742:6:8",
                            "type": ""
                          }
                        ],
                        "src": "29701:307:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "30104:270:8",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "30114:52:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "30160:5:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_length_t_bytes_memory_ptr",
                                  "nodeType": "YulIdentifier",
                                  "src": "30128:31:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "30128:38:8"
                              },
                              "variables": [
                                {
                                  "name": "length",
                                  "nodeType": "YulTypedName",
                                  "src": "30118:6:8",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "30175:77:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "30240:3:8"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "30245:6:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "30182:57:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "30182:70:8"
                              },
                              "variableNames": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "30175:3:8"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "30287:5:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "30294:4:8",
                                        "type": "",
                                        "value": "0x20"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "30283:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "30283:16:8"
                                  },
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "30301:3:8"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "30306:6:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "copy_memory_to_memory",
                                  "nodeType": "YulIdentifier",
                                  "src": "30261:21:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "30261:52:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "30261:52:8"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "30322:46:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "30333:3:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "length",
                                        "nodeType": "YulIdentifier",
                                        "src": "30360:6:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "round_up_to_mul_of_32",
                                      "nodeType": "YulIdentifier",
                                      "src": "30338:21:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "30338:29:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "30329:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "30329:39:8"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "30322:3:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "30085:5:8",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "30092:3:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "30100:3:8",
                            "type": ""
                          }
                        ],
                        "src": "30014:360:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "30580:440:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "30590:27:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "30602:9:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "30613:3:8",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "30598:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "30598:19:8"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "30590:4:8"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "30671:6:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "30684:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "30695:1:8",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "30680:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "30680:17:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_address_to_t_address_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "30627:43:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "30627:71:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "30627:71:8"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value1",
                                    "nodeType": "YulIdentifier",
                                    "src": "30752:6:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "30765:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "30776:2:8",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "30761:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "30761:18:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_address_to_t_address_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "30708:43:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "30708:72:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "30708:72:8"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value2",
                                    "nodeType": "YulIdentifier",
                                    "src": "30834:6:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "30847:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "30858:2:8",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "30843:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "30843:18:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "30790:43:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "30790:72:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "30790:72:8"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "30883:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "30894:2:8",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "30879:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "30879:18:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "tail",
                                        "nodeType": "YulIdentifier",
                                        "src": "30903:4:8"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "30909:9:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "30899:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "30899:20:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "30872:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "30872:48:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "30872:48:8"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "30929:84:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value3",
                                    "nodeType": "YulIdentifier",
                                    "src": "30999:6:8"
                                  },
                                  {
                                    "name": "tail",
                                    "nodeType": "YulIdentifier",
                                    "src": "31008:4:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "30937:61:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "30937:76:8"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "30929:4:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "30528:9:8",
                            "type": ""
                          },
                          {
                            "name": "value3",
                            "nodeType": "YulTypedName",
                            "src": "30540:6:8",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulTypedName",
                            "src": "30548:6:8",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "30556:6:8",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "30564:6:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "30575:4:8",
                            "type": ""
                          }
                        ],
                        "src": "30380:640:8"
                      }
                    ]
                  },
                  "contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint64(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffff)\n    }\n\n    function validator_revert_t_uint64(value) {\n        if iszero(eq(value, cleanup_t_uint64(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint64(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint64(value)\n    }\n\n    function abi_decode_tuple_t_uint64(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint64(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory(src, dst, length) {\n        calldatacopy(dst, src, length)\n        // clear end\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function abi_encode_t_bytes4_to_t_bytes4_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes4(value))\n    }\n\n    function abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes4_to_t_bytes4_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_allocation_size_t_array$_t_address_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // address[]\n    function abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_address_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let srcEnd := add(offset, mul(length, 0x20))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_address(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // address[]\n    function abi_decode_t_array$_t_address_$dyn_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    // uint256[]\n    function abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let srcEnd := add(offset, mul(length, 0x20))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_uint256(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // uint256[]\n    function abi_decode_t_array$_t_uint256_$dyn_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_array$_t_address_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint64t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint64(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_array$_t_address_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_address_payable(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address_payable(value) {\n        if iszero(eq(value, cleanup_t_address_payable(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_payable(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address_payable(value)\n    }\n\n    function abi_decode_tuple_t_address_payable(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_payable(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint128(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffff)\n    }\n\n    function validator_revert_t_uint128(value) {\n        if iszero(eq(value, cleanup_t_uint128(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint128(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint128(value)\n    }\n\n    function abi_decode_tuple_t_uint128(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint128(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint128_to_t_uint128_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint128(value))\n    }\n\n    function abi_encode_tuple_t_uint128__to_t_uint128__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint128_to_t_uint128_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_953728946f4dd7c915837ecb7b08bc74f9ce9ef91eccfc26f01991f60f6fad9f(memPtr) {\n\n        mstore(add(memPtr, 0), \"TamagoSwap: Can't cancel swap, m\")\n\n        mstore(add(memPtr, 32), \"ust be swap participant\")\n\n    }\n\n    function abi_encode_t_stringliteral_953728946f4dd7c915837ecb7b08bc74f9ce9ef91eccfc26f01991f60f6fad9f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 55)\n        store_literal_in_memory_953728946f4dd7c915837ecb7b08bc74f9ce9ef91eccfc26f01991f60f6fad9f(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_953728946f4dd7c915837ecb7b08bc74f9ce9ef91eccfc26f01991f60f6fad9f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_953728946f4dd7c915837ecb7b08bc74f9ce9ef91eccfc26f01991f60f6fad9f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint128(x, y) -> diff {\n        x := cleanup_t_uint128(x)\n        y := cleanup_t_uint128(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function store_literal_in_memory_31462d0c7c62b4e669eb3c4207095a95e4463c3e8a74323217f416e4bbd08730(memPtr) {\n\n        mstore(add(memPtr, 0), \"TamagoSwap: Sent ETH amount need\")\n\n        mstore(add(memPtr, 32), \"s to be more or equal applicatio\")\n\n        mstore(add(memPtr, 64), \"n fee\")\n\n    }\n\n    function abi_encode_t_stringliteral_31462d0c7c62b4e669eb3c4207095a95e4463c3e8a74323217f416e4bbd08730_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 69)\n        store_literal_in_memory_31462d0c7c62b4e669eb3c4207095a95e4463c3e8a74323217f416e4bbd08730(pos)\n        end := add(pos, 96)\n    }\n\n    function abi_encode_tuple_t_stringliteral_31462d0c7c62b4e669eb3c4207095a95e4463c3e8a74323217f416e4bbd08730__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_31462d0c7c62b4e669eb3c4207095a95e4463c3e8a74323217f416e4bbd08730_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_cff939502c9eeeccfa94266f78ed7408a2ebceb3feb9a1845d0577828bfc6f3e(memPtr) {\n\n        mstore(add(memPtr, 0), \"TamagoSwap: NFT and ID arrays ha\")\n\n        mstore(add(memPtr, 32), \"ve to be same length\")\n\n    }\n\n    function abi_encode_t_stringliteral_cff939502c9eeeccfa94266f78ed7408a2ebceb3feb9a1845d0577828bfc6f3e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 52)\n        store_literal_in_memory_cff939502c9eeeccfa94266f78ed7408a2ebceb3feb9a1845d0577828bfc6f3e(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_cff939502c9eeeccfa94266f78ed7408a2ebceb3feb9a1845d0577828bfc6f3e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_cff939502c9eeeccfa94266f78ed7408a2ebceb3feb9a1845d0577828bfc6f3e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_add_t_uint64(x, y) -> sum {\n        x := cleanup_t_uint64(x)\n        y := cleanup_t_uint64(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function checked_add_t_uint128(x, y) -> sum {\n        x := cleanup_t_uint128(x)\n        y := cleanup_t_uint128(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function array_length_t_array$_t_address_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_address_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function abi_encode_t_address_to_t_address(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encodeUpdatedPos_t_address_to_t_address(value0, pos) -> updatedPos {\n        abi_encode_t_address_to_t_address(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function array_nextElement_t_array$_t_address_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // address[] -> address[]\n    function abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_address_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_address_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_address_to_t_address(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_address_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function array_length_t_array$_t_uint256_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encodeUpdatedPos_t_uint256_to_t_uint256(value0, pos) -> updatedPos {\n        abi_encode_t_uint256_to_t_uint256(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // uint256[] -> uint256[]\n    function abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_uint256_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_uint256_to_t_uint256(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_tuple_t_uint128_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_uint128_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint128_to_t_uint128_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack(value1,  tail)\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value2,  tail)\n\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_98a1486cbfa3b557b740701a05e4c08459bb73548e1fbb3d25790ee22bcb4d9b(memPtr) {\n\n        mstore(add(memPtr, 0), \"TamagoSwap: caller is not swap i\")\n\n        mstore(add(memPtr, 32), \"nitiator\")\n\n    }\n\n    function abi_encode_t_stringliteral_98a1486cbfa3b557b740701a05e4c08459bb73548e1fbb3d25790ee22bcb4d9b_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 40)\n        store_literal_in_memory_98a1486cbfa3b557b740701a05e4c08459bb73548e1fbb3d25790ee22bcb4d9b(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_98a1486cbfa3b557b740701a05e4c08459bb73548e1fbb3d25790ee22bcb4d9b__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_98a1486cbfa3b557b740701a05e4c08459bb73548e1fbb3d25790ee22bcb4d9b_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_ead993d41c5eced30c94f7fda4f6f7557805adef8fd0aa2d3dfd14feef62bd94(memPtr) {\n\n        mstore(add(memPtr, 0), \"TamagoSwap: Can't accept swap, b\")\n\n        mstore(add(memPtr, 32), \"oth participants didn't add NFTs\")\n\n    }\n\n    function abi_encode_t_stringliteral_ead993d41c5eced30c94f7fda4f6f7557805adef8fd0aa2d3dfd14feef62bd94_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 64)\n        store_literal_in_memory_ead993d41c5eced30c94f7fda4f6f7557805adef8fd0aa2d3dfd14feef62bd94(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ead993d41c5eced30c94f7fda4f6f7557805adef8fd0aa2d3dfd14feef62bd94__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ead993d41c5eced30c94f7fda4f6f7557805adef8fd0aa2d3dfd14feef62bd94_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_7c11936e879e02ba8af5ac65179495154b284668aa2c04dfce7131087aa7595d(memPtr) {\n\n        mstore(add(memPtr, 0), \"TamagoSwap: caller is not swap p\")\n\n        mstore(add(memPtr, 32), \"articipator\")\n\n    }\n\n    function abi_encode_t_stringliteral_7c11936e879e02ba8af5ac65179495154b284668aa2c04dfce7131087aa7595d_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 43)\n        store_literal_in_memory_7c11936e879e02ba8af5ac65179495154b284668aa2c04dfce7131087aa7595d(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_7c11936e879e02ba8af5ac65179495154b284668aa2c04dfce7131087aa7595d__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_7c11936e879e02ba8af5ac65179495154b284668aa2c04dfce7131087aa7595d_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_f61faac6105dde7c1f360d4cbad4dcdffde68858cd217607b25e250fe83f3d73(memPtr) {\n\n        mstore(add(memPtr, 0), \"TamagoSwap: swap already initiat\")\n\n        mstore(add(memPtr, 32), \"ed\")\n\n    }\n\n    function abi_encode_t_stringliteral_f61faac6105dde7c1f360d4cbad4dcdffde68858cd217607b25e250fe83f3d73_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n        store_literal_in_memory_f61faac6105dde7c1f360d4cbad4dcdffde68858cd217607b25e250fe83f3d73(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_f61faac6105dde7c1f360d4cbad4dcdffde68858cd217607b25e250fe83f3d73__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f61faac6105dde7c1f360d4cbad4dcdffde68858cd217607b25e250fe83f3d73_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_e4bc94dc7e0f6ea744b0216d3560bbacc55b7ae7dfd5b7d9106cd4b3fc41a6de(memPtr) {\n\n        mstore(add(memPtr, 0), \"SwapKiwi: transfer to the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function abi_encode_t_stringliteral_e4bc94dc7e0f6ea744b0216d3560bbacc55b7ae7dfd5b7d9106cd4b3fc41a6de_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_e4bc94dc7e0f6ea744b0216d3560bbacc55b7ae7dfd5b7d9106cd4b3fc41a6de(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_e4bc94dc7e0f6ea744b0216d3560bbacc55b7ae7dfd5b7d9106cd4b3fc41a6de__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e4bc94dc7e0f6ea744b0216d3560bbacc55b7ae7dfd5b7d9106cd4b3fc41a6de_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value3,  tail)\n\n    }\n\n}\n",
                  "id": 8,
                  "language": "Yul",
                  "name": "#utility.yul"
                }
              ],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "60806040526004361061009c5760003560e01c80637e3fe497116100645780637e3fe497146101635780638da5cb5b1461017f578063af933b57146101aa578063b7719a9c146101d3578063ddca3f43146101fc578063f2fde38b146102275761009c565b80630cce448d146100a1578063150b7a02146100ca57806355a36d5614610107578063715018a6146101235780637500f85c1461013a575b600080fd5b3480156100ad57600080fd5b506100c860048036038101906100c39190612939565b610250565b005b3480156100d657600080fd5b506100f160048036038101906100ec9190612b40565b610cbb565b6040516100fe9190612bfe565b60405180910390f35b610121600480360381019061011c9190612da4565b610ccf565b005b34801561012f57600080fd5b50610138611092565b005b34801561014657600080fd5b50610161600480360381019061015c9190612939565b61111a565b005b61017d60048036038101906101789190612e2f565b611ced565b005b34801561018b57600080fd5b50610194612254565b6040516101a19190612ec9565b60405180910390f35b3480156101b657600080fd5b506101d160048036038101906101cc9190612f22565b61227d565b005b3480156101df57600080fd5b506101fa60048036038101906101f59190612f97565b6123ed565b005b34801561020857600080fd5b506102116124dc565b60405161021e9190612fd3565b60405180910390f35b34801561023357600080fd5b5061024e60048036038101906102499190612fee565b6124fe565b005b3373ffffffffffffffffffffffffffffffffffffffff16600260008367ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16148061034957503373ffffffffffffffffffffffffffffffffffffffff16600260008367ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16145b610388576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161037f9061309e565b60405180910390fd5b61050430600260008467ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600260008567ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060010180548060200260200160405190810160405280929190818152602001828054801561048157602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610437575b5050505050600260008667ffffffffffffffff1667ffffffffffffffff1681526020019081526020016000206002018054806020026020016040519081016040528092919081815260200182805480156104fa57602002820191906000526020600020905b8154815260200190600101908083116104e6575b50505050506125f5565b6000600260008367ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060040180549050146106b6576106b530600260008467ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600260008567ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060040180548060200260200160405190810160405280929190818152602001828054801561063257602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116105e8575b5050505050600260008667ffffffffffffffff1667ffffffffffffffff1681526020019081526020016000206005018054806020026020016040519081016040528092919081815260200182805480156106ab57602002820191906000526020600020905b815481526020019060010190808311610697575b50505050506125f5565b5b6000600260008367ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060060160009054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff161461091157600260008267ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060060160009054906101000a90046fffffffffffffffffffffffffffffffff16600160008282829054906101000a90046fffffffffffffffffffffffffffffffff1661078991906130ed565b92506101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff1602179055506000600260008367ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060060160009054906101000a90046fffffffffffffffffffffffffffffffff1690506000600260008467ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060060160006101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff160217905550600260008367ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc826fffffffffffffffffffffffffffffffff169081150290604051600060405180830381858888f1935050505015801561090e573d6000803e3d6000fd5b50505b6000600260008367ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060060160109054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff1614610b6c57600260008267ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060060160109054906101000a90046fffffffffffffffffffffffffffffffff16600160008282829054906101000a90046fffffffffffffffffffffffffffffffff166109e491906130ed565b92506101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff1602179055506000600260008367ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060060160109054906101000a90046fffffffffffffffffffffffffffffffff1690506000600260008467ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060060160106101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff160217905550600260008367ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc826fffffffffffffffffffffffffffffffff169081150290604051600060405180830381858888f19350505050158015610b69573d6000803e3d6000fd5b50505b8067ffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f54b9c72d790ad613d26b317d2d24e28dd1608f07ff121cb2d42ace3cbcd4eb0f60405160405180910390a3600260008267ffffffffffffffff1667ffffffffffffffff168152602001908152602001600020600080820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055600182016000610c1991906127af565b600282016000610c2991906127d0565b6003820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055600482016000610c6091906127af565b600582016000610c7091906127d0565b6006820160006101000a8154906fffffffffffffffffffffffffffffffff02191690556006820160106101000a8154906fffffffffffffffffffffffffffffffff0219169055505050565b600063150b7a0260e01b9050949350505050565b600160109054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff16341015610d42576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d39906131b9565b60405180910390fd5b81818051825114610d88576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d7f9061324b565b60405180910390fd5b6001600060148282829054906101000a900467ffffffffffffffff16610dae919061326b565b92506101000a81548167ffffffffffffffff021916908367ffffffffffffffff160217905550610de0333086866125f5565b6000600260008060149054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff1681526020019081526020016000209050338160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555084816001019080519060200190610e7b9291906127f1565b5083816002019080519060200190610e9492919061287b565b506000600160109054906101000a90046fffffffffffffffffffffffffffffffff169050806fffffffffffffffffffffffffffffffff16341115610f9c578034610ede91906130ed565b8260060160006101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff1602179055508160060160009054906101000a90046fffffffffffffffffffffffffffffffff16600160008282829054906101000a90046fffffffffffffffffffffffffffffffff16610f6591906132a9565b92506101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff1602179055505b868260030160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600060149054906101000a900467ffffffffffffffff1667ffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f47ab916bf7e1067c857bf17c72c33c4db59e95f2730e7283799f8a0b016aee078560060160009054906101000a90046fffffffffffffffffffffffffffffffff168a8a6040516110819392919061346b565b60405180910390a450505050505050565b61109a61266b565b73ffffffffffffffffffffffffffffffffffffffff166110b8612254565b73ffffffffffffffffffffffffffffffffffffffff161461110e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611105906134fc565b60405180910390fd5b6111186000612673565b565b80600260008267ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146111d3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111ca9061358e565b60405180910390fd5b6000600260008467ffffffffffffffff1667ffffffffffffffff1681526020019081526020016000206004018054905014158061126857506000600260008467ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060060160109054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff16115b801561130557506000600260008467ffffffffffffffff1667ffffffffffffffff1681526020019081526020016000206001018054905014158061130457506000600260008467ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060060160009054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff16115b5b611344576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161133b90613620565b60405180910390fd5b6114c030600260008567ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600260008667ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060040180548060200260200160405190810160405280929190818152602001828054801561143d57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116113f3575b5050505050600260008767ffffffffffffffff1667ffffffffffffffff1681526020019081526020016000206005018054806020026020016040519081016040528092919081815260200182805480156114b657602002820191906000526020600020905b8154815260200190600101908083116114a2575b50505050506125f5565b61163c30600260008567ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600260008667ffffffffffffffff1667ffffffffffffffff1681526020019081526020016000206001018054806020026020016040519081016040528092919081815260200182805480156115b957602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831161156f575b5050505050600260008767ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060020180548060200260200160405190810160405280929190818152602001828054801561163257602002820191906000526020600020905b81548152602001906001019080831161161e575b50505050506125f5565b6000600260008467ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060060160009054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff161461189757600260008367ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060060160009054906101000a90046fffffffffffffffffffffffffffffffff16600160008282829054906101000a90046fffffffffffffffffffffffffffffffff1661170f91906130ed565b92506101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff1602179055506000600260008467ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060060160009054906101000a90046fffffffffffffffffffffffffffffffff1690506000600260008567ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060060160006101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff160217905550600260008467ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc826fffffffffffffffffffffffffffffffff169081150290604051600060405180830381858888f19350505050158015611894573d6000803e3d6000fd5b50505b6000600260008467ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060060160109054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff1614611af257600260008367ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060060160109054906101000a90046fffffffffffffffffffffffffffffffff16600160008282829054906101000a90046fffffffffffffffffffffffffffffffff1661196a91906130ed565b92506101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff1602179055506000600260008467ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060060160109054906101000a90046fffffffffffffffffffffffffffffffff1690506000600260008567ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060060160106101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff160217905550600260008467ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc826fffffffffffffffffffffffffffffffff169081150290604051600060405180830381858888f19350505050158015611aef573d6000803e3d6000fd5b50505b8167ffffffffffffffff16600260008467ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600260008567ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8d1ef4e0ccd0f016857c236780af12f7aa46cb23459b4962f46e649e6a9c24f260405160405180910390a4600260008367ffffffffffffffff1667ffffffffffffffff168152602001908152602001600020600080820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055600182016000611c4a91906127af565b600282016000611c5a91906127d0565b6003820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055600482016000611c9191906127af565b600582016000611ca191906127d0565b6006820160006101000a8154906fffffffffffffffffffffffffffffffff02191690556006820160106101000a8154906fffffffffffffffffffffffffffffffff021916905550505050565b600160109054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff16341015611d60576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611d57906131b9565b60405180910390fd5b81818051825114611da6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611d9d9061324b565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff16600260008767ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611e5e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611e55906136b2565b60405180910390fd5b6000600260008767ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060060160109054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff16148015611f2c57506000600260008767ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060040180549050148015611f2b57506000600260008767ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060050180549050145b5b611f6b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611f6290613744565b60405180910390fd5b611f77333086866125f5565b83600260008767ffffffffffffffff1667ffffffffffffffff1681526020019081526020016000206004019080519060200190611fb59291906127f1565b5082600260008767ffffffffffffffff1667ffffffffffffffff1681526020019081526020016000206005019080519060200190611ff492919061287b565b506000600160109054906101000a90046fffffffffffffffffffffffffffffffff169050806fffffffffffffffffffffffffffffffff1634111561214857803461203e91906130ed565b600260008867ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060060160106101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff160217905550600260008767ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060060160109054906101000a90046fffffffffffffffffffffffffffffffff16600160008282829054906101000a90046fffffffffffffffffffffffffffffffff1661211191906132a9565b92506101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff1602179055505b8567ffffffffffffffff16600260008867ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f4e597ee0a0e4f52a7e43929928b9d21bd33282d3d7e7b2896cf4c0cd64c4029d600260008b67ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060060160109054906101000a90046fffffffffffffffffffffffffffffffff1689896040516122449392919061346b565b60405180910390a4505050505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61228561266b565b73ffffffffffffffffffffffffffffffffffffffff166122a3612254565b73ffffffffffffffffffffffffffffffffffffffff16146122f9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016122f0906134fc565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603612368576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161235f906137d6565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166108fc600160009054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff16476123be91906137f6565b9081150290604051600060405180830381858888f193505050501580156123e9573d6000803e3d6000fd5b5050565b6123f561266b565b73ffffffffffffffffffffffffffffffffffffffff16612413612254565b73ffffffffffffffffffffffffffffffffffffffff1614612469576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612460906134fc565b60405180910390fd5b80600160106101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff1602179055507f220ace5bd7df3a0637bc16073257c1c74f8a207436c0c1a8cf098ff268d4078a816040516124d19190612fd3565b60405180910390a150565b600160109054906101000a90046fffffffffffffffffffffffffffffffff1681565b61250661266b565b73ffffffffffffffffffffffffffffffffffffffff16612524612254565b73ffffffffffffffffffffffffffffffffffffffff161461257a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612571906134fc565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036125e9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016125e09061389c565b60405180910390fd5b6125f281612673565b50565b60005b8151811015612664576126518585858481518110612619576126186138bc565b5b6020026020010151858581518110612634576126336138bc565b5b602002602001015160405180602001604052806000815250612737565b808061265c906138eb565b9150506125f8565b5050505050565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b8273ffffffffffffffffffffffffffffffffffffffff1663b88d4fde868685856040518563ffffffff1660e01b815260040161277694939291906139ca565b600060405180830381600087803b15801561279057600080fd5b505af11580156127a4573d6000803e3d6000fd5b505050505050505050565b50805460008255906000526020600020908101906127cd91906128c8565b50565b50805460008255906000526020600020908101906127ee91906128c8565b50565b82805482825590600052602060002090810192821561286a579160200282015b828111156128695782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190612811565b5b50905061287791906128c8565b5090565b8280548282559060005260206000209081019282156128b7579160200282015b828111156128b657825182559160200191906001019061289b565b5b5090506128c491906128c8565b5090565b5b808211156128e15760008160009055506001016128c9565b5090565b6000604051905090565b600080fd5b600080fd5b600067ffffffffffffffff82169050919050565b612916816128f9565b811461292157600080fd5b50565b6000813590506129338161290d565b92915050565b60006020828403121561294f5761294e6128ef565b5b600061295d84828501612924565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061299182612966565b9050919050565b6129a181612986565b81146129ac57600080fd5b50565b6000813590506129be81612998565b92915050565b6000819050919050565b6129d7816129c4565b81146129e257600080fd5b50565b6000813590506129f4816129ce565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b612a4d82612a04565b810181811067ffffffffffffffff82111715612a6c57612a6b612a15565b5b80604052505050565b6000612a7f6128e5565b9050612a8b8282612a44565b919050565b600067ffffffffffffffff821115612aab57612aaa612a15565b5b612ab482612a04565b9050602081019050919050565b82818337600083830152505050565b6000612ae3612ade84612a90565b612a75565b905082815260208101848484011115612aff57612afe6129ff565b5b612b0a848285612ac1565b509392505050565b600082601f830112612b2757612b266129fa565b5b8135612b37848260208601612ad0565b91505092915050565b60008060008060808587031215612b5a57612b596128ef565b5b6000612b68878288016129af565b9450506020612b79878288016129af565b9350506040612b8a878288016129e5565b925050606085013567ffffffffffffffff811115612bab57612baa6128f4565b5b612bb787828801612b12565b91505092959194509250565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b612bf881612bc3565b82525050565b6000602082019050612c136000830184612bef565b92915050565b600067ffffffffffffffff821115612c3457612c33612a15565b5b602082029050602081019050919050565b600080fd5b6000612c5d612c5884612c19565b612a75565b90508083825260208201905060208402830185811115612c8057612c7f612c45565b5b835b81811015612ca95780612c9588826129af565b845260208401935050602081019050612c82565b5050509392505050565b600082601f830112612cc857612cc76129fa565b5b8135612cd8848260208601612c4a565b91505092915050565b600067ffffffffffffffff821115612cfc57612cfb612a15565b5b602082029050602081019050919050565b6000612d20612d1b84612ce1565b612a75565b90508083825260208201905060208402830185811115612d4357612d42612c45565b5b835b81811015612d6c5780612d5888826129e5565b845260208401935050602081019050612d45565b5050509392505050565b600082601f830112612d8b57612d8a6129fa565b5b8135612d9b848260208601612d0d565b91505092915050565b600080600060608486031215612dbd57612dbc6128ef565b5b6000612dcb868287016129af565b935050602084013567ffffffffffffffff811115612dec57612deb6128f4565b5b612df886828701612cb3565b925050604084013567ffffffffffffffff811115612e1957612e186128f4565b5b612e2586828701612d76565b9150509250925092565b600080600060608486031215612e4857612e476128ef565b5b6000612e5686828701612924565b935050602084013567ffffffffffffffff811115612e7757612e766128f4565b5b612e8386828701612cb3565b925050604084013567ffffffffffffffff811115612ea457612ea36128f4565b5b612eb086828701612d76565b9150509250925092565b612ec381612986565b82525050565b6000602082019050612ede6000830184612eba565b92915050565b6000612eef82612966565b9050919050565b612eff81612ee4565b8114612f0a57600080fd5b50565b600081359050612f1c81612ef6565b92915050565b600060208284031215612f3857612f376128ef565b5b6000612f4684828501612f0d565b91505092915050565b60006fffffffffffffffffffffffffffffffff82169050919050565b612f7481612f4f565b8114612f7f57600080fd5b50565b600081359050612f9181612f6b565b92915050565b600060208284031215612fad57612fac6128ef565b5b6000612fbb84828501612f82565b91505092915050565b612fcd81612f4f565b82525050565b6000602082019050612fe86000830184612fc4565b92915050565b600060208284031215613004576130036128ef565b5b6000613012848285016129af565b91505092915050565b600082825260208201905092915050565b7f54616d61676f537761703a2043616e27742063616e63656c20737761702c206d60008201527f7573742062652073776170207061727469636970616e74000000000000000000602082015250565b600061308860378361301b565b91506130938261302c565b604082019050919050565b600060208201905081810360008301526130b78161307b565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006130f882612f4f565b915061310383612f4f565b925082821015613116576131156130be565b5b828203905092915050565b7f54616d61676f537761703a2053656e742045544820616d6f756e74206e65656460008201527f7320746f206265206d6f7265206f7220657175616c206170706c69636174696f60208201527f6e20666565000000000000000000000000000000000000000000000000000000604082015250565b60006131a360458361301b565b91506131ae82613121565b606082019050919050565b600060208201905081810360008301526131d281613196565b9050919050565b7f54616d61676f537761703a204e465420616e642049442061727261797320686160008201527f766520746f2062652073616d65206c656e677468000000000000000000000000602082015250565b600061323560348361301b565b9150613240826131d9565b604082019050919050565b6000602082019050818103600083015261326481613228565b9050919050565b6000613276826128f9565b9150613281836128f9565b92508267ffffffffffffffff0382111561329e5761329d6130be565b5b828201905092915050565b60006132b482612f4f565b91506132bf83612f4f565b9250826fffffffffffffffffffffffffffffffff038211156132e4576132e36130be565b5b828201905092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b61332481612986565b82525050565b6000613336838361331b565b60208301905092915050565b6000602082019050919050565b600061335a826132ef565b61336481856132fa565b935061336f8361330b565b8060005b838110156133a0578151613387888261332a565b975061339283613342565b925050600181019050613373565b5085935050505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6133e2816129c4565b82525050565b60006133f483836133d9565b60208301905092915050565b6000602082019050919050565b6000613418826133ad565b61342281856133b8565b935061342d836133c9565b8060005b8381101561345e57815161344588826133e8565b975061345083613400565b925050600181019050613431565b5085935050505092915050565b60006060820190506134806000830186612fc4565b8181036020830152613492818561334f565b905081810360408301526134a6818461340d565b9050949350505050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b60006134e660208361301b565b91506134f1826134b0565b602082019050919050565b60006020820190508181036000830152613515816134d9565b9050919050565b7f54616d61676f537761703a2063616c6c6572206973206e6f742073776170206960008201527f6e69746961746f72000000000000000000000000000000000000000000000000602082015250565b600061357860288361301b565b91506135838261351c565b604082019050919050565b600060208201905081810360008301526135a78161356b565b9050919050565b7f54616d61676f537761703a2043616e27742061636365707420737761702c206260008201527f6f7468207061727469636970616e7473206469646e277420616464204e465473602082015250565b600061360a60408361301b565b9150613615826135ae565b604082019050919050565b60006020820190508181036000830152613639816135fd565b9050919050565b7f54616d61676f537761703a2063616c6c6572206973206e6f742073776170207060008201527f6172746963697061746f72000000000000000000000000000000000000000000602082015250565b600061369c602b8361301b565b91506136a782613640565b604082019050919050565b600060208201905081810360008301526136cb8161368f565b9050919050565b7f54616d61676f537761703a207377617020616c726561647920696e697469617460008201527f6564000000000000000000000000000000000000000000000000000000000000602082015250565b600061372e60228361301b565b9150613739826136d2565b604082019050919050565b6000602082019050818103600083015261375d81613721565b9050919050565b7f537761704b6977693a207472616e7366657220746f20746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b60006137c060268361301b565b91506137cb82613764565b604082019050919050565b600060208201905081810360008301526137ef816137b3565b9050919050565b6000613801826129c4565b915061380c836129c4565b92508282101561381f5761381e6130be565b5b828203905092915050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b600061388660268361301b565b91506138918261382a565b604082019050919050565b600060208201905081810360008301526138b581613879565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60006138f6826129c4565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203613928576139276130be565b5b600182019050919050565b61393c816129c4565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561397c578082015181840152602081019050613961565b8381111561398b576000848401525b50505050565b600061399c82613942565b6139a6818561394d565b93506139b681856020860161395e565b6139bf81612a04565b840191505092915050565b60006080820190506139df6000830187612eba565b6139ec6020830186612eba565b6139f96040830185613933565b8181036060830152613a0b8184613991565b90509594505050505056fea264697066735822122094f06357ec6bbbdf5d9a8a62c06d13f0adde311a145894a19780769c9c6a400a64736f6c634300080e0033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x9C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7E3FE497 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0x7E3FE497 EQ PUSH2 0x163 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x17F JUMPI DUP1 PUSH4 0xAF933B57 EQ PUSH2 0x1AA JUMPI DUP1 PUSH4 0xB7719A9C EQ PUSH2 0x1D3 JUMPI DUP1 PUSH4 0xDDCA3F43 EQ PUSH2 0x1FC JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x227 JUMPI PUSH2 0x9C JUMP JUMPDEST DUP1 PUSH4 0xCCE448D EQ PUSH2 0xA1 JUMPI DUP1 PUSH4 0x150B7A02 EQ PUSH2 0xCA JUMPI DUP1 PUSH4 0x55A36D56 EQ PUSH2 0x107 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0x7500F85C EQ PUSH2 0x13A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xAD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xC8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0x2939 JUMP JUMPDEST PUSH2 0x250 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xD6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xF1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xEC SWAP2 SWAP1 PUSH2 0x2B40 JUMP JUMPDEST PUSH2 0xCBB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFE SWAP2 SWAP1 PUSH2 0x2BFE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x121 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x11C SWAP2 SWAP1 PUSH2 0x2DA4 JUMP JUMPDEST PUSH2 0xCCF JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x12F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x138 PUSH2 0x1092 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x146 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x161 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x15C SWAP2 SWAP1 PUSH2 0x2939 JUMP JUMPDEST PUSH2 0x111A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x17D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x178 SWAP2 SWAP1 PUSH2 0x2E2F JUMP JUMPDEST PUSH2 0x1CED JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x18B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x194 PUSH2 0x2254 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A1 SWAP2 SWAP1 PUSH2 0x2EC9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1CC SWAP2 SWAP1 PUSH2 0x2F22 JUMP JUMPDEST PUSH2 0x227D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F5 SWAP2 SWAP1 PUSH2 0x2F97 JUMP JUMPDEST PUSH2 0x23ED JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x208 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x211 PUSH2 0x24DC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21E SWAP2 SWAP1 PUSH2 0x2FD3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x233 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x24E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x249 SWAP2 SWAP1 PUSH2 0x2FEE JUMP JUMPDEST PUSH2 0x24FE JUMP JUMPDEST STOP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 PUSH1 0x0 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x349 JUMPI POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 PUSH1 0x0 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST PUSH2 0x388 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x37F SWAP1 PUSH2 0x309E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x504 ADDRESS PUSH1 0x2 PUSH1 0x0 DUP5 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 PUSH1 0x0 DUP6 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x481 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x437 JUMPI JUMPDEST POP POP POP POP POP PUSH1 0x2 PUSH1 0x0 DUP7 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x4FA JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x4E6 JUMPI JUMPDEST POP POP POP POP POP PUSH2 0x25F5 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x4 ADD DUP1 SLOAD SWAP1 POP EQ PUSH2 0x6B6 JUMPI PUSH2 0x6B5 ADDRESS PUSH1 0x2 PUSH1 0x0 DUP5 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 PUSH1 0x0 DUP6 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x4 ADD DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x632 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x5E8 JUMPI JUMPDEST POP POP POP POP POP PUSH1 0x2 PUSH1 0x0 DUP7 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x6AB JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x697 JUMPI JUMPDEST POP POP POP POP POP PUSH2 0x25F5 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x6 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x911 JUMPI PUSH1 0x2 PUSH1 0x0 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x6 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH1 0x0 DUP3 DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x789 SWAP2 SWAP1 PUSH2 0x30ED JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x6 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP5 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x6 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x2 PUSH1 0x0 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x90E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x6 ADD PUSH1 0x10 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xB6C JUMPI PUSH1 0x2 PUSH1 0x0 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x6 ADD PUSH1 0x10 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH1 0x0 DUP3 DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x9E4 SWAP2 SWAP1 PUSH2 0x30ED JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x6 ADD PUSH1 0x10 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP5 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x6 ADD PUSH1 0x10 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x2 PUSH1 0x0 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xB69 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP JUMPDEST DUP1 PUSH8 0xFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x54B9C72D790AD613D26B317D2D24E28DD1608F07FF121CB2D42ACE3CBCD4EB0F PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x2 PUSH1 0x0 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x0 PUSH2 0xC19 SWAP2 SWAP1 PUSH2 0x27AF JUMP JUMPDEST PUSH1 0x2 DUP3 ADD PUSH1 0x0 PUSH2 0xC29 SWAP2 SWAP1 PUSH2 0x27D0 JUMP JUMPDEST PUSH1 0x3 DUP3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x4 DUP3 ADD PUSH1 0x0 PUSH2 0xC60 SWAP2 SWAP1 PUSH2 0x27AF JUMP JUMPDEST PUSH1 0x5 DUP3 ADD PUSH1 0x0 PUSH2 0xC70 SWAP2 SWAP1 PUSH2 0x27D0 JUMP JUMPDEST PUSH1 0x6 DUP3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x6 DUP3 ADD PUSH1 0x10 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0x150B7A02 PUSH1 0xE0 SHL SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x10 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLVALUE LT ISZERO PUSH2 0xD42 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD39 SWAP1 PUSH2 0x31B9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 DUP1 MLOAD DUP3 MLOAD EQ PUSH2 0xD88 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD7F SWAP1 PUSH2 0x324B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 PUSH1 0x14 DUP3 DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH2 0xDAE SWAP2 SWAP1 PUSH2 0x326B JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0xDE0 CALLER ADDRESS DUP7 DUP7 PUSH2 0x25F5 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP1 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP CALLER DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP5 DUP2 PUSH1 0x1 ADD SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0xE7B SWAP3 SWAP2 SWAP1 PUSH2 0x27F1 JUMP JUMPDEST POP DUP4 DUP2 PUSH1 0x2 ADD SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0xE94 SWAP3 SWAP2 SWAP1 PUSH2 0x287B JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x10 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP1 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLVALUE GT ISZERO PUSH2 0xF9C JUMPI DUP1 CALLVALUE PUSH2 0xEDE SWAP2 SWAP1 PUSH2 0x30ED JUMP JUMPDEST DUP3 PUSH1 0x6 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0x6 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH1 0x0 DUP3 DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xF65 SWAP2 SWAP1 PUSH2 0x32A9 JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMPDEST DUP7 DUP3 PUSH1 0x3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x47AB916BF7E1067C857BF17C72C33C4DB59E95F2730E7283799F8A0B016AEE07 DUP6 PUSH1 0x6 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP11 DUP11 PUSH1 0x40 MLOAD PUSH2 0x1081 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x346B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x109A PUSH2 0x266B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x10B8 PUSH2 0x2254 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x110E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1105 SWAP1 PUSH2 0x34FC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1118 PUSH1 0x0 PUSH2 0x2673 JUMP JUMPDEST JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x11D3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11CA SWAP1 PUSH2 0x358E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP5 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x4 ADD DUP1 SLOAD SWAP1 POP EQ ISZERO DUP1 PUSH2 0x1268 JUMPI POP PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP5 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x6 ADD PUSH1 0x10 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND GT JUMPDEST DUP1 ISZERO PUSH2 0x1305 JUMPI POP PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP5 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD SWAP1 POP EQ ISZERO DUP1 PUSH2 0x1304 JUMPI POP PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP5 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x6 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND GT JUMPDEST JUMPDEST PUSH2 0x1344 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x133B SWAP1 PUSH2 0x3620 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x14C0 ADDRESS PUSH1 0x2 PUSH1 0x0 DUP6 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 PUSH1 0x0 DUP7 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x4 ADD DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x143D JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x13F3 JUMPI JUMPDEST POP POP POP POP POP PUSH1 0x2 PUSH1 0x0 DUP8 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x14B6 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x14A2 JUMPI JUMPDEST POP POP POP POP POP PUSH2 0x25F5 JUMP JUMPDEST PUSH2 0x163C ADDRESS PUSH1 0x2 PUSH1 0x0 DUP6 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 PUSH1 0x0 DUP7 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x15B9 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x156F JUMPI JUMPDEST POP POP POP POP POP PUSH1 0x2 PUSH1 0x0 DUP8 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x1632 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x161E JUMPI JUMPDEST POP POP POP POP POP PUSH2 0x25F5 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP5 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x6 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1897 JUMPI PUSH1 0x2 PUSH1 0x0 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x6 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH1 0x0 DUP3 DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x170F SWAP2 SWAP1 PUSH2 0x30ED JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP5 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x6 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP6 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x6 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x2 PUSH1 0x0 DUP5 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x1894 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP5 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x6 ADD PUSH1 0x10 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1AF2 JUMPI PUSH1 0x2 PUSH1 0x0 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x6 ADD PUSH1 0x10 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH1 0x0 DUP3 DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x196A SWAP2 SWAP1 PUSH2 0x30ED JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP5 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x6 ADD PUSH1 0x10 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP6 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x6 ADD PUSH1 0x10 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x2 PUSH1 0x0 DUP5 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x1AEF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP JUMPDEST DUP2 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0x2 PUSH1 0x0 DUP5 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 PUSH1 0x0 DUP6 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8D1EF4E0CCD0F016857C236780AF12F7AA46CB23459B4962F46E649E6A9C24F2 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x2 PUSH1 0x0 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x0 PUSH2 0x1C4A SWAP2 SWAP1 PUSH2 0x27AF JUMP JUMPDEST PUSH1 0x2 DUP3 ADD PUSH1 0x0 PUSH2 0x1C5A SWAP2 SWAP1 PUSH2 0x27D0 JUMP JUMPDEST PUSH1 0x3 DUP3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x4 DUP3 ADD PUSH1 0x0 PUSH2 0x1C91 SWAP2 SWAP1 PUSH2 0x27AF JUMP JUMPDEST PUSH1 0x5 DUP3 ADD PUSH1 0x0 PUSH2 0x1CA1 SWAP2 SWAP1 PUSH2 0x27D0 JUMP JUMPDEST PUSH1 0x6 DUP3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x6 DUP3 ADD PUSH1 0x10 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x10 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLVALUE LT ISZERO PUSH2 0x1D60 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D57 SWAP1 PUSH2 0x31B9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 DUP1 MLOAD DUP3 MLOAD EQ PUSH2 0x1DA6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D9D SWAP1 PUSH2 0x324B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 PUSH1 0x0 DUP8 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1E5E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E55 SWAP1 PUSH2 0x36B2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP8 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x6 ADD PUSH1 0x10 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x1F2C JUMPI POP PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP8 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x4 ADD DUP1 SLOAD SWAP1 POP EQ DUP1 ISZERO PUSH2 0x1F2B JUMPI POP PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP8 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD DUP1 SLOAD SWAP1 POP EQ JUMPDEST JUMPDEST PUSH2 0x1F6B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F62 SWAP1 PUSH2 0x3744 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1F77 CALLER ADDRESS DUP7 DUP7 PUSH2 0x25F5 JUMP JUMPDEST DUP4 PUSH1 0x2 PUSH1 0x0 DUP8 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x4 ADD SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x1FB5 SWAP3 SWAP2 SWAP1 PUSH2 0x27F1 JUMP JUMPDEST POP DUP3 PUSH1 0x2 PUSH1 0x0 DUP8 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x1FF4 SWAP3 SWAP2 SWAP1 PUSH2 0x287B JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x10 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP1 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLVALUE GT ISZERO PUSH2 0x2148 JUMPI DUP1 CALLVALUE PUSH2 0x203E SWAP2 SWAP1 PUSH2 0x30ED JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP9 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x6 ADD PUSH1 0x10 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x2 PUSH1 0x0 DUP8 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x6 ADD PUSH1 0x10 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH1 0x0 DUP3 DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2111 SWAP2 SWAP1 PUSH2 0x32A9 JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMPDEST DUP6 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0x2 PUSH1 0x0 DUP9 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x4E597EE0A0E4F52A7E43929928B9D21BD33282D3D7E7B2896CF4C0CD64C4029D PUSH1 0x2 PUSH1 0x0 DUP12 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x6 ADD PUSH1 0x10 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP10 DUP10 PUSH1 0x40 MLOAD PUSH2 0x2244 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x346B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x2285 PUSH2 0x266B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x22A3 PUSH2 0x2254 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x22F9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x22F0 SWAP1 PUSH2 0x34FC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2368 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x235F SWAP1 PUSH2 0x37D6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SELFBALANCE PUSH2 0x23BE SWAP2 SWAP1 PUSH2 0x37F6 JUMP JUMPDEST SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x23E9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x23F5 PUSH2 0x266B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2413 PUSH2 0x2254 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2469 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2460 SWAP1 PUSH2 0x34FC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x10 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0x220ACE5BD7DF3A0637BC16073257C1C74F8A207436C0C1A8CF098FF268D4078A DUP2 PUSH1 0x40 MLOAD PUSH2 0x24D1 SWAP2 SWAP1 PUSH2 0x2FD3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x10 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x2506 PUSH2 0x266B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2524 PUSH2 0x2254 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x257A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2571 SWAP1 PUSH2 0x34FC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x25E9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x25E0 SWAP1 PUSH2 0x389C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x25F2 DUP2 PUSH2 0x2673 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x2664 JUMPI PUSH2 0x2651 DUP6 DUP6 DUP6 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x2619 JUMPI PUSH2 0x2618 PUSH2 0x38BC JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x2634 JUMPI PUSH2 0x2633 PUSH2 0x38BC JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x2737 JUMP JUMPDEST DUP1 DUP1 PUSH2 0x265C SWAP1 PUSH2 0x38EB JUMP JUMPDEST SWAP2 POP POP PUSH2 0x25F8 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xB88D4FDE DUP7 DUP7 DUP6 DUP6 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2776 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x39CA JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2790 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x27A4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST POP DUP1 SLOAD PUSH1 0x0 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP1 PUSH2 0x27CD SWAP2 SWAP1 PUSH2 0x28C8 JUMP JUMPDEST POP JUMP JUMPDEST POP DUP1 SLOAD PUSH1 0x0 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP1 PUSH2 0x27EE SWAP2 SWAP1 PUSH2 0x28C8 JUMP JUMPDEST POP JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0x286A JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x2869 JUMPI DUP3 MLOAD DUP3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x2811 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH2 0x2877 SWAP2 SWAP1 PUSH2 0x28C8 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0x28B7 JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x28B6 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x289B JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH2 0x28C4 SWAP2 SWAP1 PUSH2 0x28C8 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x28E1 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0x28C9 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2916 DUP2 PUSH2 0x28F9 JUMP JUMPDEST DUP2 EQ PUSH2 0x2921 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2933 DUP2 PUSH2 0x290D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x294F JUMPI PUSH2 0x294E PUSH2 0x28EF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x295D DUP5 DUP3 DUP6 ADD PUSH2 0x2924 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2991 DUP3 PUSH2 0x2966 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x29A1 DUP2 PUSH2 0x2986 JUMP JUMPDEST DUP2 EQ PUSH2 0x29AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x29BE DUP2 PUSH2 0x2998 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x29D7 DUP2 PUSH2 0x29C4 JUMP JUMPDEST DUP2 EQ PUSH2 0x29E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x29F4 DUP2 PUSH2 0x29CE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x2A4D DUP3 PUSH2 0x2A04 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x2A6C JUMPI PUSH2 0x2A6B PUSH2 0x2A15 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A7F PUSH2 0x28E5 JUMP JUMPDEST SWAP1 POP PUSH2 0x2A8B DUP3 DUP3 PUSH2 0x2A44 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2AAB JUMPI PUSH2 0x2AAA PUSH2 0x2A15 JUMP JUMPDEST JUMPDEST PUSH2 0x2AB4 DUP3 PUSH2 0x2A04 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2AE3 PUSH2 0x2ADE DUP5 PUSH2 0x2A90 JUMP JUMPDEST PUSH2 0x2A75 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x2AFF JUMPI PUSH2 0x2AFE PUSH2 0x29FF JUMP JUMPDEST JUMPDEST PUSH2 0x2B0A DUP5 DUP3 DUP6 PUSH2 0x2AC1 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2B27 JUMPI PUSH2 0x2B26 PUSH2 0x29FA JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2B37 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x2AD0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x2B5A JUMPI PUSH2 0x2B59 PUSH2 0x28EF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2B68 DUP8 DUP3 DUP9 ADD PUSH2 0x29AF JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x2B79 DUP8 DUP3 DUP9 ADD PUSH2 0x29AF JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x2B8A DUP8 DUP3 DUP9 ADD PUSH2 0x29E5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2BAB JUMPI PUSH2 0x2BAA PUSH2 0x28F4 JUMP JUMPDEST JUMPDEST PUSH2 0x2BB7 DUP8 DUP3 DUP9 ADD PUSH2 0x2B12 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2BF8 DUP2 PUSH2 0x2BC3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2C13 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2BEF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2C34 JUMPI PUSH2 0x2C33 PUSH2 0x2A15 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2C5D PUSH2 0x2C58 DUP5 PUSH2 0x2C19 JUMP JUMPDEST PUSH2 0x2A75 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x2C80 JUMPI PUSH2 0x2C7F PUSH2 0x2C45 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2CA9 JUMPI DUP1 PUSH2 0x2C95 DUP9 DUP3 PUSH2 0x29AF JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2C82 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2CC8 JUMPI PUSH2 0x2CC7 PUSH2 0x29FA JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2CD8 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x2C4A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2CFC JUMPI PUSH2 0x2CFB PUSH2 0x2A15 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2D20 PUSH2 0x2D1B DUP5 PUSH2 0x2CE1 JUMP JUMPDEST PUSH2 0x2A75 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x2D43 JUMPI PUSH2 0x2D42 PUSH2 0x2C45 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2D6C JUMPI DUP1 PUSH2 0x2D58 DUP9 DUP3 PUSH2 0x29E5 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2D45 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2D8B JUMPI PUSH2 0x2D8A PUSH2 0x29FA JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2D9B DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x2D0D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2DBD JUMPI PUSH2 0x2DBC PUSH2 0x28EF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2DCB DUP7 DUP3 DUP8 ADD PUSH2 0x29AF JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2DEC JUMPI PUSH2 0x2DEB PUSH2 0x28F4 JUMP JUMPDEST JUMPDEST PUSH2 0x2DF8 DUP7 DUP3 DUP8 ADD PUSH2 0x2CB3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2E19 JUMPI PUSH2 0x2E18 PUSH2 0x28F4 JUMP JUMPDEST JUMPDEST PUSH2 0x2E25 DUP7 DUP3 DUP8 ADD PUSH2 0x2D76 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2E48 JUMPI PUSH2 0x2E47 PUSH2 0x28EF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2E56 DUP7 DUP3 DUP8 ADD PUSH2 0x2924 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2E77 JUMPI PUSH2 0x2E76 PUSH2 0x28F4 JUMP JUMPDEST JUMPDEST PUSH2 0x2E83 DUP7 DUP3 DUP8 ADD PUSH2 0x2CB3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2EA4 JUMPI PUSH2 0x2EA3 PUSH2 0x28F4 JUMP JUMPDEST JUMPDEST PUSH2 0x2EB0 DUP7 DUP3 DUP8 ADD PUSH2 0x2D76 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x2EC3 DUP2 PUSH2 0x2986 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2EDE PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2EBA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2EEF DUP3 PUSH2 0x2966 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2EFF DUP2 PUSH2 0x2EE4 JUMP JUMPDEST DUP2 EQ PUSH2 0x2F0A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2F1C DUP2 PUSH2 0x2EF6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2F38 JUMPI PUSH2 0x2F37 PUSH2 0x28EF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2F46 DUP5 DUP3 DUP6 ADD PUSH2 0x2F0D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2F74 DUP2 PUSH2 0x2F4F JUMP JUMPDEST DUP2 EQ PUSH2 0x2F7F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2F91 DUP2 PUSH2 0x2F6B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2FAD JUMPI PUSH2 0x2FAC PUSH2 0x28EF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2FBB DUP5 DUP3 DUP6 ADD PUSH2 0x2F82 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2FCD DUP2 PUSH2 0x2F4F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2FE8 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2FC4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3004 JUMPI PUSH2 0x3003 PUSH2 0x28EF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3012 DUP5 DUP3 DUP6 ADD PUSH2 0x29AF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x54616D61676F537761703A2043616E27742063616E63656C20737761702C206D PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7573742062652073776170207061727469636970616E74000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3088 PUSH1 0x37 DUP4 PUSH2 0x301B JUMP JUMPDEST SWAP2 POP PUSH2 0x3093 DUP3 PUSH2 0x302C JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x30B7 DUP2 PUSH2 0x307B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x30F8 DUP3 PUSH2 0x2F4F JUMP JUMPDEST SWAP2 POP PUSH2 0x3103 DUP4 PUSH2 0x2F4F JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x3116 JUMPI PUSH2 0x3115 PUSH2 0x30BE JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x54616D61676F537761703A2053656E742045544820616D6F756E74206E656564 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7320746F206265206D6F7265206F7220657175616C206170706C69636174696F PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x6E20666565000000000000000000000000000000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x31A3 PUSH1 0x45 DUP4 PUSH2 0x301B JUMP JUMPDEST SWAP2 POP PUSH2 0x31AE DUP3 PUSH2 0x3121 JUMP JUMPDEST PUSH1 0x60 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x31D2 DUP2 PUSH2 0x3196 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x54616D61676F537761703A204E465420616E6420494420617272617973206861 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x766520746F2062652073616D65206C656E677468000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3235 PUSH1 0x34 DUP4 PUSH2 0x301B JUMP JUMPDEST SWAP2 POP PUSH2 0x3240 DUP3 PUSH2 0x31D9 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3264 DUP2 PUSH2 0x3228 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3276 DUP3 PUSH2 0x28F9 JUMP JUMPDEST SWAP2 POP PUSH2 0x3281 DUP4 PUSH2 0x28F9 JUMP JUMPDEST SWAP3 POP DUP3 PUSH8 0xFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x329E JUMPI PUSH2 0x329D PUSH2 0x30BE JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x32B4 DUP3 PUSH2 0x2F4F JUMP JUMPDEST SWAP2 POP PUSH2 0x32BF DUP4 PUSH2 0x2F4F JUMP JUMPDEST SWAP3 POP DUP3 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x32E4 JUMPI PUSH2 0x32E3 PUSH2 0x30BE JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3324 DUP2 PUSH2 0x2986 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3336 DUP4 DUP4 PUSH2 0x331B JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x335A DUP3 PUSH2 0x32EF JUMP JUMPDEST PUSH2 0x3364 DUP2 DUP6 PUSH2 0x32FA JUMP JUMPDEST SWAP4 POP PUSH2 0x336F DUP4 PUSH2 0x330B JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x33A0 JUMPI DUP2 MLOAD PUSH2 0x3387 DUP9 DUP3 PUSH2 0x332A JUMP JUMPDEST SWAP8 POP PUSH2 0x3392 DUP4 PUSH2 0x3342 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x3373 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x33E2 DUP2 PUSH2 0x29C4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x33F4 DUP4 DUP4 PUSH2 0x33D9 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3418 DUP3 PUSH2 0x33AD JUMP JUMPDEST PUSH2 0x3422 DUP2 DUP6 PUSH2 0x33B8 JUMP JUMPDEST SWAP4 POP PUSH2 0x342D DUP4 PUSH2 0x33C9 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x345E JUMPI DUP2 MLOAD PUSH2 0x3445 DUP9 DUP3 PUSH2 0x33E8 JUMP JUMPDEST SWAP8 POP PUSH2 0x3450 DUP4 PUSH2 0x3400 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x3431 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x3480 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x2FC4 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x3492 DUP2 DUP6 PUSH2 0x334F JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x34A6 DUP2 DUP5 PUSH2 0x340D JUMP JUMPDEST SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x34E6 PUSH1 0x20 DUP4 PUSH2 0x301B JUMP JUMPDEST SWAP2 POP PUSH2 0x34F1 DUP3 PUSH2 0x34B0 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3515 DUP2 PUSH2 0x34D9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x54616D61676F537761703A2063616C6C6572206973206E6F7420737761702069 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6E69746961746F72000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3578 PUSH1 0x28 DUP4 PUSH2 0x301B JUMP JUMPDEST SWAP2 POP PUSH2 0x3583 DUP3 PUSH2 0x351C JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x35A7 DUP2 PUSH2 0x356B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x54616D61676F537761703A2043616E27742061636365707420737761702C2062 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F7468207061727469636970616E7473206469646E277420616464204E465473 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x360A PUSH1 0x40 DUP4 PUSH2 0x301B JUMP JUMPDEST SWAP2 POP PUSH2 0x3615 DUP3 PUSH2 0x35AE JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3639 DUP2 PUSH2 0x35FD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x54616D61676F537761703A2063616C6C6572206973206E6F7420737761702070 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6172746963697061746F72000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x369C PUSH1 0x2B DUP4 PUSH2 0x301B JUMP JUMPDEST SWAP2 POP PUSH2 0x36A7 DUP3 PUSH2 0x3640 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x36CB DUP2 PUSH2 0x368F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x54616D61676F537761703A207377617020616C726561647920696E6974696174 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6564000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x372E PUSH1 0x22 DUP4 PUSH2 0x301B JUMP JUMPDEST SWAP2 POP PUSH2 0x3739 DUP3 PUSH2 0x36D2 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x375D DUP2 PUSH2 0x3721 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x537761704B6977693A207472616E7366657220746F20746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x37C0 PUSH1 0x26 DUP4 PUSH2 0x301B JUMP JUMPDEST SWAP2 POP PUSH2 0x37CB DUP3 PUSH2 0x3764 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x37EF DUP2 PUSH2 0x37B3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3801 DUP3 PUSH2 0x29C4 JUMP JUMPDEST SWAP2 POP PUSH2 0x380C DUP4 PUSH2 0x29C4 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x381F JUMPI PUSH2 0x381E PUSH2 0x30BE JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3886 PUSH1 0x26 DUP4 PUSH2 0x301B JUMP JUMPDEST SWAP2 POP PUSH2 0x3891 DUP3 PUSH2 0x382A JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x38B5 DUP2 PUSH2 0x3879 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x38F6 DUP3 PUSH2 0x29C4 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x3928 JUMPI PUSH2 0x3927 PUSH2 0x30BE JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x393C DUP2 PUSH2 0x29C4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x397C JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x3961 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x398B JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x399C DUP3 PUSH2 0x3942 JUMP JUMPDEST PUSH2 0x39A6 DUP2 DUP6 PUSH2 0x394D JUMP JUMPDEST SWAP4 POP PUSH2 0x39B6 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x395E JUMP JUMPDEST PUSH2 0x39BF DUP2 PUSH2 0x2A04 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x39DF PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x2EBA JUMP JUMPDEST PUSH2 0x39EC PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x2EBA JUMP JUMPDEST PUSH2 0x39F9 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x3933 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x3A0B DUP2 DUP5 PUSH2 0x3991 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP5 CREATE PUSH4 0x57EC6BBB 0xDF 0x5D SWAP11 DUP11 PUSH3 0xC06D13 CREATE 0xAD 0xDE BALANCE BYTE EQ PC SWAP5 LOG1 SWAP8 DUP1 PUSH23 0x9C9C6A400A64736F6C634300080E003300000000000000 ",
              "sourceMap": "321:8556:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6898:1272;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;588:200:4;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2743:789:7;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1668:101:0;;;;;;;;;;;;;:::i;:::-;;5272:1422:7;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3979:1006;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1036:85:0;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;8661:214:7;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2157:104;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;432:18;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1918:198:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;6898:1272:7;6986:10;6958:38;;:6;:14;6965:6;6958:14;;;;;;;;;;;;;;;:24;;;;;;;;;;;;:38;;;:81;;;;7029:10;7000:39;;:6;:14;7007:6;7000:14;;;;;;;;;;;;;;;:25;;;;;;;;;;;;:39;;;6958:81;6946:159;;;;;;;;;;;;:::i;:::-;;;;;;;;;7136:152;7174:4;7184:6;:14;7191:6;7184:14;;;;;;;;;;;;;;;:24;;;;;;;;;;;;7213:6;:14;7220:6;7213:14;;;;;;;;;;;;;;;:36;;7136:152;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7254:6;:14;7261:6;7254:14;;;;;;;;;;;;;;;:30;;7136:152;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:25;:152::i;:::-;7344:1;7296:6;:14;7303:6;7296:14;;;;;;;;;;;;;;;:37;;:44;;;;:49;7293:254;;7382:160;7421:4;7432:6;:14;7439:6;7432:14;;;;;;;;;;;;;;;:25;;;;;;;;;;;;7463:6;:14;7470:6;7463:14;;;;;;;;;;;;;;;:37;;7382:160;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7506:6;:14;7513:6;7506:14;;;;;;;;;;;;;;;:31;;7382:160;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:25;:160::i;:::-;7293:254;7593:1;7555:6;:14;7562:6;7555:14;;;;;;;;;;;;;;;:34;;;;;;;;;;;;:39;;;7551:270;;7617:6;:14;7624:6;7617:14;;;;;;;;;;;;;;;:34;;;;;;;;;;;;7601:12;;:50;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;7656:24;7683:6;:14;7690:6;7683:14;;;;;;;;;;;;;;;:34;;;;;;;;;;;;7656:61;;7759:1;7722:6;:14;7729:6;7722:14;;;;;;;;;;;;;;;:34;;;:38;;;;;;;;;;;;;;;;;;7765:6;:14;7772:6;7765:14;;;;;;;;;;;;;;;:24;;;;;;;;;;;;:33;;:51;7799:16;7765:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7596:225;7551:270;7867:1;7828:6;:14;7835:6;7828:14;;;;;;;;;;;;;;;:35;;;;;;;;;;;;:40;;;7824:275;;7891:6;:14;7898:6;7891:14;;;;;;;;;;;;;;;:35;;;;;;;;;;;;7875:12;;:51;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;7931:24;7958:6;:14;7965:6;7958:14;;;;;;;;;;;;;;;:35;;;;;;;;;;;;7931:62;;8036:1;7998:6;:14;8005:6;7998:14;;;;;;;;;;;;;;;:35;;;:39;;;;;;;;;;;;;;;;;;8042:6;:14;8049:6;8042:14;;;;;;;;;;;;;;;:25;;;;;;;;;;;;:34;;:52;8077:16;8042:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7870:229;7824:275;8133:6;8108:32;;8121:10;8108:32;;;;;;;;;;;;8152:6;:14;8159:6;8152:14;;;;;;;;;;;;;;;;8145:21;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6898:1272;:::o;588:200:4:-;726:6;751:30;;;744:37;;588:200;;;;;;:::o;2743:789:7:-;1926:3;;;;;;;;;;;1913:16;;:9;:16;;1905:98;;;;;;;;;;;;:::i;:::-;;;;;;;;;2897:12:::1;2911:6;1795;:13;1772:12;:19;:36;1764:101;;;;;;;;;;;;:::i;:::-;;;;;;;;;2940:1:::2;2923:13;;:18;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;2946:90;2976:10;2999:4;3009:12;3026:6;2946:25;:90::i;:::-;3041:17;3061:6;:21;3068:13:::0;::::2;;;;;;;;;;3061:21;;;;;;;;;;;;;;;3041:41;;3111:10;3086:4;:14;;;:36;;;;;;;;;;;;;;;;;;3155:12;3126:4;:26;;:41;;;;;;;;;;;;:::i;:::-;;3194:6;3171:4;:20;;:29;;;;;;;;;;;;:::i;:::-;;3205:12;3220:3;;;;;;;;;;;3205:18;;3244:4;3232:16;;:9;:16;3228:129;;;3303:4;3290:9;3282:25;;;;:::i;:::-;3255:4;:24;;;:52;;;;;;;;;;;;;;;;;;3328:4;:24;;;;;;;;;;;;3312:12;;:40;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;3228:129;3386:10;3360:4;:15;;;:37;;;;;;;;;;;;;;;;;;3454:13;;;;;;;;;;;3407:121;;3439:10;3407:121;;3424:10;3407:121;;;3472:4;:24;;;;;;;;;;;;3501:12;3518:6;3407:121;;;;;;;;:::i;:::-;;;;;;;;2919:613;;2007:1:::1;;2743:789:::0;;;:::o;1668:101:0:-;1259:12;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1732:30:::1;1759:1;1732:18;:30::i;:::-;1668:101::o:0;5272:1422:7:-;5330:6;1593;:14;1600:6;1593:14;;;;;;;;;;;;;;;:24;;;;;;;;;;;;1579:38;;:10;:38;;;1571:94;;;;;;;;;;;;:::i;:::-;;;;;;;;;5403:1:::1;5355:6;:14;5362:6;5355:14;;;;;;;;;;;;;;;:37;;:44;;;;:49;;:92;;;;5446:1;5408:6;:14;5415:6;5408:14;;;;;;;;;;;;;;;:35;;;;;;;;;;;;:39;;;5355:92;5354:193;;;;;5503:1;5456:6;:14;5463:6;5456:14;;;;;;;;;;;;;;;:36;;:43;;;;:48;;:90;;;;5545:1;5508:6;:14;5515:6;5508:14;;;;;;;;;;;;;;;:34;;;;;;;;;;;;:38;;;5456:90;5354:193;5342:280;;;;;;;;;;;;:::i;:::-;;;;;;;;;5671:154;5709:4;5719:6;:14;5726:6;5719:14;;;;;;;;;;;;;;;:24;;;;;;;;;;;;5748:6;:14;5755:6;5748:14;;;;;;;;;;;;;;;:37;;5671:154;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5790:6;:14;5797:6;5790:14;;;;;;;;;;;;;;;:31;;5671:154;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:25;:154::i;:::-;5876:153;5914:4;5924:6;:14;5931:6;5924:14;;;;;;;;;;;;;;;:25;;;;;;;;;;;;5954:6;:14;5961:6;5954:14;;;;;;;;;;;;;;;:36;;5876:153;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5995:6;:14;6002:6;5995:14;;;;;;;;;;;;;;;:30;;5876:153;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:25;:153::i;:::-;6076:1;6038:6;:14;6045:6;6038:14;;;;;;;;;;;;;;;:34;;;;;;;;;;;;:39;;;6034:271;;6100:6;:14;6107:6;6100:14;;;;;;;;;;;;;;;:34;;;;;;;;;;;;6084:12;;:50;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;6139:24;6166:6;:14;6173:6;6166:14;;;;;;;;;;;;;;;:34;;;;;;;;;;;;6139:61;;6242:1;6205:6;:14;6212:6;6205:14;;;;;;;;;;;;;;;:34;;;:38;;;;;;;;;;;;;;;;;;6248:6;:14;6255:6;6248:14;;;;;;;;;;;;;;;:25;;;;;;;;;;;;:34;;:52;6283:16;6248:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;6079:226;6034:271;6351:1;6312:6;:14;6319:6;6312:14;;;;;;;;;;;;;;;:35;;;;;;;;;;;;:40;;;6308:274;;6375:6;:14;6382:6;6375:14;;;;;;;;;;;;;;;:35;;;;;;;;;;;;6359:12;;:51;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;6415:24;6442:6;:14;6449:6;6442:14;;;;;;;;;;;;;;;:35;;;;;;;;;;;;6415:62;;6520:1;6482:6;:14;6489:6;6482:14;;;;;;;;;;;;;;;:35;;;:39;;;;;;;;;;;;;;;;;;6526:6;:14;6533:6;6526:14;;;;;;;;;;;;;;;:24;;;;;;;;;;;;:33;;:51;6560:16;6526:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;6354:228;6308:274;6657:6;6591:73;;6630:6;:14;6637:6;6630:14;;;;;;;;;;;;;;;:25;;;;;;;;;;;;6591:73;;6604:6;:14;6611:6;6604:14;;;;;;;;;;;;;;;:24;;;;;;;;;;;;6591:73;;;;;;;;;;;;6676:6;:14;6683:6;6676:14;;;;;;;;;;;;;;;;6669:21:::0;::::1;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5272:1422:::0;;:::o;3979:1006::-;1926:3;;;;;;;;;;;1913:16;;:9;:16;;1905:98;;;;;;;;;;;;:::i;:::-;;;;;;;;;4129:12:::1;4143:6;1795;:13;1772:12;:19;:36;1764:101;;;;;;;;;;;;:::i;:::-;;;;;;;;;4192:10:::2;4163:39;;:6;:14;4170:6;4163:14;;;;;;;;;;;;;;;:25;;;;;;;;;;;;:39;;;4155:95;;;;;;;;;;;;:::i;:::-;;;;;;;;;4305:1;4266:6;:14;4273:6;4266:14;;;;;;;;;;;;;;;:35;;;;;;;;;;;;:40;;;:149;;;;;4363:1;4315:6;:14;4322:6;4315:14;;;;;;;;;;;;;;;:37;;:44;;;;:49;:99;;;;;4413:1;4371:6;:14;4378:6;4371:14;;;;;;;;;;;;;;;:31;;:38;;;;:43;4315:99;4266:149;4254:203;;;;;;;;;;;;:::i;:::-;;;;;;;;;4462:90;4492:10;4515:4;4525:12;4542:6;4462:25;:90::i;:::-;4597:12;4557:6;:14;4564:6;4557:14;;;;;;;;;;;;;;;:37;;:52;;;;;;;;;;;;:::i;:::-;;4647:6;4613;:14;4620:6;4613:14;;;;;;;;;;;;;;;:31;;:40;;;;;;;;;;;;:::i;:::-;;4658:12;4673:3;;;;;;;;;;;4658:18;;4697:4;4685:16;;:9;:16;4681:151;;;4767:4;4754:9;4746:25;;;;:::i;:::-;4708:6;:14;4715:6;4708:14;;;;;;;;;;;;;;;:35;;;:63;;;;;;;;;;;;;;;;;;4792:6;:14;4799:6;4792:14;;;;;;;;;;;;;;;:35;;;;;;;;;;;;4776:12;;:51;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;4681:151;4903:6;4841:140;;4874:6;:14;4881:6;4874:14;;;;;;;;;;;;;;;:24;;;;;;;;;;;;4841:140;;4859:10;4841:140;;;4914:6;:14;4921:6;4914:14;;;;;;;;;;;;;;;:35;;;;;;;;;;;;4954:12;4971:6;4841:140;;;;;;;;:::i;:::-;;;;;;;;4151:834;2007:1:::1;;3979:1006:::0;;;:::o;1036:85:0:-;1082:7;1108:6;;;;;;;;;;;1101:13;;1036:85;:::o;8661:214:7:-;1259:12:0;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;8763:1:7::1;8742:23;;:9;:23;;::::0;8734:74:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;8813:9;:18;;:58;8857:12;;;;;;;;;;;8833:36;;:21;:36;;;;:::i;:::-;8813:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;8661:214:::0;:::o;2157:104::-;1259:12:0;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;2221:6:7::1;2215:3;;:12;;;;;;;;;;;;;;;;;;2236:21;2250:6;2236:21;;;;;;:::i;:::-;;;;;;;;2157:104:::0;:::o;432:18::-;;;;;;;;;;;;;:::o;1918:198:0:-;1259:12;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;2026:1:::1;2006:22;;:8;:22;;::::0;1998:73:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;2081:28;2100:8;2081:18;:28::i;:::-;1918:198:::0;:::o;8173:261:7:-;8327:9;8322:109;8344:6;:13;8340:1;:17;8322:109;;;8368:58;8385:4;8391:2;8395:12;8408:1;8395:15;;;;;;;;:::i;:::-;;;;;;;;8412:6;8419:1;8412:9;;;;;;;;:::i;:::-;;;;;;;;8368:58;;;;;;;;;;;;:16;:58::i;:::-;8359:3;;;;;:::i;:::-;;;;8322:109;;;;8173:261;;;;:::o;640:96:5:-;693:7;719:10;712:17;;640:96;:::o;2270:187:0:-;2343:16;2362:6;;;;;;;;;;;2343:25;;2387:8;2378:6;;:17;;;;;;;;;;;;;;;;;;2441:8;2410:40;;2431:8;2410:40;;;;;;;;;;;;2333:124;2270:187;:::o;8437:215:7:-;8591:12;8583:38;;;8622:4;8628:2;8632:7;8641:5;8583:64;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8437:215;;;;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:75:8:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:101;370:7;410:18;403:5;399:30;388:41;;334:101;;;:::o;441:120::-;513:23;530:5;513:23;:::i;:::-;506:5;503:34;493:62;;551:1;548;541:12;493:62;441:120;:::o;567:137::-;612:5;650:6;637:20;628:29;;666:32;692:5;666:32;:::i;:::-;567:137;;;;:::o;710:327::-;768:6;817:2;805:9;796:7;792:23;788:32;785:119;;;823:79;;:::i;:::-;785:119;943:1;968:52;1012:7;1003:6;992:9;988:22;968:52;:::i;:::-;958:62;;914:116;710:327;;;;:::o;1043:126::-;1080:7;1120:42;1113:5;1109:54;1098:65;;1043:126;;;:::o;1175:96::-;1212:7;1241:24;1259:5;1241:24;:::i;:::-;1230:35;;1175:96;;;:::o;1277:122::-;1350:24;1368:5;1350:24;:::i;:::-;1343:5;1340:35;1330:63;;1389:1;1386;1379:12;1330:63;1277:122;:::o;1405:139::-;1451:5;1489:6;1476:20;1467:29;;1505:33;1532:5;1505:33;:::i;:::-;1405:139;;;;:::o;1550:77::-;1587:7;1616:5;1605:16;;1550:77;;;:::o;1633:122::-;1706:24;1724:5;1706:24;:::i;:::-;1699:5;1696:35;1686:63;;1745:1;1742;1735:12;1686:63;1633:122;:::o;1761:139::-;1807:5;1845:6;1832:20;1823:29;;1861:33;1888:5;1861:33;:::i;:::-;1761:139;;;;:::o;1906:117::-;2015:1;2012;2005:12;2029:117;2138:1;2135;2128:12;2152:102;2193:6;2244:2;2240:7;2235:2;2228:5;2224:14;2220:28;2210:38;;2152:102;;;:::o;2260:180::-;2308:77;2305:1;2298:88;2405:4;2402:1;2395:15;2429:4;2426:1;2419:15;2446:281;2529:27;2551:4;2529:27;:::i;:::-;2521:6;2517:40;2659:6;2647:10;2644:22;2623:18;2611:10;2608:34;2605:62;2602:88;;;2670:18;;:::i;:::-;2602:88;2710:10;2706:2;2699:22;2489:238;2446:281;;:::o;2733:129::-;2767:6;2794:20;;:::i;:::-;2784:30;;2823:33;2851:4;2843:6;2823:33;:::i;:::-;2733:129;;;:::o;2868:307::-;2929:4;3019:18;3011:6;3008:30;3005:56;;;3041:18;;:::i;:::-;3005:56;3079:29;3101:6;3079:29;:::i;:::-;3071:37;;3163:4;3157;3153:15;3145:23;;2868:307;;;:::o;3181:154::-;3265:6;3260:3;3255;3242:30;3327:1;3318:6;3313:3;3309:16;3302:27;3181:154;;;:::o;3341:410::-;3418:5;3443:65;3459:48;3500:6;3459:48;:::i;:::-;3443:65;:::i;:::-;3434:74;;3531:6;3524:5;3517:21;3569:4;3562:5;3558:16;3607:3;3598:6;3593:3;3589:16;3586:25;3583:112;;;3614:79;;:::i;:::-;3583:112;3704:41;3738:6;3733:3;3728;3704:41;:::i;:::-;3424:327;3341:410;;;;;:::o;3770:338::-;3825:5;3874:3;3867:4;3859:6;3855:17;3851:27;3841:122;;3882:79;;:::i;:::-;3841:122;3999:6;3986:20;4024:78;4098:3;4090:6;4083:4;4075:6;4071:17;4024:78;:::i;:::-;4015:87;;3831:277;3770:338;;;;:::o;4114:943::-;4209:6;4217;4225;4233;4282:3;4270:9;4261:7;4257:23;4253:33;4250:120;;;4289:79;;:::i;:::-;4250:120;4409:1;4434:53;4479:7;4470:6;4459:9;4455:22;4434:53;:::i;:::-;4424:63;;4380:117;4536:2;4562:53;4607:7;4598:6;4587:9;4583:22;4562:53;:::i;:::-;4552:63;;4507:118;4664:2;4690:53;4735:7;4726:6;4715:9;4711:22;4690:53;:::i;:::-;4680:63;;4635:118;4820:2;4809:9;4805:18;4792:32;4851:18;4843:6;4840:30;4837:117;;;4873:79;;:::i;:::-;4837:117;4978:62;5032:7;5023:6;5012:9;5008:22;4978:62;:::i;:::-;4968:72;;4763:287;4114:943;;;;;;;:::o;5063:149::-;5099:7;5139:66;5132:5;5128:78;5117:89;;5063:149;;;:::o;5218:115::-;5303:23;5320:5;5303:23;:::i;:::-;5298:3;5291:36;5218:115;;:::o;5339:218::-;5430:4;5468:2;5457:9;5453:18;5445:26;;5481:69;5547:1;5536:9;5532:17;5523:6;5481:69;:::i;:::-;5339:218;;;;:::o;5563:311::-;5640:4;5730:18;5722:6;5719:30;5716:56;;;5752:18;;:::i;:::-;5716:56;5802:4;5794:6;5790:17;5782:25;;5862:4;5856;5852:15;5844:23;;5563:311;;;:::o;5880:117::-;5989:1;5986;5979:12;6020:710;6116:5;6141:81;6157:64;6214:6;6157:64;:::i;:::-;6141:81;:::i;:::-;6132:90;;6242:5;6271:6;6264:5;6257:21;6305:4;6298:5;6294:16;6287:23;;6358:4;6350:6;6346:17;6338:6;6334:30;6387:3;6379:6;6376:15;6373:122;;;6406:79;;:::i;:::-;6373:122;6521:6;6504:220;6538:6;6533:3;6530:15;6504:220;;;6613:3;6642:37;6675:3;6663:10;6642:37;:::i;:::-;6637:3;6630:50;6709:4;6704:3;6700:14;6693:21;;6580:144;6564:4;6559:3;6555:14;6548:21;;6504:220;;;6508:21;6122:608;;6020:710;;;;;:::o;6753:370::-;6824:5;6873:3;6866:4;6858:6;6854:17;6850:27;6840:122;;6881:79;;:::i;:::-;6840:122;6998:6;6985:20;7023:94;7113:3;7105:6;7098:4;7090:6;7086:17;7023:94;:::i;:::-;7014:103;;6830:293;6753:370;;;;:::o;7129:311::-;7206:4;7296:18;7288:6;7285:30;7282:56;;;7318:18;;:::i;:::-;7282:56;7368:4;7360:6;7356:17;7348:25;;7428:4;7422;7418:15;7410:23;;7129:311;;;:::o;7463:710::-;7559:5;7584:81;7600:64;7657:6;7600:64;:::i;:::-;7584:81;:::i;:::-;7575:90;;7685:5;7714:6;7707:5;7700:21;7748:4;7741:5;7737:16;7730:23;;7801:4;7793:6;7789:17;7781:6;7777:30;7830:3;7822:6;7819:15;7816:122;;;7849:79;;:::i;:::-;7816:122;7964:6;7947:220;7981:6;7976:3;7973:15;7947:220;;;8056:3;8085:37;8118:3;8106:10;8085:37;:::i;:::-;8080:3;8073:50;8152:4;8147:3;8143:14;8136:21;;8023:144;8007:4;8002:3;7998:14;7991:21;;7947:220;;;7951:21;7565:608;;7463:710;;;;;:::o;8196:370::-;8267:5;8316:3;8309:4;8301:6;8297:17;8293:27;8283:122;;8324:79;;:::i;:::-;8283:122;8441:6;8428:20;8466:94;8556:3;8548:6;8541:4;8533:6;8529:17;8466:94;:::i;:::-;8457:103;;8273:293;8196:370;;;;:::o;8572:1039::-;8699:6;8707;8715;8764:2;8752:9;8743:7;8739:23;8735:32;8732:119;;;8770:79;;:::i;:::-;8732:119;8890:1;8915:53;8960:7;8951:6;8940:9;8936:22;8915:53;:::i;:::-;8905:63;;8861:117;9045:2;9034:9;9030:18;9017:32;9076:18;9068:6;9065:30;9062:117;;;9098:79;;:::i;:::-;9062:117;9203:78;9273:7;9264:6;9253:9;9249:22;9203:78;:::i;:::-;9193:88;;8988:303;9358:2;9347:9;9343:18;9330:32;9389:18;9381:6;9378:30;9375:117;;;9411:79;;:::i;:::-;9375:117;9516:78;9586:7;9577:6;9566:9;9562:22;9516:78;:::i;:::-;9506:88;;9301:303;8572:1039;;;;;:::o;9617:1037::-;9743:6;9751;9759;9808:2;9796:9;9787:7;9783:23;9779:32;9776:119;;;9814:79;;:::i;:::-;9776:119;9934:1;9959:52;10003:7;9994:6;9983:9;9979:22;9959:52;:::i;:::-;9949:62;;9905:116;10088:2;10077:9;10073:18;10060:32;10119:18;10111:6;10108:30;10105:117;;;10141:79;;:::i;:::-;10105:117;10246:78;10316:7;10307:6;10296:9;10292:22;10246:78;:::i;:::-;10236:88;;10031:303;10401:2;10390:9;10386:18;10373:32;10432:18;10424:6;10421:30;10418:117;;;10454:79;;:::i;:::-;10418:117;10559:78;10629:7;10620:6;10609:9;10605:22;10559:78;:::i;:::-;10549:88;;10344:303;9617:1037;;;;;:::o;10660:118::-;10747:24;10765:5;10747:24;:::i;:::-;10742:3;10735:37;10660:118;;:::o;10784:222::-;10877:4;10915:2;10904:9;10900:18;10892:26;;10928:71;10996:1;10985:9;10981:17;10972:6;10928:71;:::i;:::-;10784:222;;;;:::o;11012:104::-;11057:7;11086:24;11104:5;11086:24;:::i;:::-;11075:35;;11012:104;;;:::o;11122:138::-;11203:32;11229:5;11203:32;:::i;:::-;11196:5;11193:43;11183:71;;11250:1;11247;11240:12;11183:71;11122:138;:::o;11266:155::-;11320:5;11358:6;11345:20;11336:29;;11374:41;11409:5;11374:41;:::i;:::-;11266:155;;;;:::o;11427:345::-;11494:6;11543:2;11531:9;11522:7;11518:23;11514:32;11511:119;;;11549:79;;:::i;:::-;11511:119;11669:1;11694:61;11747:7;11738:6;11727:9;11723:22;11694:61;:::i;:::-;11684:71;;11640:125;11427:345;;;;:::o;11778:118::-;11815:7;11855:34;11848:5;11844:46;11833:57;;11778:118;;;:::o;11902:122::-;11975:24;11993:5;11975:24;:::i;:::-;11968:5;11965:35;11955:63;;12014:1;12011;12004:12;11955:63;11902:122;:::o;12030:139::-;12076:5;12114:6;12101:20;12092:29;;12130:33;12157:5;12130:33;:::i;:::-;12030:139;;;;:::o;12175:329::-;12234:6;12283:2;12271:9;12262:7;12258:23;12254:32;12251:119;;;12289:79;;:::i;:::-;12251:119;12409:1;12434:53;12479:7;12470:6;12459:9;12455:22;12434:53;:::i;:::-;12424:63;;12380:117;12175:329;;;;:::o;12510:118::-;12597:24;12615:5;12597:24;:::i;:::-;12592:3;12585:37;12510:118;;:::o;12634:222::-;12727:4;12765:2;12754:9;12750:18;12742:26;;12778:71;12846:1;12835:9;12831:17;12822:6;12778:71;:::i;:::-;12634:222;;;;:::o;12862:329::-;12921:6;12970:2;12958:9;12949:7;12945:23;12941:32;12938:119;;;12976:79;;:::i;:::-;12938:119;13096:1;13121:53;13166:7;13157:6;13146:9;13142:22;13121:53;:::i;:::-;13111:63;;13067:117;12862:329;;;;:::o;13197:169::-;13281:11;13315:6;13310:3;13303:19;13355:4;13350:3;13346:14;13331:29;;13197:169;;;;:::o;13372:242::-;13512:34;13508:1;13500:6;13496:14;13489:58;13581:25;13576:2;13568:6;13564:15;13557:50;13372:242;:::o;13620:366::-;13762:3;13783:67;13847:2;13842:3;13783:67;:::i;:::-;13776:74;;13859:93;13948:3;13859:93;:::i;:::-;13977:2;13972:3;13968:12;13961:19;;13620:366;;;:::o;13992:419::-;14158:4;14196:2;14185:9;14181:18;14173:26;;14245:9;14239:4;14235:20;14231:1;14220:9;14216:17;14209:47;14273:131;14399:4;14273:131;:::i;:::-;14265:139;;13992:419;;;:::o;14417:180::-;14465:77;14462:1;14455:88;14562:4;14559:1;14552:15;14586:4;14583:1;14576:15;14603:191;14643:4;14663:20;14681:1;14663:20;:::i;:::-;14658:25;;14697:20;14715:1;14697:20;:::i;:::-;14692:25;;14736:1;14733;14730:8;14727:34;;;14741:18;;:::i;:::-;14727:34;14786:1;14783;14779:9;14771:17;;14603:191;;;;:::o;14800:293::-;14940:34;14936:1;14928:6;14924:14;14917:58;15009:34;15004:2;14996:6;14992:15;14985:59;15078:7;15073:2;15065:6;15061:15;15054:32;14800:293;:::o;15099:366::-;15241:3;15262:67;15326:2;15321:3;15262:67;:::i;:::-;15255:74;;15338:93;15427:3;15338:93;:::i;:::-;15456:2;15451:3;15447:12;15440:19;;15099:366;;;:::o;15471:419::-;15637:4;15675:2;15664:9;15660:18;15652:26;;15724:9;15718:4;15714:20;15710:1;15699:9;15695:17;15688:47;15752:131;15878:4;15752:131;:::i;:::-;15744:139;;15471:419;;;:::o;15896:239::-;16036:34;16032:1;16024:6;16020:14;16013:58;16105:22;16100:2;16092:6;16088:15;16081:47;15896:239;:::o;16141:366::-;16283:3;16304:67;16368:2;16363:3;16304:67;:::i;:::-;16297:74;;16380:93;16469:3;16380:93;:::i;:::-;16498:2;16493:3;16489:12;16482:19;;16141:366;;;:::o;16513:419::-;16679:4;16717:2;16706:9;16702:18;16694:26;;16766:9;16760:4;16756:20;16752:1;16741:9;16737:17;16730:47;16794:131;16920:4;16794:131;:::i;:::-;16786:139;;16513:419;;;:::o;16938:254::-;16977:3;16996:19;17013:1;16996:19;:::i;:::-;16991:24;;17029:19;17046:1;17029:19;:::i;:::-;17024:24;;17134:1;17114:18;17110:26;17107:1;17104:33;17101:59;;;17140:18;;:::i;:::-;17101:59;17184:1;17181;17177:9;17170:16;;16938:254;;;;:::o;17198:273::-;17238:3;17257:20;17275:1;17257:20;:::i;:::-;17252:25;;17291:20;17309:1;17291:20;:::i;:::-;17286:25;;17413:1;17377:34;17373:42;17370:1;17367:49;17364:75;;;17419:18;;:::i;:::-;17364:75;17463:1;17460;17456:9;17449:16;;17198:273;;;;:::o;17477:114::-;17544:6;17578:5;17572:12;17562:22;;17477:114;;;:::o;17597:184::-;17696:11;17730:6;17725:3;17718:19;17770:4;17765:3;17761:14;17746:29;;17597:184;;;;:::o;17787:132::-;17854:4;17877:3;17869:11;;17907:4;17902:3;17898:14;17890:22;;17787:132;;;:::o;17925:108::-;18002:24;18020:5;18002:24;:::i;:::-;17997:3;17990:37;17925:108;;:::o;18039:179::-;18108:10;18129:46;18171:3;18163:6;18129:46;:::i;:::-;18207:4;18202:3;18198:14;18184:28;;18039:179;;;;:::o;18224:113::-;18294:4;18326;18321:3;18317:14;18309:22;;18224:113;;;:::o;18373:732::-;18492:3;18521:54;18569:5;18521:54;:::i;:::-;18591:86;18670:6;18665:3;18591:86;:::i;:::-;18584:93;;18701:56;18751:5;18701:56;:::i;:::-;18780:7;18811:1;18796:284;18821:6;18818:1;18815:13;18796:284;;;18897:6;18891:13;18924:63;18983:3;18968:13;18924:63;:::i;:::-;18917:70;;19010:60;19063:6;19010:60;:::i;:::-;19000:70;;18856:224;18843:1;18840;18836:9;18831:14;;18796:284;;;18800:14;19096:3;19089:10;;18497:608;;;18373:732;;;;:::o;19111:114::-;19178:6;19212:5;19206:12;19196:22;;19111:114;;;:::o;19231:184::-;19330:11;19364:6;19359:3;19352:19;19404:4;19399:3;19395:14;19380:29;;19231:184;;;;:::o;19421:132::-;19488:4;19511:3;19503:11;;19541:4;19536:3;19532:14;19524:22;;19421:132;;;:::o;19559:108::-;19636:24;19654:5;19636:24;:::i;:::-;19631:3;19624:37;19559:108;;:::o;19673:179::-;19742:10;19763:46;19805:3;19797:6;19763:46;:::i;:::-;19841:4;19836:3;19832:14;19818:28;;19673:179;;;;:::o;19858:113::-;19928:4;19960;19955:3;19951:14;19943:22;;19858:113;;;:::o;20007:732::-;20126:3;20155:54;20203:5;20155:54;:::i;:::-;20225:86;20304:6;20299:3;20225:86;:::i;:::-;20218:93;;20335:56;20385:5;20335:56;:::i;:::-;20414:7;20445:1;20430:284;20455:6;20452:1;20449:13;20430:284;;;20531:6;20525:13;20558:63;20617:3;20602:13;20558:63;:::i;:::-;20551:70;;20644:60;20697:6;20644:60;:::i;:::-;20634:70;;20490:224;20477:1;20474;20470:9;20465:14;;20430:284;;;20434:14;20730:3;20723:10;;20131:608;;;20007:732;;;;:::o;20745:744::-;20994:4;21032:2;21021:9;21017:18;21009:26;;21045:71;21113:1;21102:9;21098:17;21089:6;21045:71;:::i;:::-;21163:9;21157:4;21153:20;21148:2;21137:9;21133:18;21126:48;21191:108;21294:4;21285:6;21191:108;:::i;:::-;21183:116;;21346:9;21340:4;21336:20;21331:2;21320:9;21316:18;21309:48;21374:108;21477:4;21468:6;21374:108;:::i;:::-;21366:116;;20745:744;;;;;;:::o;21495:182::-;21635:34;21631:1;21623:6;21619:14;21612:58;21495:182;:::o;21683:366::-;21825:3;21846:67;21910:2;21905:3;21846:67;:::i;:::-;21839:74;;21922:93;22011:3;21922:93;:::i;:::-;22040:2;22035:3;22031:12;22024:19;;21683:366;;;:::o;22055:419::-;22221:4;22259:2;22248:9;22244:18;22236:26;;22308:9;22302:4;22298:20;22294:1;22283:9;22279:17;22272:47;22336:131;22462:4;22336:131;:::i;:::-;22328:139;;22055:419;;;:::o;22480:227::-;22620:34;22616:1;22608:6;22604:14;22597:58;22689:10;22684:2;22676:6;22672:15;22665:35;22480:227;:::o;22713:366::-;22855:3;22876:67;22940:2;22935:3;22876:67;:::i;:::-;22869:74;;22952:93;23041:3;22952:93;:::i;:::-;23070:2;23065:3;23061:12;23054:19;;22713:366;;;:::o;23085:419::-;23251:4;23289:2;23278:9;23274:18;23266:26;;23338:9;23332:4;23328:20;23324:1;23313:9;23309:17;23302:47;23366:131;23492:4;23366:131;:::i;:::-;23358:139;;23085:419;;;:::o;23510:251::-;23650:34;23646:1;23638:6;23634:14;23627:58;23719:34;23714:2;23706:6;23702:15;23695:59;23510:251;:::o;23767:366::-;23909:3;23930:67;23994:2;23989:3;23930:67;:::i;:::-;23923:74;;24006:93;24095:3;24006:93;:::i;:::-;24124:2;24119:3;24115:12;24108:19;;23767:366;;;:::o;24139:419::-;24305:4;24343:2;24332:9;24328:18;24320:26;;24392:9;24386:4;24382:20;24378:1;24367:9;24363:17;24356:47;24420:131;24546:4;24420:131;:::i;:::-;24412:139;;24139:419;;;:::o;24564:230::-;24704:34;24700:1;24692:6;24688:14;24681:58;24773:13;24768:2;24760:6;24756:15;24749:38;24564:230;:::o;24800:366::-;24942:3;24963:67;25027:2;25022:3;24963:67;:::i;:::-;24956:74;;25039:93;25128:3;25039:93;:::i;:::-;25157:2;25152:3;25148:12;25141:19;;24800:366;;;:::o;25172:419::-;25338:4;25376:2;25365:9;25361:18;25353:26;;25425:9;25419:4;25415:20;25411:1;25400:9;25396:17;25389:47;25453:131;25579:4;25453:131;:::i;:::-;25445:139;;25172:419;;;:::o;25597:221::-;25737:34;25733:1;25725:6;25721:14;25714:58;25806:4;25801:2;25793:6;25789:15;25782:29;25597:221;:::o;25824:366::-;25966:3;25987:67;26051:2;26046:3;25987:67;:::i;:::-;25980:74;;26063:93;26152:3;26063:93;:::i;:::-;26181:2;26176:3;26172:12;26165:19;;25824:366;;;:::o;26196:419::-;26362:4;26400:2;26389:9;26385:18;26377:26;;26449:9;26443:4;26439:20;26435:1;26424:9;26420:17;26413:47;26477:131;26603:4;26477:131;:::i;:::-;26469:139;;26196:419;;;:::o;26621:225::-;26761:34;26757:1;26749:6;26745:14;26738:58;26830:8;26825:2;26817:6;26813:15;26806:33;26621:225;:::o;26852:366::-;26994:3;27015:67;27079:2;27074:3;27015:67;:::i;:::-;27008:74;;27091:93;27180:3;27091:93;:::i;:::-;27209:2;27204:3;27200:12;27193:19;;26852:366;;;:::o;27224:419::-;27390:4;27428:2;27417:9;27413:18;27405:26;;27477:9;27471:4;27467:20;27463:1;27452:9;27448:17;27441:47;27505:131;27631:4;27505:131;:::i;:::-;27497:139;;27224:419;;;:::o;27649:191::-;27689:4;27709:20;27727:1;27709:20;:::i;:::-;27704:25;;27743:20;27761:1;27743:20;:::i;:::-;27738:25;;27782:1;27779;27776:8;27773:34;;;27787:18;;:::i;:::-;27773:34;27832:1;27829;27825:9;27817:17;;27649:191;;;;:::o;27846:225::-;27986:34;27982:1;27974:6;27970:14;27963:58;28055:8;28050:2;28042:6;28038:15;28031:33;27846:225;:::o;28077:366::-;28219:3;28240:67;28304:2;28299:3;28240:67;:::i;:::-;28233:74;;28316:93;28405:3;28316:93;:::i;:::-;28434:2;28429:3;28425:12;28418:19;;28077:366;;;:::o;28449:419::-;28615:4;28653:2;28642:9;28638:18;28630:26;;28702:9;28696:4;28692:20;28688:1;28677:9;28673:17;28666:47;28730:131;28856:4;28730:131;:::i;:::-;28722:139;;28449:419;;;:::o;28874:180::-;28922:77;28919:1;28912:88;29019:4;29016:1;29009:15;29043:4;29040:1;29033:15;29060:233;29099:3;29122:24;29140:5;29122:24;:::i;:::-;29113:33;;29168:66;29161:5;29158:77;29155:103;;29238:18;;:::i;:::-;29155:103;29285:1;29278:5;29274:13;29267:20;;29060:233;;;:::o;29299:118::-;29386:24;29404:5;29386:24;:::i;:::-;29381:3;29374:37;29299:118;;:::o;29423:98::-;29474:6;29508:5;29502:12;29492:22;;29423:98;;;:::o;29527:168::-;29610:11;29644:6;29639:3;29632:19;29684:4;29679:3;29675:14;29660:29;;29527:168;;;;:::o;29701:307::-;29769:1;29779:113;29793:6;29790:1;29787:13;29779:113;;;29878:1;29873:3;29869:11;29863:18;29859:1;29854:3;29850:11;29843:39;29815:2;29812:1;29808:10;29803:15;;29779:113;;;29910:6;29907:1;29904:13;29901:101;;;29990:1;29981:6;29976:3;29972:16;29965:27;29901:101;29750:258;29701:307;;;:::o;30014:360::-;30100:3;30128:38;30160:5;30128:38;:::i;:::-;30182:70;30245:6;30240:3;30182:70;:::i;:::-;30175:77;;30261:52;30306:6;30301:3;30294:4;30287:5;30283:16;30261:52;:::i;:::-;30338:29;30360:6;30338:29;:::i;:::-;30333:3;30329:39;30322:46;;30104:270;30014:360;;;;:::o;30380:640::-;30575:4;30613:3;30602:9;30598:19;30590:27;;30627:71;30695:1;30684:9;30680:17;30671:6;30627:71;:::i;:::-;30708:72;30776:2;30765:9;30761:18;30752:6;30708:72;:::i;:::-;30790;30858:2;30847:9;30843:18;30834:6;30790:72;:::i;:::-;30909:9;30903:4;30899:20;30894:2;30883:9;30879:18;30872:48;30937:76;31008:4;30999:6;30937:76;:::i;:::-;30929:84;;30380:640;;;;;;;:::o"
            },
            "methodIdentifiers": {
              "acceptSwap(uint64)": "7500f85c",
              "cancelSwap(uint64)": "0cce448d",
              "fee()": "ddca3f43",
              "initiateSwap(uint64,address[],uint256[])": "7e3fe497",
              "onERC721Received(address,address,uint256,bytes)": "150b7a02",
              "owner()": "8da5cb5b",
              "proposeSwap(address,address[],uint256[])": "55a36d56",
              "renounceOwnership()": "715018a6",
              "setAppFee(uint128)": "b7719a9c",
              "transferOwnership(address)": "f2fde38b",
              "withdrawEther(address)": "af933b57"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.14+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint128\",\"name\":\"initalAppFee\",\"type\":\"uint128\"},{\"internalType\":\"address\",\"name\":\"contractOwnerAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"fee\",\"type\":\"uint128\"}],\"name\":\"AppFeeChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"canceledBy\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint64\",\"name\":\"swapId\",\"type\":\"uint64\"}],\"name\":\"SwapCanceled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint64\",\"name\":\"swapId\",\"type\":\"uint64\"}],\"name\":\"SwapExecuted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint64\",\"name\":\"swapId\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"etherValue\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"nftAddresses\",\"type\":\"address[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"nftIds\",\"type\":\"uint256[]\"}],\"name\":\"SwapInitiated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint64\",\"name\":\"swapId\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"etherValue\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"nftAddresses\",\"type\":\"address[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"nftIds\",\"type\":\"uint256[]\"}],\"name\":\"SwapProposed\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"swapId\",\"type\":\"uint64\"}],\"name\":\"acceptSwap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"swapId\",\"type\":\"uint64\"}],\"name\":\"cancelSwap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fee\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"swapId\",\"type\":\"uint64\"},{\"internalType\":\"address[]\",\"name\":\"nftAddresses\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"nftIds\",\"type\":\"uint256[]\"}],\"name\":\"initiateSwap\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"secondUser\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"nftAddresses\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"nftIds\",\"type\":\"uint256[]\"}],\"name\":\"proposeSwap\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint128\",\"name\":\"newFee\",\"type\":\"uint128\"}],\"name\":\"setAppFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"withdrawEther\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"acceptSwap(uint64)\":{\"details\":\"Swap initiator accepts the swap (NFTs proposed by the second user).      Executeds the swap - transfers NFTs from TamagoSwap to the participating users.      Callable only by swap initiator.\",\"params\":{\"swapId\":\"ID of the swap that the initator wants to execute\"}},\"cancelSwap(uint64)\":{\"details\":\"Returns NFTs from TamagoSwap to swap initator.      Callable only if second user hasn't yet added NFTs.\",\"params\":{\"swapId\":\"ID of the swap that the swap participants want to cancel\"}},\"initiateSwap(uint64,address[],uint256[])\":{\"details\":\"Second user accepts the swap (with proposed NFTs) from swap initiator and      deposits his NFTs into the TamagoSwap contract.      Callable only by second user that is invited by swap initiator.\",\"params\":{\"nftAddresses\":\"array of NFT addressed that want to be traded\",\"nftIds\":\"array of IDs belonging to NFTs that want to be traded\",\"swapId\":\"ID of the swap that the second user is invited to participate in\"}},\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"See {IERC721Receiver-onERC721Received}. Always returns `IERC721Receiver.onERC721Received.selector`.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"proposeSwap(address,address[],uint256[])\":{\"details\":\"First user proposes a swap to the second user with the NFTs that he deposits and wants to trade.      Proposed NFTs are transfered to the TamagoSwap contract and      kept there until the swap is accepted or canceled/rejected.\",\"params\":{\"nftAddresses\":\"array of NFT addressed that want to be traded\",\"nftIds\":\"array of IDs belonging to NFTs that want to be traded\",\"secondUser\":\"address of the user that the first user wants to trade NFTs with\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/TamagoSwap.sol\":\"TamagoSwap\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x0d4de01fe5360c38b4ad2b0822a12722958428f5138a7ff47c1720eb6fa52bba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://77724cecdfba8814632ab58737c2b0f2d4ad2d532bc614aee559b5593c1152f0\",\"dweb:/ipfs/QmUcE6gXyv7CQh4sUdcDABYKGTovTe1zLMZSEq95nkc3ph\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol\":{\"keccak256\":\"0x0108bf6a6ebd5f96678bed33a35947537263f96766131ee91461fb6485805028\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ae2d274bf3d56a6d49a9bbd0a4871c54997a82551eb3eb1c0c39dc98698ff8bf\",\"dweb:/ipfs/QmTT7ty5DPGAmRnx94Xu3TUDYGSPDVLN2bppJAjjedrg1e\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"contracts/TamagoSwap.sol\":{\"keccak256\":\"0x1eb31746046251ecff3669e9575a554b546b693a9a1c88bf01bea36621c1b065\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://97b9cc5177b376022c9a57c3d5b0023eca2f2ae27515c72480d62ba0738efc8b\",\"dweb:/ipfs/QmX9C6BR84rtGo5Xq7VMaBQwijjzWjkFNbw2y22HPHNtm1\"]}},\"version\":1}"
        }
      }
    },
    "sources": {
      "@openzeppelin/contracts/access/Ownable.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
          "exportedSymbols": {
            "Context": [
              365
            ],
            "Ownable": [
              104
            ]
          },
          "id": 105,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "87:23:0"
            },
            {
              "absolutePath": "@openzeppelin/contracts/utils/Context.sol",
              "file": "../utils/Context.sol",
              "id": 2,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 105,
              "sourceUnit": 366,
              "src": "112:30:0",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": true,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 4,
                    "name": "Context",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 365,
                    "src": "668:7:0"
                  },
                  "id": 5,
                  "nodeType": "InheritanceSpecifier",
                  "src": "668:7:0"
                }
              ],
              "canonicalName": "Ownable",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 3,
                "nodeType": "StructuredDocumentation",
                "src": "144:494:0",
                "text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
              },
              "fullyImplemented": true,
              "id": 104,
              "linearizedBaseContracts": [
                104,
                365
              ],
              "name": "Ownable",
              "nameLocation": "657:7:0",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": false,
                  "id": 7,
                  "mutability": "mutable",
                  "name": "_owner",
                  "nameLocation": "698:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 104,
                  "src": "682:22:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "682:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "anonymous": false,
                  "eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
                  "id": 13,
                  "name": "OwnershipTransferred",
                  "nameLocation": "717:20:0",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 12,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 9,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "previousOwner",
                        "nameLocation": "754:13:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 13,
                        "src": "738:29:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 8,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "738:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 11,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "newOwner",
                        "nameLocation": "785:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 13,
                        "src": "769:24:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 10,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "769:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "737:57:0"
                  },
                  "src": "711:84:0"
                },
                {
                  "body": {
                    "id": 22,
                    "nodeType": "Block",
                    "src": "911:49:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 18,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 355,
                                "src": "940:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 19,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "940:12:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 17,
                            "name": "_transferOwnership",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 103,
                            "src": "921:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 20,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "921:32:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 21,
                        "nodeType": "ExpressionStatement",
                        "src": "921:32:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 14,
                    "nodeType": "StructuredDocumentation",
                    "src": "801:91:0",
                    "text": " @dev Initializes the contract setting the deployer as the initial owner."
                  },
                  "id": 23,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 15,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "908:2:0"
                  },
                  "returnParameters": {
                    "id": 16,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "911:0:0"
                  },
                  "scope": 104,
                  "src": "897:63:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 31,
                    "nodeType": "Block",
                    "src": "1091:30:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 29,
                          "name": "_owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7,
                          "src": "1108:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 28,
                        "id": 30,
                        "nodeType": "Return",
                        "src": "1101:13:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 24,
                    "nodeType": "StructuredDocumentation",
                    "src": "966:65:0",
                    "text": " @dev Returns the address of the current owner."
                  },
                  "functionSelector": "8da5cb5b",
                  "id": 32,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "owner",
                  "nameLocation": "1045:5:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 25,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1050:2:0"
                  },
                  "returnParameters": {
                    "id": 28,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 27,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 32,
                        "src": "1082:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 26,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1082:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1081:9:0"
                  },
                  "scope": 104,
                  "src": "1036:85:0",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 45,
                    "nodeType": "Block",
                    "src": "1230:96:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 40,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 36,
                                  "name": "owner",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 32,
                                  "src": "1248:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                    "typeString": "function () view returns (address)"
                                  }
                                },
                                "id": 37,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1248:7:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 38,
                                  "name": "_msgSender",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 355,
                                  "src": "1259:10:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                    "typeString": "function () view returns (address)"
                                  }
                                },
                                "id": 39,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1259:12:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "1248:23:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
                              "id": 41,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1273:34:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
                                "typeString": "literal_string \"Ownable: caller is not the owner\""
                              },
                              "value": "Ownable: caller is not the owner"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
                                "typeString": "literal_string \"Ownable: caller is not the owner\""
                              }
                            ],
                            "id": 35,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "1240:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 42,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1240:68:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 43,
                        "nodeType": "ExpressionStatement",
                        "src": "1240:68:0"
                      },
                      {
                        "id": 44,
                        "nodeType": "PlaceholderStatement",
                        "src": "1318:1:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 33,
                    "nodeType": "StructuredDocumentation",
                    "src": "1127:77:0",
                    "text": " @dev Throws if called by any account other than the owner."
                  },
                  "id": 46,
                  "name": "onlyOwner",
                  "nameLocation": "1218:9:0",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 34,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1227:2:0"
                  },
                  "src": "1209:117:0",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 59,
                    "nodeType": "Block",
                    "src": "1722:47:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 55,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "1759:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 54,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1751:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 53,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1751:7:0",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 56,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1751:10:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 52,
                            "name": "_transferOwnership",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 103,
                            "src": "1732:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 57,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1732:30:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 58,
                        "nodeType": "ExpressionStatement",
                        "src": "1732:30:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 47,
                    "nodeType": "StructuredDocumentation",
                    "src": "1332:331:0",
                    "text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
                  },
                  "functionSelector": "715018a6",
                  "id": 60,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 50,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 49,
                        "name": "onlyOwner",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 46,
                        "src": "1712:9:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "1712:9:0"
                    }
                  ],
                  "name": "renounceOwnership",
                  "nameLocation": "1677:17:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 48,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1694:2:0"
                  },
                  "returnParameters": {
                    "id": 51,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1722:0:0"
                  },
                  "scope": 104,
                  "src": "1668:101:0",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 82,
                    "nodeType": "Block",
                    "src": "1988:128:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 74,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 69,
                                "name": "newOwner",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 63,
                                "src": "2006:8:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 72,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "2026:1:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 71,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "2018:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 70,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "2018:7:0",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 73,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2018:10:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "2006:22:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
                              "id": 75,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2030:40:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
                                "typeString": "literal_string \"Ownable: new owner is the zero address\""
                              },
                              "value": "Ownable: new owner is the zero address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
                                "typeString": "literal_string \"Ownable: new owner is the zero address\""
                              }
                            ],
                            "id": 68,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "1998:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 76,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1998:73:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 77,
                        "nodeType": "ExpressionStatement",
                        "src": "1998:73:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 79,
                              "name": "newOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 63,
                              "src": "2100:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 78,
                            "name": "_transferOwnership",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 103,
                            "src": "2081:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 80,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2081:28:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 81,
                        "nodeType": "ExpressionStatement",
                        "src": "2081:28:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 61,
                    "nodeType": "StructuredDocumentation",
                    "src": "1775:138:0",
                    "text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
                  },
                  "functionSelector": "f2fde38b",
                  "id": 83,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 66,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 65,
                        "name": "onlyOwner",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 46,
                        "src": "1978:9:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "1978:9:0"
                    }
                  ],
                  "name": "transferOwnership",
                  "nameLocation": "1927:17:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 64,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 63,
                        "mutability": "mutable",
                        "name": "newOwner",
                        "nameLocation": "1953:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 83,
                        "src": "1945:16:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 62,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1945:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1944:18:0"
                  },
                  "returnParameters": {
                    "id": 67,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1988:0:0"
                  },
                  "scope": 104,
                  "src": "1918:198:0",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 102,
                    "nodeType": "Block",
                    "src": "2333:124:0",
                    "statements": [
                      {
                        "assignments": [
                          90
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 90,
                            "mutability": "mutable",
                            "name": "oldOwner",
                            "nameLocation": "2351:8:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 102,
                            "src": "2343:16:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 89,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2343:7:0",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 92,
                        "initialValue": {
                          "id": 91,
                          "name": "_owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7,
                          "src": "2362:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2343:25:0"
                      },
                      {
                        "expression": {
                          "id": 95,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 93,
                            "name": "_owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7,
                            "src": "2378:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 94,
                            "name": "newOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 86,
                            "src": "2387:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "2378:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 96,
                        "nodeType": "ExpressionStatement",
                        "src": "2378:17:0"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 98,
                              "name": "oldOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 90,
                              "src": "2431:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 99,
                              "name": "newOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 86,
                              "src": "2441:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 97,
                            "name": "OwnershipTransferred",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13,
                            "src": "2410:20:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (address,address)"
                            }
                          },
                          "id": 100,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2410:40:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 101,
                        "nodeType": "EmitStatement",
                        "src": "2405:45:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 84,
                    "nodeType": "StructuredDocumentation",
                    "src": "2122:143:0",
                    "text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
                  },
                  "id": 103,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_transferOwnership",
                  "nameLocation": "2279:18:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 87,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 86,
                        "mutability": "mutable",
                        "name": "newOwner",
                        "nameLocation": "2306:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 103,
                        "src": "2298:16:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 85,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2298:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2297:18:0"
                  },
                  "returnParameters": {
                    "id": 88,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2333:0:0"
                  },
                  "scope": 104,
                  "src": "2270:187:0",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                }
              ],
              "scope": 105,
              "src": "639:1820:0",
              "usedErrors": []
            }
          ],
          "src": "87:2373:0"
        },
        "id": 0
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
          "exportedSymbols": {
            "IERC20": [
              182
            ]
          },
          "id": 183,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 106,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "106:23:1"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IERC20",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 107,
                "nodeType": "StructuredDocumentation",
                "src": "131:70:1",
                "text": " @dev Interface of the ERC20 standard as defined in the EIP."
              },
              "fullyImplemented": false,
              "id": 182,
              "linearizedBaseContracts": [
                182
              ],
              "name": "IERC20",
              "nameLocation": "212:6:1",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 108,
                    "nodeType": "StructuredDocumentation",
                    "src": "225:158:1",
                    "text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
                  },
                  "eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
                  "id": 116,
                  "name": "Transfer",
                  "nameLocation": "394:8:1",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 115,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 110,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "419:4:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 116,
                        "src": "403:20:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 109,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "403:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 112,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "441:2:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 116,
                        "src": "425:18:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 111,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "425:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 114,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "453:5:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 116,
                        "src": "445:13:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 113,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "445:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "402:57:1"
                  },
                  "src": "388:72:1"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 117,
                    "nodeType": "StructuredDocumentation",
                    "src": "466:148:1",
                    "text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
                  },
                  "eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
                  "id": 125,
                  "name": "Approval",
                  "nameLocation": "625:8:1",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 124,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 119,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "650:5:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 125,
                        "src": "634:21:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 118,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "634:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 121,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "673:7:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 125,
                        "src": "657:23:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 120,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "657:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 123,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "690:5:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 125,
                        "src": "682:13:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 122,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "682:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "633:63:1"
                  },
                  "src": "619:78:1"
                },
                {
                  "documentation": {
                    "id": 126,
                    "nodeType": "StructuredDocumentation",
                    "src": "703:66:1",
                    "text": " @dev Returns the amount of tokens in existence."
                  },
                  "functionSelector": "18160ddd",
                  "id": 131,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "totalSupply",
                  "nameLocation": "783:11:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 127,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "794:2:1"
                  },
                  "returnParameters": {
                    "id": 130,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 129,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 131,
                        "src": "820:7:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 128,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "820:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "819:9:1"
                  },
                  "scope": 182,
                  "src": "774:55:1",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 132,
                    "nodeType": "StructuredDocumentation",
                    "src": "835:72:1",
                    "text": " @dev Returns the amount of tokens owned by `account`."
                  },
                  "functionSelector": "70a08231",
                  "id": 139,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "balanceOf",
                  "nameLocation": "921:9:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 135,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 134,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "939:7:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 139,
                        "src": "931:15:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 133,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "931:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "930:17:1"
                  },
                  "returnParameters": {
                    "id": 138,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 137,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 139,
                        "src": "971:7:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 136,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "971:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "970:9:1"
                  },
                  "scope": 182,
                  "src": "912:68:1",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 140,
                    "nodeType": "StructuredDocumentation",
                    "src": "986:202:1",
                    "text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
                  },
                  "functionSelector": "a9059cbb",
                  "id": 149,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transfer",
                  "nameLocation": "1202:8:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 145,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 142,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "1219:2:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 149,
                        "src": "1211:10:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 141,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1211:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 144,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "1231:6:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 149,
                        "src": "1223:14:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 143,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1223:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1210:28:1"
                  },
                  "returnParameters": {
                    "id": 148,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 147,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 149,
                        "src": "1257:4:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 146,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "1257:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1256:6:1"
                  },
                  "scope": 182,
                  "src": "1193:70:1",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 150,
                    "nodeType": "StructuredDocumentation",
                    "src": "1269:264:1",
                    "text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
                  },
                  "functionSelector": "dd62ed3e",
                  "id": 159,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "allowance",
                  "nameLocation": "1547:9:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 155,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 152,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "1565:5:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 159,
                        "src": "1557:13:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 151,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1557:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 154,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "1580:7:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 159,
                        "src": "1572:15:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 153,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1572:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1556:32:1"
                  },
                  "returnParameters": {
                    "id": 158,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 157,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 159,
                        "src": "1612:7:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 156,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1612:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1611:9:1"
                  },
                  "scope": 182,
                  "src": "1538:83:1",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 160,
                    "nodeType": "StructuredDocumentation",
                    "src": "1627:642:1",
                    "text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
                  },
                  "functionSelector": "095ea7b3",
                  "id": 169,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "approve",
                  "nameLocation": "2283:7:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 165,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 162,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "2299:7:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 169,
                        "src": "2291:15:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 161,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2291:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 164,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "2316:6:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 169,
                        "src": "2308:14:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 163,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2308:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2290:33:1"
                  },
                  "returnParameters": {
                    "id": 168,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 167,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 169,
                        "src": "2342:4:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 166,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2342:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2341:6:1"
                  },
                  "scope": 182,
                  "src": "2274:74:1",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 170,
                    "nodeType": "StructuredDocumentation",
                    "src": "2354:287:1",
                    "text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
                  },
                  "functionSelector": "23b872dd",
                  "id": 181,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transferFrom",
                  "nameLocation": "2655:12:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 177,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 172,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "2685:4:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 181,
                        "src": "2677:12:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 171,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2677:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 174,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "2707:2:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 181,
                        "src": "2699:10:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 173,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2699:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 176,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "2727:6:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 181,
                        "src": "2719:14:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 175,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2719:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2667:72:1"
                  },
                  "returnParameters": {
                    "id": 180,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 179,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 181,
                        "src": "2758:4:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 178,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2758:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2757:6:1"
                  },
                  "scope": 182,
                  "src": "2646:118:1",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 183,
              "src": "202:2564:1",
              "usedErrors": []
            }
          ],
          "src": "106:2661:1"
        },
        "id": 1
      },
      "@openzeppelin/contracts/token/ERC721/IERC721.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
          "exportedSymbols": {
            "IERC165": [
              377
            ],
            "IERC721": [
              298
            ]
          },
          "id": 299,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 184,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "108:23:2"
            },
            {
              "absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
              "file": "../../utils/introspection/IERC165.sol",
              "id": 185,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 299,
              "sourceUnit": 378,
              "src": "133:47:2",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 187,
                    "name": "IERC165",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 377,
                    "src": "271:7:2"
                  },
                  "id": 188,
                  "nodeType": "InheritanceSpecifier",
                  "src": "271:7:2"
                }
              ],
              "canonicalName": "IERC721",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 186,
                "nodeType": "StructuredDocumentation",
                "src": "182:67:2",
                "text": " @dev Required interface of an ERC721 compliant contract."
              },
              "fullyImplemented": false,
              "id": 298,
              "linearizedBaseContracts": [
                298,
                377
              ],
              "name": "IERC721",
              "nameLocation": "260:7:2",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 189,
                    "nodeType": "StructuredDocumentation",
                    "src": "285:88:2",
                    "text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
                  },
                  "eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
                  "id": 197,
                  "name": "Transfer",
                  "nameLocation": "384:8:2",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 196,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 191,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "409:4:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 197,
                        "src": "393:20:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 190,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "393:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 193,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "431:2:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 197,
                        "src": "415:18:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 192,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "415:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 195,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nameLocation": "451:7:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 197,
                        "src": "435:23:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 194,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "435:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "392:67:2"
                  },
                  "src": "378:82:2"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 198,
                    "nodeType": "StructuredDocumentation",
                    "src": "466:94:2",
                    "text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
                  },
                  "eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
                  "id": 206,
                  "name": "Approval",
                  "nameLocation": "571:8:2",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 205,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 200,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "596:5:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 206,
                        "src": "580:21:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 199,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "580:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 202,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "approved",
                        "nameLocation": "619:8:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 206,
                        "src": "603:24:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 201,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "603:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 204,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nameLocation": "645:7:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 206,
                        "src": "629:23:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 203,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "629:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "579:74:2"
                  },
                  "src": "565:89:2"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 207,
                    "nodeType": "StructuredDocumentation",
                    "src": "660:117:2",
                    "text": " @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
                  },
                  "eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
                  "id": 215,
                  "name": "ApprovalForAll",
                  "nameLocation": "788:14:2",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 214,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 209,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "819:5:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 215,
                        "src": "803:21:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 208,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "803:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 211,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "operator",
                        "nameLocation": "842:8:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 215,
                        "src": "826:24:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 210,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "826:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 213,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "approved",
                        "nameLocation": "857:8:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 215,
                        "src": "852:13:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 212,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "852:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "802:64:2"
                  },
                  "src": "782:85:2"
                },
                {
                  "documentation": {
                    "id": 216,
                    "nodeType": "StructuredDocumentation",
                    "src": "873:76:2",
                    "text": " @dev Returns the number of tokens in ``owner``'s account."
                  },
                  "functionSelector": "70a08231",
                  "id": 223,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "balanceOf",
                  "nameLocation": "963:9:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 219,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 218,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "981:5:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 223,
                        "src": "973:13:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 217,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "973:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "972:15:2"
                  },
                  "returnParameters": {
                    "id": 222,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 221,
                        "mutability": "mutable",
                        "name": "balance",
                        "nameLocation": "1019:7:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 223,
                        "src": "1011:15:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 220,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1011:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1010:17:2"
                  },
                  "scope": 298,
                  "src": "954:74:2",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 224,
                    "nodeType": "StructuredDocumentation",
                    "src": "1034:131:2",
                    "text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
                  },
                  "functionSelector": "6352211e",
                  "id": 231,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "ownerOf",
                  "nameLocation": "1179:7:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 227,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 226,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nameLocation": "1195:7:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 231,
                        "src": "1187:15:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 225,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1187:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1186:17:2"
                  },
                  "returnParameters": {
                    "id": 230,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 229,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "1235:5:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 231,
                        "src": "1227:13:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 228,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1227:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1226:15:2"
                  },
                  "scope": 298,
                  "src": "1170:72:2",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 232,
                    "nodeType": "StructuredDocumentation",
                    "src": "1248:556:2",
                    "text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
                  },
                  "functionSelector": "b88d4fde",
                  "id": 243,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "safeTransferFrom",
                  "nameLocation": "1818:16:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 241,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 234,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "1852:4:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 243,
                        "src": "1844:12:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 233,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1844:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 236,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "1874:2:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 243,
                        "src": "1866:10:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 235,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1866:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 238,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nameLocation": "1894:7:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 243,
                        "src": "1886:15:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 237,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1886:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 240,
                        "mutability": "mutable",
                        "name": "data",
                        "nameLocation": "1926:4:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 243,
                        "src": "1911:19:2",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 239,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "1911:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1834:102:2"
                  },
                  "returnParameters": {
                    "id": 242,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1945:0:2"
                  },
                  "scope": 298,
                  "src": "1809:137:2",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 244,
                    "nodeType": "StructuredDocumentation",
                    "src": "1952:690:2",
                    "text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
                  },
                  "functionSelector": "42842e0e",
                  "id": 253,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "safeTransferFrom",
                  "nameLocation": "2656:16:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 251,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 246,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "2690:4:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 253,
                        "src": "2682:12:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 245,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2682:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 248,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "2712:2:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 253,
                        "src": "2704:10:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 247,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2704:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 250,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nameLocation": "2732:7:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 253,
                        "src": "2724:15:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 249,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2724:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2672:73:2"
                  },
                  "returnParameters": {
                    "id": 252,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2754:0:2"
                  },
                  "scope": 298,
                  "src": "2647:108:2",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 254,
                    "nodeType": "StructuredDocumentation",
                    "src": "2761:504:2",
                    "text": " @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
                  },
                  "functionSelector": "23b872dd",
                  "id": 263,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transferFrom",
                  "nameLocation": "3279:12:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 261,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 256,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "3309:4:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 263,
                        "src": "3301:12:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 255,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3301:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 258,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "3331:2:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 263,
                        "src": "3323:10:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 257,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3323:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 260,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nameLocation": "3351:7:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 263,
                        "src": "3343:15:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 259,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3343:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3291:73:2"
                  },
                  "returnParameters": {
                    "id": 262,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3373:0:2"
                  },
                  "scope": 298,
                  "src": "3270:104:2",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 264,
                    "nodeType": "StructuredDocumentation",
                    "src": "3380:452:2",
                    "text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
                  },
                  "functionSelector": "095ea7b3",
                  "id": 271,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "approve",
                  "nameLocation": "3846:7:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 269,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 266,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "3862:2:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 271,
                        "src": "3854:10:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 265,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3854:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 268,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nameLocation": "3874:7:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 271,
                        "src": "3866:15:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 267,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3866:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3853:29:2"
                  },
                  "returnParameters": {
                    "id": 270,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3891:0:2"
                  },
                  "scope": 298,
                  "src": "3837:55:2",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 272,
                    "nodeType": "StructuredDocumentation",
                    "src": "3898:309:2",
                    "text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the caller.\n Emits an {ApprovalForAll} event."
                  },
                  "functionSelector": "a22cb465",
                  "id": 279,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "setApprovalForAll",
                  "nameLocation": "4221:17:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 277,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 274,
                        "mutability": "mutable",
                        "name": "operator",
                        "nameLocation": "4247:8:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 279,
                        "src": "4239:16:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 273,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4239:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 276,
                        "mutability": "mutable",
                        "name": "_approved",
                        "nameLocation": "4262:9:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 279,
                        "src": "4257:14:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 275,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "4257:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4238:34:2"
                  },
                  "returnParameters": {
                    "id": 278,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4281:0:2"
                  },
                  "scope": 298,
                  "src": "4212:70:2",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 280,
                    "nodeType": "StructuredDocumentation",
                    "src": "4288:139:2",
                    "text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
                  },
                  "functionSelector": "081812fc",
                  "id": 287,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getApproved",
                  "nameLocation": "4441:11:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 283,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 282,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nameLocation": "4461:7:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 287,
                        "src": "4453:15:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 281,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4453:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4452:17:2"
                  },
                  "returnParameters": {
                    "id": 286,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 285,
                        "mutability": "mutable",
                        "name": "operator",
                        "nameLocation": "4501:8:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 287,
                        "src": "4493:16:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 284,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4493:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4492:18:2"
                  },
                  "scope": 298,
                  "src": "4432:79:2",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 288,
                    "nodeType": "StructuredDocumentation",
                    "src": "4517:138:2",
                    "text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"
                  },
                  "functionSelector": "e985e9c5",
                  "id": 297,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "isApprovedForAll",
                  "nameLocation": "4669:16:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 293,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 290,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "4694:5:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 297,
                        "src": "4686:13:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 289,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4686:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 292,
                        "mutability": "mutable",
                        "name": "operator",
                        "nameLocation": "4709:8:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 297,
                        "src": "4701:16:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 291,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4701:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4685:33:2"
                  },
                  "returnParameters": {
                    "id": 296,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 295,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 297,
                        "src": "4742:4:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 294,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "4742:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4741:6:2"
                  },
                  "scope": 298,
                  "src": "4660:88:2",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 299,
              "src": "250:4500:2",
              "usedErrors": []
            }
          ],
          "src": "108:4643:2"
        },
        "id": 2
      },
      "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
          "exportedSymbols": {
            "IERC721Receiver": [
              316
            ]
          },
          "id": 317,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 300,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "116:23:3"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IERC721Receiver",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 301,
                "nodeType": "StructuredDocumentation",
                "src": "141:152:3",
                "text": " @title ERC721 token receiver interface\n @dev Interface for any contract that wants to support safeTransfers\n from ERC721 asset contracts."
              },
              "fullyImplemented": false,
              "id": 316,
              "linearizedBaseContracts": [
                316
              ],
              "name": "IERC721Receiver",
              "nameLocation": "304:15:3",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 302,
                    "nodeType": "StructuredDocumentation",
                    "src": "326:493:3",
                    "text": " @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n by `operator` from `from`, this function is called.\n It must return its Solidity selector to confirm the token transfer.\n If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\n The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
                  },
                  "functionSelector": "150b7a02",
                  "id": 315,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "onERC721Received",
                  "nameLocation": "833:16:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 311,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 304,
                        "mutability": "mutable",
                        "name": "operator",
                        "nameLocation": "867:8:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 315,
                        "src": "859:16:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 303,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "859:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 306,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "893:4:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 315,
                        "src": "885:12:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 305,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "885:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 308,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nameLocation": "915:7:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 315,
                        "src": "907:15:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 307,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "907:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 310,
                        "mutability": "mutable",
                        "name": "data",
                        "nameLocation": "947:4:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 315,
                        "src": "932:19:3",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 309,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "932:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "849:108:3"
                  },
                  "returnParameters": {
                    "id": 314,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 313,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 315,
                        "src": "976:6:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        "typeName": {
                          "id": 312,
                          "name": "bytes4",
                          "nodeType": "ElementaryTypeName",
                          "src": "976:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "975:8:3"
                  },
                  "scope": 316,
                  "src": "824:160:3",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 317,
              "src": "294:692:3",
              "usedErrors": []
            }
          ],
          "src": "116:871:3"
        },
        "id": 3
      },
      "@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol",
          "exportedSymbols": {
            "ERC721Holder": [
              343
            ],
            "IERC721Receiver": [
              316
            ]
          },
          "id": 344,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 318,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "104:23:4"
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
              "file": "../IERC721Receiver.sol",
              "id": 319,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 344,
              "sourceUnit": 317,
              "src": "129:32:4",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 321,
                    "name": "IERC721Receiver",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 316,
                    "src": "424:15:4"
                  },
                  "id": 322,
                  "nodeType": "InheritanceSpecifier",
                  "src": "424:15:4"
                }
              ],
              "canonicalName": "ERC721Holder",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 320,
                "nodeType": "StructuredDocumentation",
                "src": "163:235:4",
                "text": " @dev Implementation of the {IERC721Receiver} interface.\n Accepts all token transfers.\n Make sure the contract is able to use its token with {IERC721-safeTransferFrom}, {IERC721-approve} or {IERC721-setApprovalForAll}."
              },
              "fullyImplemented": true,
              "id": 343,
              "linearizedBaseContracts": [
                343,
                316
              ],
              "name": "ERC721Holder",
              "nameLocation": "408:12:4",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "baseFunctions": [
                    315
                  ],
                  "body": {
                    "id": 341,
                    "nodeType": "Block",
                    "src": "734:54:4",
                    "statements": [
                      {
                        "expression": {
                          "expression": {
                            "expression": {
                              "id": 337,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "751:4:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC721Holder_$343",
                                "typeString": "contract ERC721Holder"
                              }
                            },
                            "id": 338,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "onERC721Received",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 342,
                            "src": "751:21:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
                              "typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
                            }
                          },
                          "id": 339,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "selector",
                          "nodeType": "MemberAccess",
                          "src": "751:30:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "functionReturnParameters": 336,
                        "id": 340,
                        "nodeType": "Return",
                        "src": "744:37:4"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 323,
                    "nodeType": "StructuredDocumentation",
                    "src": "446:137:4",
                    "text": " @dev See {IERC721Receiver-onERC721Received}.\n Always returns `IERC721Receiver.onERC721Received.selector`."
                  },
                  "functionSelector": "150b7a02",
                  "id": 342,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "onERC721Received",
                  "nameLocation": "597:16:4",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 333,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "708:8:4"
                  },
                  "parameters": {
                    "id": 332,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 325,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 342,
                        "src": "623:7:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 324,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "623:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 327,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 342,
                        "src": "640:7:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 326,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "640:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 329,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 342,
                        "src": "657:7:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 328,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "657:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 331,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 342,
                        "src": "674:12:4",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 330,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "674:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "613:79:4"
                  },
                  "returnParameters": {
                    "id": 336,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 335,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 342,
                        "src": "726:6:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        "typeName": {
                          "id": 334,
                          "name": "bytes4",
                          "nodeType": "ElementaryTypeName",
                          "src": "726:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "725:8:4"
                  },
                  "scope": 343,
                  "src": "588:200:4",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                }
              ],
              "scope": 344,
              "src": "399:391:4",
              "usedErrors": []
            }
          ],
          "src": "104:687:4"
        },
        "id": 4
      },
      "@openzeppelin/contracts/utils/Context.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/utils/Context.sol",
          "exportedSymbols": {
            "Context": [
              365
            ]
          },
          "id": 366,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 345,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "86:23:5"
            },
            {
              "abstract": true,
              "baseContracts": [],
              "canonicalName": "Context",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 346,
                "nodeType": "StructuredDocumentation",
                "src": "111:496:5",
                "text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
              },
              "fullyImplemented": true,
              "id": 365,
              "linearizedBaseContracts": [
                365
              ],
              "name": "Context",
              "nameLocation": "626:7:5",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "body": {
                    "id": 354,
                    "nodeType": "Block",
                    "src": "702:34:5",
                    "statements": [
                      {
                        "expression": {
                          "expression": {
                            "id": 351,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "719:3:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 352,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "719:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 350,
                        "id": 353,
                        "nodeType": "Return",
                        "src": "712:17:5"
                      }
                    ]
                  },
                  "id": 355,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_msgSender",
                  "nameLocation": "649:10:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 347,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "659:2:5"
                  },
                  "returnParameters": {
                    "id": 350,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 349,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 355,
                        "src": "693:7:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 348,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "693:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "692:9:5"
                  },
                  "scope": 365,
                  "src": "640:96:5",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 363,
                    "nodeType": "Block",
                    "src": "809:32:5",
                    "statements": [
                      {
                        "expression": {
                          "expression": {
                            "id": 360,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "826:3:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 361,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "data",
                          "nodeType": "MemberAccess",
                          "src": "826:8:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_calldata_ptr",
                            "typeString": "bytes calldata"
                          }
                        },
                        "functionReturnParameters": 359,
                        "id": 362,
                        "nodeType": "Return",
                        "src": "819:15:5"
                      }
                    ]
                  },
                  "id": 364,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_msgData",
                  "nameLocation": "751:8:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 356,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "759:2:5"
                  },
                  "returnParameters": {
                    "id": 359,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 358,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 364,
                        "src": "793:14:5",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 357,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "793:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "792:16:5"
                  },
                  "scope": 365,
                  "src": "742:99:5",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                }
              ],
              "scope": 366,
              "src": "608:235:5",
              "usedErrors": []
            }
          ],
          "src": "86:758:5"
        },
        "id": 5
      },
      "@openzeppelin/contracts/utils/introspection/IERC165.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
          "exportedSymbols": {
            "IERC165": [
              377
            ]
          },
          "id": 378,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 367,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "100:23:6"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IERC165",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 368,
                "nodeType": "StructuredDocumentation",
                "src": "125:279:6",
                "text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
              },
              "fullyImplemented": false,
              "id": 377,
              "linearizedBaseContracts": [
                377
              ],
              "name": "IERC165",
              "nameLocation": "415:7:6",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 369,
                    "nodeType": "StructuredDocumentation",
                    "src": "429:340:6",
                    "text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
                  },
                  "functionSelector": "01ffc9a7",
                  "id": 376,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "supportsInterface",
                  "nameLocation": "783:17:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 372,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 371,
                        "mutability": "mutable",
                        "name": "interfaceId",
                        "nameLocation": "808:11:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 376,
                        "src": "801:18:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        "typeName": {
                          "id": 370,
                          "name": "bytes4",
                          "nodeType": "ElementaryTypeName",
                          "src": "801:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "800:20:6"
                  },
                  "returnParameters": {
                    "id": 375,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 374,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 376,
                        "src": "844:4:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 373,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "844:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "843:6:6"
                  },
                  "scope": 377,
                  "src": "774:76:6",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 378,
              "src": "405:447:6",
              "usedErrors": []
            }
          ],
          "src": "100:753:6"
        },
        "id": 6
      },
      "contracts/TamagoSwap.sol": {
        "ast": {
          "absolutePath": "contracts/TamagoSwap.sol",
          "exportedSymbols": {
            "Context": [
              365
            ],
            "ERC721Holder": [
              343
            ],
            "IERC165": [
              377
            ],
            "IERC20": [
              182
            ],
            "IERC721": [
              298
            ],
            "IERC721Receiver": [
              316
            ],
            "Ownable": [
              104
            ],
            "TamagoSwap": [
              1239
            ]
          },
          "id": 1240,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 379,
              "literals": [
                "solidity",
                "0.8",
                ".14"
              ],
              "nodeType": "PragmaDirective",
              "src": "33:23:7"
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol",
              "file": "@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol",
              "id": 380,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1240,
              "sourceUnit": 344,
              "src": "81:69:7",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
              "file": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
              "id": 381,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1240,
              "sourceUnit": 299,
              "src": "151:58:7",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
              "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
              "id": 382,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1240,
              "sourceUnit": 183,
              "src": "210:56:7",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
              "file": "@openzeppelin/contracts/access/Ownable.sol",
              "id": 383,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1240,
              "sourceUnit": 105,
              "src": "267:52:7",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 384,
                    "name": "Ownable",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 104,
                    "src": "344:7:7"
                  },
                  "id": 385,
                  "nodeType": "InheritanceSpecifier",
                  "src": "344:7:7"
                },
                {
                  "baseName": {
                    "id": 386,
                    "name": "ERC721Holder",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 343,
                    "src": "353:12:7"
                  },
                  "id": 387,
                  "nodeType": "InheritanceSpecifier",
                  "src": "353:12:7"
                }
              ],
              "canonicalName": "TamagoSwap",
              "contractDependencies": [],
              "contractKind": "contract",
              "fullyImplemented": true,
              "id": 1239,
              "linearizedBaseContracts": [
                1239,
                343,
                316,
                104,
                365
              ],
              "name": "TamagoSwap",
              "nameLocation": "330:10:7",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": false,
                  "id": 389,
                  "mutability": "mutable",
                  "name": "_swapsCounter",
                  "nameLocation": "385:13:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1239,
                  "src": "370:28:7",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 388,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "370:6:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "constant": false,
                  "id": 391,
                  "mutability": "mutable",
                  "name": "_etherLocked",
                  "nameLocation": "417:12:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1239,
                  "src": "401:28:7",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 390,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "401:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "constant": false,
                  "functionSelector": "ddca3f43",
                  "id": 393,
                  "mutability": "mutable",
                  "name": "fee",
                  "nameLocation": "447:3:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1239,
                  "src": "432:18:7",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 392,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "432:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "id": 398,
                  "mutability": "mutable",
                  "name": "_swaps",
                  "nameLocation": "487:6:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1239,
                  "src": "454:39:7",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_uint64_$_t_struct$_Swap_$419_storage_$",
                    "typeString": "mapping(uint64 => struct TamagoSwap.Swap)"
                  },
                  "typeName": {
                    "id": 397,
                    "keyType": {
                      "id": 394,
                      "name": "uint64",
                      "nodeType": "ElementaryTypeName",
                      "src": "463:6:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "454:24:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_uint64_$_t_struct$_Swap_$419_storage_$",
                      "typeString": "mapping(uint64 => struct TamagoSwap.Swap)"
                    },
                    "valueType": {
                      "id": 396,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 395,
                        "name": "Swap",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 419,
                        "src": "473:4:7"
                      },
                      "referencedDeclaration": 419,
                      "src": "473:4:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Swap_$419_storage_ptr",
                        "typeString": "struct TamagoSwap.Swap"
                      }
                    }
                  },
                  "visibility": "private"
                },
                {
                  "canonicalName": "TamagoSwap.Swap",
                  "id": 419,
                  "members": [
                    {
                      "constant": false,
                      "id": 400,
                      "mutability": "mutable",
                      "name": "initiator",
                      "nameLocation": "529:9:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 419,
                      "src": "513:25:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      },
                      "typeName": {
                        "id": 399,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "513:15:7",
                        "stateMutability": "payable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 403,
                      "mutability": "mutable",
                      "name": "initiatorNftAddresses",
                      "nameLocation": "552:21:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 419,
                      "src": "542:31:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                        "typeString": "address[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 401,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "542:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 402,
                        "nodeType": "ArrayTypeName",
                        "src": "542:9:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 406,
                      "mutability": "mutable",
                      "name": "initiatorNftIds",
                      "nameLocation": "587:15:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 419,
                      "src": "577:25:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                        "typeString": "uint256[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 404,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "577:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 405,
                        "nodeType": "ArrayTypeName",
                        "src": "577:9:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 408,
                      "mutability": "mutable",
                      "name": "secondUser",
                      "nameLocation": "622:10:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 419,
                      "src": "606:26:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      },
                      "typeName": {
                        "id": 407,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "606:15:7",
                        "stateMutability": "payable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 411,
                      "mutability": "mutable",
                      "name": "secondUserNftAddresses",
                      "nameLocation": "646:22:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 419,
                      "src": "636:32:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                        "typeString": "address[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 409,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "636:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 410,
                        "nodeType": "ArrayTypeName",
                        "src": "636:9:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 414,
                      "mutability": "mutable",
                      "name": "secondUserNftIds",
                      "nameLocation": "682:16:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 419,
                      "src": "672:26:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                        "typeString": "uint256[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 412,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "672:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 413,
                        "nodeType": "ArrayTypeName",
                        "src": "672:9:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 416,
                      "mutability": "mutable",
                      "name": "initiatorEtherValue",
                      "nameLocation": "710:19:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 419,
                      "src": "702:27:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      },
                      "typeName": {
                        "id": 415,
                        "name": "uint128",
                        "nodeType": "ElementaryTypeName",
                        "src": "702:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 418,
                      "mutability": "mutable",
                      "name": "secondUserEtherValue",
                      "nameLocation": "741:20:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 419,
                      "src": "733:28:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      },
                      "typeName": {
                        "id": 417,
                        "name": "uint128",
                        "nodeType": "ElementaryTypeName",
                        "src": "733:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "name": "Swap",
                  "nameLocation": "504:4:7",
                  "nodeType": "StructDefinition",
                  "scope": 1239,
                  "src": "497:268:7",
                  "visibility": "public"
                },
                {
                  "anonymous": false,
                  "eventSelector": "8d1ef4e0ccd0f016857c236780af12f7aa46cb23459b4962f46e649e6a9c24f2",
                  "id": 427,
                  "name": "SwapExecuted",
                  "nameLocation": "774:12:7",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 426,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 421,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "803:4:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 427,
                        "src": "787:20:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 420,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "787:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 423,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "825:2:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 427,
                        "src": "809:18:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 422,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "809:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 425,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "swapId",
                        "nameLocation": "844:6:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 427,
                        "src": "829:21:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        "typeName": {
                          "id": 424,
                          "name": "uint64",
                          "nodeType": "ElementaryTypeName",
                          "src": "829:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "786:65:7"
                  },
                  "src": "768:84:7"
                },
                {
                  "anonymous": false,
                  "eventSelector": "54b9c72d790ad613d26b317d2d24e28dd1608f07ff121cb2d42ace3cbcd4eb0f",
                  "id": 433,
                  "name": "SwapCanceled",
                  "nameLocation": "860:12:7",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 432,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 429,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "canceledBy",
                        "nameLocation": "889:10:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 433,
                        "src": "873:26:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 428,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "873:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 431,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "swapId",
                        "nameLocation": "916:6:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 433,
                        "src": "901:21:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        "typeName": {
                          "id": 430,
                          "name": "uint64",
                          "nodeType": "ElementaryTypeName",
                          "src": "901:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "872:51:7"
                  },
                  "src": "854:70:7"
                },
                {
                  "anonymous": false,
                  "eventSelector": "47ab916bf7e1067c857bf17c72c33c4db59e95f2730e7283799f8a0b016aee07",
                  "id": 449,
                  "name": "SwapProposed",
                  "nameLocation": "932:12:7",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 448,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 435,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "964:4:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 449,
                        "src": "948:20:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 434,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "948:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 437,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "988:2:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 449,
                        "src": "972:18:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 436,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "972:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 439,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "swapId",
                        "nameLocation": "1009:6:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 449,
                        "src": "994:21:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        "typeName": {
                          "id": 438,
                          "name": "uint64",
                          "nodeType": "ElementaryTypeName",
                          "src": "994:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 441,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "etherValue",
                        "nameLocation": "1027:10:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 449,
                        "src": "1019:18:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        "typeName": {
                          "id": 440,
                          "name": "uint128",
                          "nodeType": "ElementaryTypeName",
                          "src": "1019:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 444,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "nftAddresses",
                        "nameLocation": "1051:12:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 449,
                        "src": "1041:22:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 442,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1041:7:7",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 443,
                          "nodeType": "ArrayTypeName",
                          "src": "1041:9:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                            "typeString": "address[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 447,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "nftIds",
                        "nameLocation": "1077:6:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 449,
                        "src": "1067:16:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 445,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "1067:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 446,
                          "nodeType": "ArrayTypeName",
                          "src": "1067:9:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                            "typeString": "uint256[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "944:142:7"
                  },
                  "src": "926:161:7"
                },
                {
                  "anonymous": false,
                  "eventSelector": "4e597ee0a0e4f52a7e43929928b9d21bd33282d3d7e7b2896cf4c0cd64c4029d",
                  "id": 465,
                  "name": "SwapInitiated",
                  "nameLocation": "1095:13:7",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 464,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 451,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "1128:4:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 465,
                        "src": "1112:20:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 450,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1112:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 453,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "1152:2:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 465,
                        "src": "1136:18:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 452,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1136:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 455,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "swapId",
                        "nameLocation": "1173:6:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 465,
                        "src": "1158:21:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        "typeName": {
                          "id": 454,
                          "name": "uint64",
                          "nodeType": "ElementaryTypeName",
                          "src": "1158:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 457,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "etherValue",
                        "nameLocation": "1191:10:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 465,
                        "src": "1183:18:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        "typeName": {
                          "id": 456,
                          "name": "uint128",
                          "nodeType": "ElementaryTypeName",
                          "src": "1183:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 460,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "nftAddresses",
                        "nameLocation": "1215:12:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 465,
                        "src": "1205:22:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 458,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1205:7:7",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 459,
                          "nodeType": "ArrayTypeName",
                          "src": "1205:9:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                            "typeString": "address[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 463,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "nftIds",
                        "nameLocation": "1241:6:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 465,
                        "src": "1231:16:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 461,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "1231:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 462,
                          "nodeType": "ArrayTypeName",
                          "src": "1231:9:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                            "typeString": "uint256[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1108:142:7"
                  },
                  "src": "1089:162:7"
                },
                {
                  "anonymous": false,
                  "eventSelector": "220ace5bd7df3a0637bc16073257c1c74f8a207436c0c1a8cf098ff268d4078a",
                  "id": 469,
                  "name": "AppFeeChanged",
                  "nameLocation": "1259:13:7",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 468,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 467,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "fee",
                        "nameLocation": "1284:3:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 469,
                        "src": "1276:11:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        "typeName": {
                          "id": 466,
                          "name": "uint128",
                          "nodeType": "ElementaryTypeName",
                          "src": "1276:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1272:18:7"
                  },
                  "src": "1253:38:7"
                },
                {
                  "body": {
                    "id": 491,
                    "nodeType": "Block",
                    "src": "1356:170:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 486,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "arguments": [
                                  {
                                    "id": 480,
                                    "name": "_tokenId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 473,
                                    "src": "1447:8:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 477,
                                        "name": "_tokenContract",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 471,
                                        "src": "1419:14:7",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "id": 476,
                                      "name": "IERC721",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 298,
                                      "src": "1411:7:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_IERC721_$298_$",
                                        "typeString": "type(contract IERC721)"
                                      }
                                    },
                                    "id": 478,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "1411:23:7",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC721_$298",
                                      "typeString": "contract IERC721"
                                    }
                                  },
                                  "id": 479,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "getApproved",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 287,
                                  "src": "1411:35:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                                    "typeString": "function (uint256) view external returns (address)"
                                  }
                                },
                                "id": 481,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1411:45:7",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "id": 484,
                                    "name": "this",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -28,
                                    "src": "1468:4:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_TamagoSwap_$1239",
                                      "typeString": "contract TamagoSwap"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_TamagoSwap_$1239",
                                      "typeString": "contract TamagoSwap"
                                    }
                                  ],
                                  "id": 483,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "1460:7:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 482,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "1460:7:7",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 485,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1460:13:7",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "1411:62:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "21617070726f766564",
                              "id": 487,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1487:11:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_6f6bac7f5dd75efb272c5b21704dc40d091497f9cb075b4b46542d96164a7bf9",
                                "typeString": "literal_string \"!approved\""
                              },
                              "value": "!approved"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_6f6bac7f5dd75efb272c5b21704dc40d091497f9cb075b4b46542d96164a7bf9",
                                "typeString": "literal_string \"!approved\""
                              }
                            ],
                            "id": 475,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "1390:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 488,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1390:118:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 489,
                        "nodeType": "ExpressionStatement",
                        "src": "1390:118:7"
                      },
                      {
                        "id": 490,
                        "nodeType": "PlaceholderStatement",
                        "src": "1518:1:7"
                      }
                    ]
                  },
                  "id": 492,
                  "name": "isApproved",
                  "nameLocation": "1303:10:7",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 474,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 471,
                        "mutability": "mutable",
                        "name": "_tokenContract",
                        "nameLocation": "1322:14:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 492,
                        "src": "1314:22:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 470,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1314:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 473,
                        "mutability": "mutable",
                        "name": "_tokenId",
                        "nameLocation": "1346:8:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 492,
                        "src": "1338:16:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 472,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1338:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1313:42:7"
                  },
                  "src": "1294:232:7",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 508,
                    "nodeType": "Block",
                    "src": "1567:107:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 503,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 497,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "1579:3:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 498,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "1579:10:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 499,
                                    "name": "_swaps",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 398,
                                    "src": "1593:6:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint64_$_t_struct$_Swap_$419_storage_$",
                                      "typeString": "mapping(uint64 => struct TamagoSwap.Swap storage ref)"
                                    }
                                  },
                                  "id": 501,
                                  "indexExpression": {
                                    "id": 500,
                                    "name": "swapId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 494,
                                    "src": "1600:6:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint64",
                                      "typeString": "uint64"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "1593:14:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Swap_$419_storage",
                                    "typeString": "struct TamagoSwap.Swap storage ref"
                                  }
                                },
                                "id": 502,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "initiator",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 400,
                                "src": "1593:24:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "src": "1579:38:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "54616d61676f537761703a2063616c6c6572206973206e6f74207377617020696e69746961746f72",
                              "id": 504,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1622:42:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_98a1486cbfa3b557b740701a05e4c08459bb73548e1fbb3d25790ee22bcb4d9b",
                                "typeString": "literal_string \"TamagoSwap: caller is not swap initiator\""
                              },
                              "value": "TamagoSwap: caller is not swap initiator"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_98a1486cbfa3b557b740701a05e4c08459bb73548e1fbb3d25790ee22bcb4d9b",
                                "typeString": "literal_string \"TamagoSwap: caller is not swap initiator\""
                              }
                            ],
                            "id": 496,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "1571:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 505,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1571:94:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 506,
                        "nodeType": "ExpressionStatement",
                        "src": "1571:94:7"
                      },
                      {
                        "id": 507,
                        "nodeType": "PlaceholderStatement",
                        "src": "1669:1:7"
                      }
                    ]
                  },
                  "id": 509,
                  "name": "onlyInitiator",
                  "nameLocation": "1538:13:7",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 495,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 494,
                        "mutability": "mutable",
                        "name": "swapId",
                        "nameLocation": "1559:6:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 509,
                        "src": "1552:13:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        "typeName": {
                          "id": 493,
                          "name": "uint64",
                          "nodeType": "ElementaryTypeName",
                          "src": "1552:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1551:15:7"
                  },
                  "src": "1529:145:7",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 527,
                    "nodeType": "Block",
                    "src": "1760:114:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 522,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 518,
                                  "name": "nftAddresses",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 512,
                                  "src": "1772:12:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                    "typeString": "address[] memory"
                                  }
                                },
                                "id": 519,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "length",
                                "nodeType": "MemberAccess",
                                "src": "1772:19:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "expression": {
                                  "id": 520,
                                  "name": "nftIds",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 515,
                                  "src": "1795:6:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                    "typeString": "uint256[] memory"
                                  }
                                },
                                "id": 521,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "length",
                                "nodeType": "MemberAccess",
                                "src": "1795:13:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "1772:36:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "54616d61676f537761703a204e465420616e6420494420617272617973206861766520746f2062652073616d65206c656e677468",
                              "id": 523,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1810:54:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_cff939502c9eeeccfa94266f78ed7408a2ebceb3feb9a1845d0577828bfc6f3e",
                                "typeString": "literal_string \"TamagoSwap: NFT and ID arrays have to be same length\""
                              },
                              "value": "TamagoSwap: NFT and ID arrays have to be same length"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_cff939502c9eeeccfa94266f78ed7408a2ebceb3feb9a1845d0577828bfc6f3e",
                                "typeString": "literal_string \"TamagoSwap: NFT and ID arrays have to be same length\""
                              }
                            ],
                            "id": 517,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "1764:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 524,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1764:101:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 525,
                        "nodeType": "ExpressionStatement",
                        "src": "1764:101:7"
                      },
                      {
                        "id": 526,
                        "nodeType": "PlaceholderStatement",
                        "src": "1869:1:7"
                      }
                    ]
                  },
                  "id": 528,
                  "name": "requireSameLength",
                  "nameLocation": "1686:17:7",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 516,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 512,
                        "mutability": "mutable",
                        "name": "nftAddresses",
                        "nameLocation": "1721:12:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 528,
                        "src": "1704:29:7",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 510,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1704:7:7",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 511,
                          "nodeType": "ArrayTypeName",
                          "src": "1704:9:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                            "typeString": "address[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 515,
                        "mutability": "mutable",
                        "name": "nftIds",
                        "nameLocation": "1752:6:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 528,
                        "src": "1735:23:7",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 513,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "1735:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 514,
                          "nodeType": "ArrayTypeName",
                          "src": "1735:9:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                            "typeString": "uint256[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1703:56:7"
                  },
                  "src": "1677:197:7",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 539,
                    "nodeType": "Block",
                    "src": "1901:111:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 534,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 531,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "1913:3:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 532,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "value",
                                "nodeType": "MemberAccess",
                                "src": "1913:9:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "id": 533,
                                "name": "fee",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 393,
                                "src": "1926:3:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint128",
                                  "typeString": "uint128"
                                }
                              },
                              "src": "1913:16:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "54616d61676f537761703a2053656e742045544820616d6f756e74206e6565647320746f206265206d6f7265206f7220657175616c206170706c69636174696f6e20666565",
                              "id": 535,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1931:71:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_31462d0c7c62b4e669eb3c4207095a95e4463c3e8a74323217f416e4bbd08730",
                                "typeString": "literal_string \"TamagoSwap: Sent ETH amount needs to be more or equal application fee\""
                              },
                              "value": "TamagoSwap: Sent ETH amount needs to be more or equal application fee"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_31462d0c7c62b4e669eb3c4207095a95e4463c3e8a74323217f416e4bbd08730",
                                "typeString": "literal_string \"TamagoSwap: Sent ETH amount needs to be more or equal application fee\""
                              }
                            ],
                            "id": 530,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "1905:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 536,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1905:98:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 537,
                        "nodeType": "ExpressionStatement",
                        "src": "1905:98:7"
                      },
                      {
                        "id": 538,
                        "nodeType": "PlaceholderStatement",
                        "src": "2007:1:7"
                      }
                    ]
                  },
                  "id": 540,
                  "name": "chargeAppFee",
                  "nameLocation": "1886:12:7",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 529,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1898:2:7"
                  },
                  "src": "1877:135:7",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 557,
                    "nodeType": "Block",
                    "src": "2079:75:7",
                    "statements": [
                      {
                        "expression": {
                          "id": 549,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 547,
                            "name": "fee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 393,
                            "src": "2083:3:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 548,
                            "name": "initalAppFee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 542,
                            "src": "2089:12:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          },
                          "src": "2083:18:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "id": 550,
                        "nodeType": "ExpressionStatement",
                        "src": "2083:18:7"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 554,
                              "name": "contractOwnerAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 544,
                              "src": "2129:20:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 551,
                              "name": "super",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -25,
                              "src": "2105:5:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_super$_TamagoSwap_$1239_$",
                                "typeString": "type(contract super TamagoSwap)"
                              }
                            },
                            "id": 553,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transferOwnership",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 83,
                            "src": "2105:23:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 555,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2105:45:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 556,
                        "nodeType": "ExpressionStatement",
                        "src": "2105:45:7"
                      }
                    ]
                  },
                  "id": 558,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 545,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 542,
                        "mutability": "mutable",
                        "name": "initalAppFee",
                        "nameLocation": "2035:12:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 558,
                        "src": "2027:20:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        "typeName": {
                          "id": 541,
                          "name": "uint128",
                          "nodeType": "ElementaryTypeName",
                          "src": "2027:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 544,
                        "mutability": "mutable",
                        "name": "contractOwnerAddress",
                        "nameLocation": "2057:20:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 558,
                        "src": "2049:28:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 543,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2049:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2026:52:7"
                  },
                  "returnParameters": {
                    "id": 546,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2079:0:7"
                  },
                  "scope": 1239,
                  "src": "2015:139:7",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 573,
                    "nodeType": "Block",
                    "src": "2211:50:7",
                    "statements": [
                      {
                        "expression": {
                          "id": 567,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 565,
                            "name": "fee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 393,
                            "src": "2215:3:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 566,
                            "name": "newFee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 560,
                            "src": "2221:6:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          },
                          "src": "2215:12:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "id": 568,
                        "nodeType": "ExpressionStatement",
                        "src": "2215:12:7"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 570,
                              "name": "newFee",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 560,
                              "src": "2250:6:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint128",
                                "typeString": "uint128"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint128",
                                "typeString": "uint128"
                              }
                            ],
                            "id": 569,
                            "name": "AppFeeChanged",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 469,
                            "src": "2236:13:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint128_$returns$__$",
                              "typeString": "function (uint128)"
                            }
                          },
                          "id": 571,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2236:21:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 572,
                        "nodeType": "EmitStatement",
                        "src": "2231:26:7"
                      }
                    ]
                  },
                  "functionSelector": "b7719a9c",
                  "id": 574,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 563,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 562,
                        "name": "onlyOwner",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 46,
                        "src": "2201:9:7"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2201:9:7"
                    }
                  ],
                  "name": "setAppFee",
                  "nameLocation": "2166:9:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 561,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 560,
                        "mutability": "mutable",
                        "name": "newFee",
                        "nameLocation": "2184:6:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 574,
                        "src": "2176:14:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        "typeName": {
                          "id": 559,
                          "name": "uint128",
                          "nodeType": "ElementaryTypeName",
                          "src": "2176:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2175:16:7"
                  },
                  "returnParameters": {
                    "id": 564,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2211:0:7"
                  },
                  "scope": 1239,
                  "src": "2157:104:7",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 683,
                    "nodeType": "Block",
                    "src": "2919:613:7",
                    "statements": [
                      {
                        "expression": {
                          "id": 594,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 592,
                            "name": "_swapsCounter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 389,
                            "src": "2923:13:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "hexValue": "31",
                            "id": 593,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2940:1:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "2923:18:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "id": 595,
                        "nodeType": "ExpressionStatement",
                        "src": "2923:18:7"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 597,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "2976:3:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 598,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "2976:10:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 601,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "2999:4:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_TamagoSwap_$1239",
                                    "typeString": "contract TamagoSwap"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_TamagoSwap_$1239",
                                    "typeString": "contract TamagoSwap"
                                  }
                                ],
                                "id": 600,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2991:7:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 599,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2991:7:7",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 602,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2991:13:7",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 603,
                              "name": "nftAddresses",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 580,
                              "src": "3009:12:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              }
                            },
                            {
                              "id": 604,
                              "name": "nftIds",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 583,
                              "src": "3026:6:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              },
                              {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            ],
                            "id": 596,
                            "name": "safeMultipleTransfersFrom",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1183,
                            "src": "2946:25:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
                              "typeString": "function (address,address,address[] memory,uint256[] memory)"
                            }
                          },
                          "id": 605,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2946:90:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 606,
                        "nodeType": "ExpressionStatement",
                        "src": "2946:90:7"
                      },
                      {
                        "assignments": [
                          609
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 609,
                            "mutability": "mutable",
                            "name": "swap",
                            "nameLocation": "3054:4:7",
                            "nodeType": "VariableDeclaration",
                            "scope": 683,
                            "src": "3041:17:7",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Swap_$419_storage_ptr",
                              "typeString": "struct TamagoSwap.Swap"
                            },
                            "typeName": {
                              "id": 608,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 607,
                                "name": "Swap",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 419,
                                "src": "3041:4:7"
                              },
                              "referencedDeclaration": 419,
                              "src": "3041:4:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Swap_$419_storage_ptr",
                                "typeString": "struct TamagoSwap.Swap"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 613,
                        "initialValue": {
                          "baseExpression": {
                            "id": 610,
                            "name": "_swaps",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 398,
                            "src": "3061:6:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint64_$_t_struct$_Swap_$419_storage_$",
                              "typeString": "mapping(uint64 => struct TamagoSwap.Swap storage ref)"
                            }
                          },
                          "id": 612,
                          "indexExpression": {
                            "id": 611,
                            "name": "_swapsCounter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 389,
                            "src": "3068:13:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3061:21:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Swap_$419_storage",
                            "typeString": "struct TamagoSwap.Swap storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3041:41:7"
                      },
                      {
                        "expression": {
                          "id": 622,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 614,
                              "name": "swap",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 609,
                              "src": "3086:4:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Swap_$419_storage_ptr",
                                "typeString": "struct TamagoSwap.Swap storage pointer"
                              }
                            },
                            "id": 616,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "initiator",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 400,
                            "src": "3086:14:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 619,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "3111:3:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 620,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "3111:10:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 618,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3103:8:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_payable_$",
                                "typeString": "type(address payable)"
                              },
                              "typeName": {
                                "id": 617,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "3103:8:7",
                                "stateMutability": "payable",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 621,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3103:19:7",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "src": "3086:36:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "id": 623,
                        "nodeType": "ExpressionStatement",
                        "src": "3086:36:7"
                      },
                      {
                        "expression": {
                          "id": 628,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 624,
                              "name": "swap",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 609,
                              "src": "3126:4:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Swap_$419_storage_ptr",
                                "typeString": "struct TamagoSwap.Swap storage pointer"
                              }
                            },
                            "id": 626,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "initiatorNftAddresses",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 403,
                            "src": "3126:26:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_storage",
                              "typeString": "address[] storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 627,
                            "name": "nftAddresses",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 580,
                            "src": "3155:12:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[] memory"
                            }
                          },
                          "src": "3126:41:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage",
                            "typeString": "address[] storage ref"
                          }
                        },
                        "id": 629,
                        "nodeType": "ExpressionStatement",
                        "src": "3126:41:7"
                      },
                      {
                        "expression": {
                          "id": 634,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 630,
                              "name": "swap",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 609,
                              "src": "3171:4:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Swap_$419_storage_ptr",
                                "typeString": "struct TamagoSwap.Swap storage pointer"
                              }
                            },
                            "id": 632,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "initiatorNftIds",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 406,
                            "src": "3171:20:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                              "typeString": "uint256[] storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 633,
                            "name": "nftIds",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 583,
                            "src": "3194:6:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          "src": "3171:29:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                            "typeString": "uint256[] storage ref"
                          }
                        },
                        "id": 635,
                        "nodeType": "ExpressionStatement",
                        "src": "3171:29:7"
                      },
                      {
                        "assignments": [
                          637
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 637,
                            "mutability": "mutable",
                            "name": "_fee",
                            "nameLocation": "3213:4:7",
                            "nodeType": "VariableDeclaration",
                            "scope": 683,
                            "src": "3205:12:7",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            },
                            "typeName": {
                              "id": 636,
                              "name": "uint128",
                              "nodeType": "ElementaryTypeName",
                              "src": "3205:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint128",
                                "typeString": "uint128"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 639,
                        "initialValue": {
                          "id": 638,
                          "name": "fee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 393,
                          "src": "3220:3:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3205:18:7"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 643,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 640,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "3232:3:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 641,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "value",
                            "nodeType": "MemberAccess",
                            "src": "3232:9:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "id": 642,
                            "name": "_fee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 637,
                            "src": "3244:4:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          },
                          "src": "3232:16:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 662,
                        "nodeType": "IfStatement",
                        "src": "3228:129:7",
                        "trueBody": {
                          "id": 661,
                          "nodeType": "Block",
                          "src": "3250:107:7",
                          "statements": [
                            {
                              "expression": {
                                "id": 654,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "id": 644,
                                    "name": "swap",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 609,
                                    "src": "3255:4:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Swap_$419_storage_ptr",
                                      "typeString": "struct TamagoSwap.Swap storage pointer"
                                    }
                                  },
                                  "id": 646,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "initiatorEtherValue",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 416,
                                  "src": "3255:24:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint128",
                                    "typeString": "uint128"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint128",
                                    "typeString": "uint128"
                                  },
                                  "id": 653,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "arguments": [
                                      {
                                        "expression": {
                                          "id": 649,
                                          "name": "msg",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": -15,
                                          "src": "3290:3:7",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_magic_message",
                                            "typeString": "msg"
                                          }
                                        },
                                        "id": 650,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "value",
                                        "nodeType": "MemberAccess",
                                        "src": "3290:9:7",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "id": 648,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "3282:7:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_uint128_$",
                                        "typeString": "type(uint128)"
                                      },
                                      "typeName": {
                                        "id": 647,
                                        "name": "uint128",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "3282:7:7",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 651,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "3282:18:7",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint128",
                                      "typeString": "uint128"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "-",
                                  "rightExpression": {
                                    "id": 652,
                                    "name": "_fee",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 637,
                                    "src": "3303:4:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint128",
                                      "typeString": "uint128"
                                    }
                                  },
                                  "src": "3282:25:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint128",
                                    "typeString": "uint128"
                                  }
                                },
                                "src": "3255:52:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint128",
                                  "typeString": "uint128"
                                }
                              },
                              "id": 655,
                              "nodeType": "ExpressionStatement",
                              "src": "3255:52:7"
                            },
                            {
                              "expression": {
                                "id": 659,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 656,
                                  "name": "_etherLocked",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 391,
                                  "src": "3312:12:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint128",
                                    "typeString": "uint128"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "+=",
                                "rightHandSide": {
                                  "expression": {
                                    "id": 657,
                                    "name": "swap",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 609,
                                    "src": "3328:4:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Swap_$419_storage_ptr",
                                      "typeString": "struct TamagoSwap.Swap storage pointer"
                                    }
                                  },
                                  "id": 658,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "initiatorEtherValue",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 416,
                                  "src": "3328:24:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint128",
                                    "typeString": "uint128"
                                  }
                                },
                                "src": "3312:40:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint128",
                                  "typeString": "uint128"
                                }
                              },
                              "id": 660,
                              "nodeType": "ExpressionStatement",
                              "src": "3312:40:7"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "id": 670,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 663,
                              "name": "swap",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 609,
                              "src": "3360:4:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Swap_$419_storage_ptr",
                                "typeString": "struct TamagoSwap.Swap storage pointer"
                              }
                            },
                            "id": 665,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "secondUser",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 408,
                            "src": "3360:15:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 668,
                                "name": "secondUser",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 577,
                                "src": "3386:10:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 667,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3378:8:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_payable_$",
                                "typeString": "type(address payable)"
                              },
                              "typeName": {
                                "id": 666,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "3378:8:7",
                                "stateMutability": "payable",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 669,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3378:19:7",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "src": "3360:37:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "id": 671,
                        "nodeType": "ExpressionStatement",
                        "src": "3360:37:7"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 673,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "3424:3:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 674,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "3424:10:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 675,
                              "name": "secondUser",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 577,
                              "src": "3439:10:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 676,
                              "name": "_swapsCounter",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 389,
                              "src": "3454:13:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              }
                            },
                            {
                              "expression": {
                                "id": 677,
                                "name": "swap",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 609,
                                "src": "3472:4:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Swap_$419_storage_ptr",
                                  "typeString": "struct TamagoSwap.Swap storage pointer"
                                }
                              },
                              "id": 678,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "initiatorEtherValue",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 416,
                              "src": "3472:24:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint128",
                                "typeString": "uint128"
                              }
                            },
                            {
                              "id": 679,
                              "name": "nftAddresses",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 580,
                              "src": "3501:12:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              }
                            },
                            {
                              "id": 680,
                              "name": "nftIds",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 583,
                              "src": "3518:6:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              },
                              {
                                "typeIdentifier": "t_uint128",
                                "typeString": "uint128"
                              },
                              {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              },
                              {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            ],
                            "id": 672,
                            "name": "SwapProposed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 449,
                            "src": "3407:12:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint64_$_t_uint128_$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
                              "typeString": "function (address,address,uint64,uint128,address[] memory,uint256[] memory)"
                            }
                          },
                          "id": 681,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3407:121:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 682,
                        "nodeType": "EmitStatement",
                        "src": "3402:126:7"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 575,
                    "nodeType": "StructuredDocumentation",
                    "src": "2264:477:7",
                    "text": " @dev First user proposes a swap to the second user with the NFTs that he deposits and wants to trade.\n      Proposed NFTs are transfered to the TamagoSwap contract and\n      kept there until the swap is accepted or canceled/rejected.\n @param secondUser address of the user that the first user wants to trade NFTs with\n @param nftAddresses array of NFT addressed that want to be traded\n @param nftIds array of IDs belonging to NFTs that want to be traded"
                  },
                  "functionSelector": "55a36d56",
                  "id": 684,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 586,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 585,
                        "name": "chargeAppFee",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 540,
                        "src": "2866:12:7"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2866:12:7"
                    },
                    {
                      "arguments": [
                        {
                          "id": 588,
                          "name": "nftAddresses",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 580,
                          "src": "2897:12:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          }
                        },
                        {
                          "id": 589,
                          "name": "nftIds",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 583,
                          "src": "2911:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        }
                      ],
                      "id": 590,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 587,
                        "name": "requireSameLength",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 528,
                        "src": "2879:17:7"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2879:39:7"
                    }
                  ],
                  "name": "proposeSwap",
                  "nameLocation": "2752:11:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 584,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 577,
                        "mutability": "mutable",
                        "name": "secondUser",
                        "nameLocation": "2775:10:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 684,
                        "src": "2767:18:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 576,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2767:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 580,
                        "mutability": "mutable",
                        "name": "nftAddresses",
                        "nameLocation": "2806:12:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 684,
                        "src": "2789:29:7",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 578,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2789:7:7",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 579,
                          "nodeType": "ArrayTypeName",
                          "src": "2789:9:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                            "typeString": "address[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 583,
                        "mutability": "mutable",
                        "name": "nftIds",
                        "nameLocation": "2839:6:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 684,
                        "src": "2822:23:7",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 581,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "2822:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 582,
                          "nodeType": "ArrayTypeName",
                          "src": "2822:9:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                            "typeString": "uint256[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2763:85:7"
                  },
                  "returnParameters": {
                    "id": 591,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2919:0:7"
                  },
                  "scope": 1239,
                  "src": "2743:789:7",
                  "stateMutability": "payable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 811,
                    "nodeType": "Block",
                    "src": "4151:834:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 709,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 703,
                                    "name": "_swaps",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 398,
                                    "src": "4163:6:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint64_$_t_struct$_Swap_$419_storage_$",
                                      "typeString": "mapping(uint64 => struct TamagoSwap.Swap storage ref)"
                                    }
                                  },
                                  "id": 705,
                                  "indexExpression": {
                                    "id": 704,
                                    "name": "swapId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 687,
                                    "src": "4170:6:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint64",
                                      "typeString": "uint64"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "4163:14:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Swap_$419_storage",
                                    "typeString": "struct TamagoSwap.Swap storage ref"
                                  }
                                },
                                "id": 706,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "secondUser",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 408,
                                "src": "4163:25:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "expression": {
                                  "id": 707,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "4192:3:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 708,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "4192:10:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "4163:39:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "54616d61676f537761703a2063616c6c6572206973206e6f74207377617020706172746963697061746f72",
                              "id": 710,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4204:45:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_7c11936e879e02ba8af5ac65179495154b284668aa2c04dfce7131087aa7595d",
                                "typeString": "literal_string \"TamagoSwap: caller is not swap participator\""
                              },
                              "value": "TamagoSwap: caller is not swap participator"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_7c11936e879e02ba8af5ac65179495154b284668aa2c04dfce7131087aa7595d",
                                "typeString": "literal_string \"TamagoSwap: caller is not swap participator\""
                              }
                            ],
                            "id": 702,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "4155:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 711,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4155:95:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 712,
                        "nodeType": "ExpressionStatement",
                        "src": "4155:95:7"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 736,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint128",
                                  "typeString": "uint128"
                                },
                                "id": 719,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 714,
                                      "name": "_swaps",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 398,
                                      "src": "4266:6:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_uint64_$_t_struct$_Swap_$419_storage_$",
                                        "typeString": "mapping(uint64 => struct TamagoSwap.Swap storage ref)"
                                      }
                                    },
                                    "id": 716,
                                    "indexExpression": {
                                      "id": 715,
                                      "name": "swapId",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 687,
                                      "src": "4273:6:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint64",
                                        "typeString": "uint64"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "4266:14:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Swap_$419_storage",
                                      "typeString": "struct TamagoSwap.Swap storage ref"
                                    }
                                  },
                                  "id": 717,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "secondUserEtherValue",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 418,
                                  "src": "4266:35:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint128",
                                    "typeString": "uint128"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "hexValue": "30",
                                  "id": 718,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "4305:1:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "4266:40:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "&&",
                              "rightExpression": {
                                "components": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    "id": 734,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 726,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "expression": {
                                          "expression": {
                                            "baseExpression": {
                                              "id": 720,
                                              "name": "_swaps",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 398,
                                              "src": "4315:6:7",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_mapping$_t_uint64_$_t_struct$_Swap_$419_storage_$",
                                                "typeString": "mapping(uint64 => struct TamagoSwap.Swap storage ref)"
                                              }
                                            },
                                            "id": 722,
                                            "indexExpression": {
                                              "id": 721,
                                              "name": "swapId",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 687,
                                              "src": "4322:6:7",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint64",
                                                "typeString": "uint64"
                                              }
                                            },
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "IndexAccess",
                                            "src": "4315:14:7",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_Swap_$419_storage",
                                              "typeString": "struct TamagoSwap.Swap storage ref"
                                            }
                                          },
                                          "id": 723,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "secondUserNftAddresses",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 411,
                                          "src": "4315:37:7",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                            "typeString": "address[] storage ref"
                                          }
                                        },
                                        "id": 724,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "length",
                                        "nodeType": "MemberAccess",
                                        "src": "4315:44:7",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "==",
                                      "rightExpression": {
                                        "hexValue": "30",
                                        "id": 725,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "4363:1:7",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      },
                                      "src": "4315:49:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "&&",
                                    "rightExpression": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 733,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "expression": {
                                          "expression": {
                                            "baseExpression": {
                                              "id": 727,
                                              "name": "_swaps",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 398,
                                              "src": "4371:6:7",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_mapping$_t_uint64_$_t_struct$_Swap_$419_storage_$",
                                                "typeString": "mapping(uint64 => struct TamagoSwap.Swap storage ref)"
                                              }
                                            },
                                            "id": 729,
                                            "indexExpression": {
                                              "id": 728,
                                              "name": "swapId",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 687,
                                              "src": "4378:6:7",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint64",
                                                "typeString": "uint64"
                                              }
                                            },
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "IndexAccess",
                                            "src": "4371:14:7",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_Swap_$419_storage",
                                              "typeString": "struct TamagoSwap.Swap storage ref"
                                            }
                                          },
                                          "id": 730,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "secondUserNftIds",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 414,
                                          "src": "4371:31:7",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                            "typeString": "uint256[] storage ref"
                                          }
                                        },
                                        "id": 731,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "length",
                                        "nodeType": "MemberAccess",
                                        "src": "4371:38:7",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "==",
                                      "rightExpression": {
                                        "hexValue": "30",
                                        "id": 732,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "4413:1:7",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      },
                                      "src": "4371:43:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "src": "4315:99:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  }
                                ],
                                "id": 735,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "4313:102:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "4266:149:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "54616d61676f537761703a207377617020616c726561647920696e69746961746564",
                              "id": 737,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4417:36:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_f61faac6105dde7c1f360d4cbad4dcdffde68858cd217607b25e250fe83f3d73",
                                "typeString": "literal_string \"TamagoSwap: swap already initiated\""
                              },
                              "value": "TamagoSwap: swap already initiated"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_f61faac6105dde7c1f360d4cbad4dcdffde68858cd217607b25e250fe83f3d73",
                                "typeString": "literal_string \"TamagoSwap: swap already initiated\""
                              }
                            ],
                            "id": 713,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "4254:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 738,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4254:203:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 739,
                        "nodeType": "ExpressionStatement",
                        "src": "4254:203:7"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 741,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "4492:3:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 742,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "4492:10:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 745,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "4515:4:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_TamagoSwap_$1239",
                                    "typeString": "contract TamagoSwap"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_TamagoSwap_$1239",
                                    "typeString": "contract TamagoSwap"
                                  }
                                ],
                                "id": 744,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "4507:7:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 743,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "4507:7:7",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 746,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4507:13:7",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 747,
                              "name": "nftAddresses",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 690,
                              "src": "4525:12:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              }
                            },
                            {
                              "id": 748,
                              "name": "nftIds",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 693,
                              "src": "4542:6:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              },
                              {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            ],
                            "id": 740,
                            "name": "safeMultipleTransfersFrom",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1183,
                            "src": "4462:25:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
                              "typeString": "function (address,address,address[] memory,uint256[] memory)"
                            }
                          },
                          "id": 749,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4462:90:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 750,
                        "nodeType": "ExpressionStatement",
                        "src": "4462:90:7"
                      },
                      {
                        "expression": {
                          "id": 756,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 751,
                                "name": "_swaps",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 398,
                                "src": "4557:6:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint64_$_t_struct$_Swap_$419_storage_$",
                                  "typeString": "mapping(uint64 => struct TamagoSwap.Swap storage ref)"
                                }
                              },
                              "id": 753,
                              "indexExpression": {
                                "id": 752,
                                "name": "swapId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 687,
                                "src": "4564:6:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint64",
                                  "typeString": "uint64"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "4557:14:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Swap_$419_storage",
                                "typeString": "struct TamagoSwap.Swap storage ref"
                              }
                            },
                            "id": 754,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "secondUserNftAddresses",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 411,
                            "src": "4557:37:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_storage",
                              "typeString": "address[] storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 755,
                            "name": "nftAddresses",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 690,
                            "src": "4597:12:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[] memory"
                            }
                          },
                          "src": "4557:52:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage",
                            "typeString": "address[] storage ref"
                          }
                        },
                        "id": 757,
                        "nodeType": "ExpressionStatement",
                        "src": "4557:52:7"
                      },
                      {
                        "expression": {
                          "id": 763,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 758,
                                "name": "_swaps",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 398,
                                "src": "4613:6:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint64_$_t_struct$_Swap_$419_storage_$",
                                  "typeString": "mapping(uint64 => struct TamagoSwap.Swap storage ref)"
                                }
                              },
                              "id": 760,
                              "indexExpression": {
                                "id": 759,
                                "name": "swapId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 687,
                                "src": "4620:6:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint64",
                                  "typeString": "uint64"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "4613:14:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Swap_$419_storage",
                                "typeString": "struct TamagoSwap.Swap storage ref"
                              }
                            },
                            "id": 761,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "secondUserNftIds",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 414,
                            "src": "4613:31:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                              "typeString": "uint256[] storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 762,
                            "name": "nftIds",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 693,
                            "src": "4647:6:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          "src": "4613:40:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                            "typeString": "uint256[] storage ref"
                          }
                        },
                        "id": 764,
                        "nodeType": "ExpressionStatement",
                        "src": "4613:40:7"
                      },
                      {
                        "assignments": [
                          766
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 766,
                            "mutability": "mutable",
                            "name": "_fee",
                            "nameLocation": "4666:4:7",
                            "nodeType": "VariableDeclaration",
                            "scope": 811,
                            "src": "4658:12:7",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            },
                            "typeName": {
                              "id": 765,
                              "name": "uint128",
                              "nodeType": "ElementaryTypeName",
                              "src": "4658:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint128",
                                "typeString": "uint128"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 768,
                        "initialValue": {
                          "id": 767,
                          "name": "fee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 393,
                          "src": "4673:3:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4658:18:7"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 772,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 769,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "4685:3:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 770,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "value",
                            "nodeType": "MemberAccess",
                            "src": "4685:9:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "id": 771,
                            "name": "_fee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 766,
                            "src": "4697:4:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          },
                          "src": "4685:16:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 794,
                        "nodeType": "IfStatement",
                        "src": "4681:151:7",
                        "trueBody": {
                          "id": 793,
                          "nodeType": "Block",
                          "src": "4703:129:7",
                          "statements": [
                            {
                              "expression": {
                                "id": 784,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 773,
                                      "name": "_swaps",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 398,
                                      "src": "4708:6:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_uint64_$_t_struct$_Swap_$419_storage_$",
                                        "typeString": "mapping(uint64 => struct TamagoSwap.Swap storage ref)"
                                      }
                                    },
                                    "id": 775,
                                    "indexExpression": {
                                      "id": 774,
                                      "name": "swapId",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 687,
                                      "src": "4715:6:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint64",
                                        "typeString": "uint64"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "4708:14:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Swap_$419_storage",
                                      "typeString": "struct TamagoSwap.Swap storage ref"
                                    }
                                  },
                                  "id": 776,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "secondUserEtherValue",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 418,
                                  "src": "4708:35:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint128",
                                    "typeString": "uint128"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint128",
                                    "typeString": "uint128"
                                  },
                                  "id": 783,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "arguments": [
                                      {
                                        "expression": {
                                          "id": 779,
                                          "name": "msg",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": -15,
                                          "src": "4754:3:7",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_magic_message",
                                            "typeString": "msg"
                                          }
                                        },
                                        "id": 780,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "value",
                                        "nodeType": "MemberAccess",
                                        "src": "4754:9:7",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "id": 778,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "4746:7:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_uint128_$",
                                        "typeString": "type(uint128)"
                                      },
                                      "typeName": {
                                        "id": 777,
                                        "name": "uint128",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "4746:7:7",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 781,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "4746:18:7",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint128",
                                      "typeString": "uint128"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "-",
                                  "rightExpression": {
                                    "id": 782,
                                    "name": "_fee",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 766,
                                    "src": "4767:4:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint128",
                                      "typeString": "uint128"
                                    }
                                  },
                                  "src": "4746:25:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint128",
                                    "typeString": "uint128"
                                  }
                                },
                                "src": "4708:63:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint128",
                                  "typeString": "uint128"
                                }
                              },
                              "id": 785,
                              "nodeType": "ExpressionStatement",
                              "src": "4708:63:7"
                            },
                            {
                              "expression": {
                                "id": 791,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 786,
                                  "name": "_etherLocked",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 391,
                                  "src": "4776:12:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint128",
                                    "typeString": "uint128"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "+=",
                                "rightHandSide": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 787,
                                      "name": "_swaps",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 398,
                                      "src": "4792:6:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_uint64_$_t_struct$_Swap_$419_storage_$",
                                        "typeString": "mapping(uint64 => struct TamagoSwap.Swap storage ref)"
                                      }
                                    },
                                    "id": 789,
                                    "indexExpression": {
                                      "id": 788,
                                      "name": "swapId",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 687,
                                      "src": "4799:6:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint64",
                                        "typeString": "uint64"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "4792:14:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Swap_$419_storage",
                                      "typeString": "struct TamagoSwap.Swap storage ref"
                                    }
                                  },
                                  "id": 790,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "secondUserEtherValue",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 418,
                                  "src": "4792:35:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint128",
                                    "typeString": "uint128"
                                  }
                                },
                                "src": "4776:51:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint128",
                                  "typeString": "uint128"
                                }
                              },
                              "id": 792,
                              "nodeType": "ExpressionStatement",
                              "src": "4776:51:7"
                            }
                          ]
                        }
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 796,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "4859:3:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 797,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "4859:10:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "baseExpression": {
                                  "id": 798,
                                  "name": "_swaps",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 398,
                                  "src": "4874:6:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint64_$_t_struct$_Swap_$419_storage_$",
                                    "typeString": "mapping(uint64 => struct TamagoSwap.Swap storage ref)"
                                  }
                                },
                                "id": 800,
                                "indexExpression": {
                                  "id": 799,
                                  "name": "swapId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 687,
                                  "src": "4881:6:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint64",
                                    "typeString": "uint64"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "4874:14:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Swap_$419_storage",
                                  "typeString": "struct TamagoSwap.Swap storage ref"
                                }
                              },
                              "id": 801,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "initiator",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 400,
                              "src": "4874:24:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "id": 802,
                              "name": "swapId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 687,
                              "src": "4903:6:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              }
                            },
                            {
                              "expression": {
                                "baseExpression": {
                                  "id": 803,
                                  "name": "_swaps",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 398,
                                  "src": "4914:6:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint64_$_t_struct$_Swap_$419_storage_$",
                                    "typeString": "mapping(uint64 => struct TamagoSwap.Swap storage ref)"
                                  }
                                },
                                "id": 805,
                                "indexExpression": {
                                  "id": 804,
                                  "name": "swapId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 687,
                                  "src": "4921:6:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint64",
                                    "typeString": "uint64"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "4914:14:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Swap_$419_storage",
                                  "typeString": "struct TamagoSwap.Swap storage ref"
                                }
                              },
                              "id": 806,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "secondUserEtherValue",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 418,
                              "src": "4914:35:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint128",
                                "typeString": "uint128"
                              }
                            },
                            {
                              "id": 807,
                              "name": "nftAddresses",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 690,
                              "src": "4954:12:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              }
                            },
                            {
                              "id": 808,
                              "name": "nftIds",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 693,
                              "src": "4971:6:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              },
                              {
                                "typeIdentifier": "t_uint128",
                                "typeString": "uint128"
                              },
                              {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              },
                              {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            ],
                            "id": 795,
                            "name": "SwapInitiated",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 465,
                            "src": "4841:13:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint64_$_t_uint128_$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
                              "typeString": "function (address,address,uint64,uint128,address[] memory,uint256[] memory)"
                            }
                          },
                          "id": 809,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4841:140:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 810,
                        "nodeType": "EmitStatement",
                        "src": "4836:145:7"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 685,
                    "nodeType": "StructuredDocumentation",
                    "src": "3535:442:7",
                    "text": " @dev Second user accepts the swap (with proposed NFTs) from swap initiator and\n      deposits his NFTs into the TamagoSwap contract.\n      Callable only by second user that is invited by swap initiator.\n @param swapId ID of the swap that the second user is invited to participate in\n @param nftAddresses array of NFT addressed that want to be traded\n @param nftIds array of IDs belonging to NFTs that want to be traded"
                  },
                  "functionSelector": "7e3fe497",
                  "id": 812,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 696,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 695,
                        "name": "chargeAppFee",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 540,
                        "src": "4098:12:7"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "4098:12:7"
                    },
                    {
                      "arguments": [
                        {
                          "id": 698,
                          "name": "nftAddresses",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 690,
                          "src": "4129:12:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          }
                        },
                        {
                          "id": 699,
                          "name": "nftIds",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 693,
                          "src": "4143:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        }
                      ],
                      "id": 700,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 697,
                        "name": "requireSameLength",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 528,
                        "src": "4111:17:7"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "4111:39:7"
                    }
                  ],
                  "name": "initiateSwap",
                  "nameLocation": "3988:12:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 694,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 687,
                        "mutability": "mutable",
                        "name": "swapId",
                        "nameLocation": "4011:6:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 812,
                        "src": "4004:13:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        "typeName": {
                          "id": 686,
                          "name": "uint64",
                          "nodeType": "ElementaryTypeName",
                          "src": "4004:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 690,
                        "mutability": "mutable",
                        "name": "nftAddresses",
                        "nameLocation": "4038:12:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 812,
                        "src": "4021:29:7",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 688,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4021:7:7",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 689,
                          "nodeType": "ArrayTypeName",
                          "src": "4021:9:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                            "typeString": "address[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 693,
                        "mutability": "mutable",
                        "name": "nftIds",
                        "nameLocation": "4071:6:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 812,
                        "src": "4054:23:7",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 691,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "4054:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 692,
                          "nodeType": "ArrayTypeName",
                          "src": "4054:9:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                            "typeString": "uint256[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4000:80:7"
                  },
                  "returnParameters": {
                    "id": 701,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4151:0:7"
                  },
                  "scope": 1239,
                  "src": "3979:1006:7",
                  "stateMutability": "payable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 985,
                    "nodeType": "Block",
                    "src": "5338:1356:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 852,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "components": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    "id": 835,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 828,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "expression": {
                                          "expression": {
                                            "baseExpression": {
                                              "id": 822,
                                              "name": "_swaps",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 398,
                                              "src": "5355:6:7",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_mapping$_t_uint64_$_t_struct$_Swap_$419_storage_$",
                                                "typeString": "mapping(uint64 => struct TamagoSwap.Swap storage ref)"
                                              }
                                            },
                                            "id": 824,
                                            "indexExpression": {
                                              "id": 823,
                                              "name": "swapId",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 815,
                                              "src": "5362:6:7",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint64",
                                                "typeString": "uint64"
                                              }
                                            },
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "IndexAccess",
                                            "src": "5355:14:7",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_Swap_$419_storage",
                                              "typeString": "struct TamagoSwap.Swap storage ref"
                                            }
                                          },
                                          "id": 825,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "secondUserNftAddresses",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 411,
                                          "src": "5355:37:7",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                            "typeString": "address[] storage ref"
                                          }
                                        },
                                        "id": 826,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "length",
                                        "nodeType": "MemberAccess",
                                        "src": "5355:44:7",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "!=",
                                      "rightExpression": {
                                        "hexValue": "30",
                                        "id": 827,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "5403:1:7",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      },
                                      "src": "5355:49:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "||",
                                    "rightExpression": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint128",
                                        "typeString": "uint128"
                                      },
                                      "id": 834,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "expression": {
                                          "baseExpression": {
                                            "id": 829,
                                            "name": "_swaps",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 398,
                                            "src": "5408:6:7",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_mapping$_t_uint64_$_t_struct$_Swap_$419_storage_$",
                                              "typeString": "mapping(uint64 => struct TamagoSwap.Swap storage ref)"
                                            }
                                          },
                                          "id": 831,
                                          "indexExpression": {
                                            "id": 830,
                                            "name": "swapId",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 815,
                                            "src": "5415:6:7",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint64",
                                              "typeString": "uint64"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "5408:14:7",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Swap_$419_storage",
                                            "typeString": "struct TamagoSwap.Swap storage ref"
                                          }
                                        },
                                        "id": 832,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "secondUserEtherValue",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 418,
                                        "src": "5408:35:7",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint128",
                                          "typeString": "uint128"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": ">",
                                      "rightExpression": {
                                        "hexValue": "30",
                                        "id": 833,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "5446:1:7",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      },
                                      "src": "5408:39:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "src": "5355:92:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  }
                                ],
                                "id": 836,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "5354:94:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "&&",
                              "rightExpression": {
                                "components": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    "id": 850,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 843,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "expression": {
                                          "expression": {
                                            "baseExpression": {
                                              "id": 837,
                                              "name": "_swaps",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 398,
                                              "src": "5456:6:7",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_mapping$_t_uint64_$_t_struct$_Swap_$419_storage_$",
                                                "typeString": "mapping(uint64 => struct TamagoSwap.Swap storage ref)"
                                              }
                                            },
                                            "id": 839,
                                            "indexExpression": {
                                              "id": 838,
                                              "name": "swapId",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 815,
                                              "src": "5463:6:7",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint64",
                                                "typeString": "uint64"
                                              }
                                            },
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "IndexAccess",
                                            "src": "5456:14:7",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_Swap_$419_storage",
                                              "typeString": "struct TamagoSwap.Swap storage ref"
                                            }
                                          },
                                          "id": 840,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "initiatorNftAddresses",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 403,
                                          "src": "5456:36:7",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                            "typeString": "address[] storage ref"
                                          }
                                        },
                                        "id": 841,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "length",
                                        "nodeType": "MemberAccess",
                                        "src": "5456:43:7",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "!=",
                                      "rightExpression": {
                                        "hexValue": "30",
                                        "id": 842,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "5503:1:7",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      },
                                      "src": "5456:48:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "||",
                                    "rightExpression": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint128",
                                        "typeString": "uint128"
                                      },
                                      "id": 849,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "expression": {
                                          "baseExpression": {
                                            "id": 844,
                                            "name": "_swaps",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 398,
                                            "src": "5508:6:7",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_mapping$_t_uint64_$_t_struct$_Swap_$419_storage_$",
                                              "typeString": "mapping(uint64 => struct TamagoSwap.Swap storage ref)"
                                            }
                                          },
                                          "id": 846,
                                          "indexExpression": {
                                            "id": 845,
                                            "name": "swapId",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 815,
                                            "src": "5515:6:7",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint64",
                                              "typeString": "uint64"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "5508:14:7",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Swap_$419_storage",
                                            "typeString": "struct TamagoSwap.Swap storage ref"
                                          }
                                        },
                                        "id": 847,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "initiatorEtherValue",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 416,
                                        "src": "5508:34:7",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint128",
                                          "typeString": "uint128"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": ">",
                                      "rightExpression": {
                                        "hexValue": "30",
                                        "id": 848,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "5545:1:7",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      },
                                      "src": "5508:38:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "src": "5456:90:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  }
                                ],
                                "id": 851,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "5455:92:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "5354:193:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "54616d61676f537761703a2043616e27742061636365707420737761702c20626f7468207061727469636970616e7473206469646e277420616464204e465473",
                              "id": 853,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5552:66:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_ead993d41c5eced30c94f7fda4f6f7557805adef8fd0aa2d3dfd14feef62bd94",
                                "typeString": "literal_string \"TamagoSwap: Can't accept swap, both participants didn't add NFTs\""
                              },
                              "value": "TamagoSwap: Can't accept swap, both participants didn't add NFTs"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_ead993d41c5eced30c94f7fda4f6f7557805adef8fd0aa2d3dfd14feef62bd94",
                                "typeString": "literal_string \"TamagoSwap: Can't accept swap, both participants didn't add NFTs\""
                              }
                            ],
                            "id": 821,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "5342:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 854,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5342:280:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 855,
                        "nodeType": "ExpressionStatement",
                        "src": "5342:280:7"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 859,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "5709:4:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_TamagoSwap_$1239",
                                    "typeString": "contract TamagoSwap"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_TamagoSwap_$1239",
                                    "typeString": "contract TamagoSwap"
                                  }
                                ],
                                "id": 858,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "5701:7:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 857,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "5701:7:7",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 860,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5701:13:7",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "baseExpression": {
                                  "id": 861,
                                  "name": "_swaps",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 398,
                                  "src": "5719:6:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint64_$_t_struct$_Swap_$419_storage_$",
                                    "typeString": "mapping(uint64 => struct TamagoSwap.Swap storage ref)"
                                  }
                                },
                                "id": 863,
                                "indexExpression": {
                                  "id": 862,
                                  "name": "swapId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 815,
                                  "src": "5726:6:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint64",
                                    "typeString": "uint64"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "5719:14:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Swap_$419_storage",
                                  "typeString": "struct TamagoSwap.Swap storage ref"
                                }
                              },
                              "id": 864,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "initiator",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 400,
                              "src": "5719:24:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "expression": {
                                "baseExpression": {
                                  "id": 865,
                                  "name": "_swaps",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 398,
                                  "src": "5748:6:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint64_$_t_struct$_Swap_$419_storage_$",
                                    "typeString": "mapping(uint64 => struct TamagoSwap.Swap storage ref)"
                                  }
                                },
                                "id": 867,
                                "indexExpression": {
                                  "id": 866,
                                  "name": "swapId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 815,
                                  "src": "5755:6:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint64",
                                    "typeString": "uint64"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "5748:14:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Swap_$419_storage",
                                  "typeString": "struct TamagoSwap.Swap storage ref"
                                }
                              },
                              "id": 868,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "secondUserNftAddresses",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 411,
                              "src": "5748:37:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            {
                              "expression": {
                                "baseExpression": {
                                  "id": 869,
                                  "name": "_swaps",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 398,
                                  "src": "5790:6:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint64_$_t_struct$_Swap_$419_storage_$",
                                    "typeString": "mapping(uint64 => struct TamagoSwap.Swap storage ref)"
                                  }
                                },
                                "id": 871,
                                "indexExpression": {
                                  "id": 870,
                                  "name": "swapId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 815,
                                  "src": "5797:6:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint64",
                                    "typeString": "uint64"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "5790:14:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Swap_$419_storage",
                                  "typeString": "struct TamagoSwap.Swap storage ref"
                                }
                              },
                              "id": 872,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "secondUserNftIds",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 414,
                              "src": "5790:31:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                "typeString": "uint256[] storage ref"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              },
                              {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                "typeString": "uint256[] storage ref"
                              }
                            ],
                            "id": 856,
                            "name": "safeMultipleTransfersFrom",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1183,
                            "src": "5671:25:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
                              "typeString": "function (address,address,address[] memory,uint256[] memory)"
                            }
                          },
                          "id": 873,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5671:154:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 874,
                        "nodeType": "ExpressionStatement",
                        "src": "5671:154:7"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 878,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "5914:4:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_TamagoSwap_$1239",
                                    "typeString": "contract TamagoSwap"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_TamagoSwap_$1239",
                                    "typeString": "contract TamagoSwap"
                                  }
                                ],
                                "id": 877,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "5906:7:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 876,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "5906:7:7",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 879,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5906:13:7",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "baseExpression": {
                                  "id": 880,
                                  "name": "_swaps",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 398,
                                  "src": "5924:6:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint64_$_t_struct$_Swap_$419_storage_$",
                                    "typeString": "mapping(uint64 => struct TamagoSwap.Swap storage ref)"
                                  }
                                },
                                "id": 882,
                                "indexExpression": {
                                  "id": 881,
                                  "name": "swapId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 815,
                                  "src": "5931:6:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint64",
                                    "typeString": "uint64"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "5924:14:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Swap_$419_storage",
                                  "typeString": "struct TamagoSwap.Swap storage ref"
                                }
                              },
                              "id": 883,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "secondUser",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 408,
                              "src": "5924:25:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "expression": {
                                "baseExpression": {
                                  "id": 884,
                                  "name": "_swaps",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 398,
                                  "src": "5954:6:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint64_$_t_struct$_Swap_$419_storage_$",
                                    "typeString": "mapping(uint64 => struct TamagoSwap.Swap storage ref)"
                                  }
                                },
                                "id": 886,
                                "indexExpression": {
                                  "id": 885,
                                  "name": "swapId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 815,
                                  "src": "5961:6:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint64",
                                    "typeString": "uint64"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "5954:14:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Swap_$419_storage",
                                  "typeString": "struct TamagoSwap.Swap storage ref"
                                }
                              },
                              "id": 887,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "initiatorNftAddresses",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 403,
                              "src": "5954:36:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            {
                              "expression": {
                                "baseExpression": {
                                  "id": 888,
                                  "name": "_swaps",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 398,
                                  "src": "5995:6:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint64_$_t_struct$_Swap_$419_storage_$",
                                    "typeString": "mapping(uint64 => struct TamagoSwap.Swap storage ref)"
                                  }
                                },
                                "id": 890,
                                "indexExpression": {
                                  "id": 889,
                                  "name": "swapId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 815,
                                  "src": "6002:6:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint64",
                                    "typeString": "uint64"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "5995:14:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Swap_$419_storage",
                                  "typeString": "struct TamagoSwap.Swap storage ref"
                                }
                              },
                              "id": 891,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "initiatorNftIds",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 406,
                              "src": "5995:30:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                "typeString": "uint256[] storage ref"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              },
                              {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                "typeString": "uint256[] storage ref"
                              }
                            ],
                            "id": 875,
                            "name": "safeMultipleTransfersFrom",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1183,
                            "src": "5876:25:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
                              "typeString": "function (address,address,address[] memory,uint256[] memory)"
                            }
                          },
                          "id": 892,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5876:153:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 893,
                        "nodeType": "ExpressionStatement",
                        "src": "5876:153:7"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          },
                          "id": 899,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 894,
                                "name": "_swaps",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 398,
                                "src": "6038:6:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint64_$_t_struct$_Swap_$419_storage_$",
                                  "typeString": "mapping(uint64 => struct TamagoSwap.Swap storage ref)"
                                }
                              },
                              "id": 896,
                              "indexExpression": {
                                "id": 895,
                                "name": "swapId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 815,
                                "src": "6045:6:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint64",
                                  "typeString": "uint64"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "6038:14:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Swap_$419_storage",
                                "typeString": "struct TamagoSwap.Swap storage ref"
                              }
                            },
                            "id": 897,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "initiatorEtherValue",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 416,
                            "src": "6038:34:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 898,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6076:1:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "6038:39:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 930,
                        "nodeType": "IfStatement",
                        "src": "6034:271:7",
                        "trueBody": {
                          "id": 929,
                          "nodeType": "Block",
                          "src": "6079:226:7",
                          "statements": [
                            {
                              "expression": {
                                "id": 905,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 900,
                                  "name": "_etherLocked",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 391,
                                  "src": "6084:12:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint128",
                                    "typeString": "uint128"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "-=",
                                "rightHandSide": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 901,
                                      "name": "_swaps",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 398,
                                      "src": "6100:6:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_uint64_$_t_struct$_Swap_$419_storage_$",
                                        "typeString": "mapping(uint64 => struct TamagoSwap.Swap storage ref)"
                                      }
                                    },
                                    "id": 903,
                                    "indexExpression": {
                                      "id": 902,
                                      "name": "swapId",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 815,
                                      "src": "6107:6:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint64",
                                        "typeString": "uint64"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "6100:14:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Swap_$419_storage",
                                      "typeString": "struct TamagoSwap.Swap storage ref"
                                    }
                                  },
                                  "id": 904,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "initiatorEtherValue",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 416,
                                  "src": "6100:34:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint128",
                                    "typeString": "uint128"
                                  }
                                },
                                "src": "6084:50:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint128",
                                  "typeString": "uint128"
                                }
                              },
                              "id": 906,
                              "nodeType": "ExpressionStatement",
                              "src": "6084:50:7"
                            },
                            {
                              "assignments": [
                                908
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 908,
                                  "mutability": "mutable",
                                  "name": "amountToTransfer",
                                  "nameLocation": "6147:16:7",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 929,
                                  "src": "6139:24:7",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint128",
                                    "typeString": "uint128"
                                  },
                                  "typeName": {
                                    "id": 907,
                                    "name": "uint128",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "6139:7:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint128",
                                      "typeString": "uint128"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 913,
                              "initialValue": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 909,
                                    "name": "_swaps",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 398,
                                    "src": "6166:6:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint64_$_t_struct$_Swap_$419_storage_$",
                                      "typeString": "mapping(uint64 => struct TamagoSwap.Swap storage ref)"
                                    }
                                  },
                                  "id": 911,
                                  "indexExpression": {
                                    "id": 910,
                                    "name": "swapId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 815,
                                    "src": "6173:6:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint64",
                                      "typeString": "uint64"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "6166:14:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Swap_$419_storage",
                                    "typeString": "struct TamagoSwap.Swap storage ref"
                                  }
                                },
                                "id": 912,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "initiatorEtherValue",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 416,
                                "src": "6166:34:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint128",
                                  "typeString": "uint128"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "6139:61:7"
                            },
                            {
                              "expression": {
                                "id": 919,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 914,
                                      "name": "_swaps",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 398,
                                      "src": "6205:6:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_uint64_$_t_struct$_Swap_$419_storage_$",
                                        "typeString": "mapping(uint64 => struct TamagoSwap.Swap storage ref)"
                                      }
                                    },
                                    "id": 916,
                                    "indexExpression": {
                                      "id": 915,
                                      "name": "swapId",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 815,
                                      "src": "6212:6:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint64",
                                        "typeString": "uint64"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "6205:14:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Swap_$419_storage",
                                      "typeString": "struct TamagoSwap.Swap storage ref"
                                    }
                                  },
                                  "id": 917,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "initiatorEtherValue",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 416,
                                  "src": "6205:34:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint128",
                                    "typeString": "uint128"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "hexValue": "30",
                                  "id": 918,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "6242:1:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "6205:38:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint128",
                                  "typeString": "uint128"
                                }
                              },
                              "id": 920,
                              "nodeType": "ExpressionStatement",
                              "src": "6205:38:7"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 926,
                                    "name": "amountToTransfer",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 908,
                                    "src": "6283:16:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint128",
                                      "typeString": "uint128"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint128",
                                      "typeString": "uint128"
                                    }
                                  ],
                                  "expression": {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 921,
                                        "name": "_swaps",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 398,
                                        "src": "6248:6:7",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_uint64_$_t_struct$_Swap_$419_storage_$",
                                          "typeString": "mapping(uint64 => struct TamagoSwap.Swap storage ref)"
                                        }
                                      },
                                      "id": 923,
                                      "indexExpression": {
                                        "id": 922,
                                        "name": "swapId",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 815,
                                        "src": "6255:6:7",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint64",
                                          "typeString": "uint64"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "6248:14:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Swap_$419_storage",
                                        "typeString": "struct TamagoSwap.Swap storage ref"
                                      }
                                    },
                                    "id": 924,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "secondUser",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 408,
                                    "src": "6248:25:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  },
                                  "id": 925,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "transfer",
                                  "nodeType": "MemberAccess",
                                  "src": "6248:34:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                                    "typeString": "function (uint256)"
                                  }
                                },
                                "id": 927,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6248:52:7",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 928,
                              "nodeType": "ExpressionStatement",
                              "src": "6248:52:7"
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          },
                          "id": 936,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 931,
                                "name": "_swaps",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 398,
                                "src": "6312:6:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint64_$_t_struct$_Swap_$419_storage_$",
                                  "typeString": "mapping(uint64 => struct TamagoSwap.Swap storage ref)"
                                }
                              },
                              "id": 933,
                              "indexExpression": {
                                "id": 932,
                                "name": "swapId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 815,
                                "src": "6319:6:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint64",
                                  "typeString": "uint64"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "6312:14:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Swap_$419_storage",
                                "typeString": "struct TamagoSwap.Swap storage ref"
                              }
                            },
                            "id": 934,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "secondUserEtherValue",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 418,
                            "src": "6312:35:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 935,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6351:1:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "6312:40:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 967,
                        "nodeType": "IfStatement",
                        "src": "6308:274:7",
                        "trueBody": {
                          "id": 966,
                          "nodeType": "Block",
                          "src": "6354:228:7",
                          "statements": [
                            {
                              "expression": {
                                "id": 942,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 937,
                                  "name": "_etherLocked",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 391,
                                  "src": "6359:12:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint128",
                                    "typeString": "uint128"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "-=",
                                "rightHandSide": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 938,
                                      "name": "_swaps",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 398,
                                      "src": "6375:6:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_uint64_$_t_struct$_Swap_$419_storage_$",
                                        "typeString": "mapping(uint64 => struct TamagoSwap.Swap storage ref)"
                                      }
                                    },
                                    "id": 940,
                                    "indexExpression": {
                                      "id": 939,
                                      "name": "swapId",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 815,
                                      "src": "6382:6:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint64",
                                        "typeString": "uint64"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "6375:14:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Swap_$419_storage",
                                      "typeString": "struct TamagoSwap.Swap storage ref"
                                    }
                                  },
                                  "id": 941,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "secondUserEtherValue",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 418,
                                  "src": "6375:35:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint128",
                                    "typeString": "uint128"
                                  }
                                },
                                "src": "6359:51:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint128",
                                  "typeString": "uint128"
                                }
                              },
                              "id": 943,
                              "nodeType": "ExpressionStatement",
                              "src": "6359:51:7"
                            },
                            {
                              "assignments": [
                                945
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 945,
                                  "mutability": "mutable",
                                  "name": "amountToTransfer",
                                  "nameLocation": "6423:16:7",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 966,
                                  "src": "6415:24:7",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint128",
                                    "typeString": "uint128"
                                  },
                                  "typeName": {
                                    "id": 944,
                                    "name": "uint128",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "6415:7:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint128",
                                      "typeString": "uint128"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 950,
                              "initialValue": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 946,
                                    "name": "_swaps",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 398,
                                    "src": "6442:6:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint64_$_t_struct$_Swap_$419_storage_$",
                                      "typeString": "mapping(uint64 => struct TamagoSwap.Swap storage ref)"
                                    }
                                  },
                                  "id": 948,
                                  "indexExpression": {
                                    "id": 947,
                                    "name": "swapId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 815,
                                    "src": "6449:6:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint64",
                                      "typeString": "uint64"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "6442:14:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Swap_$419_storage",
                                    "typeString": "struct TamagoSwap.Swap storage ref"
                                  }
                                },
                                "id": 949,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "secondUserEtherValue",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 418,
                                "src": "6442:35:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint128",
                                  "typeString": "uint128"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "6415:62:7"
                            },
                            {
                              "expression": {
                                "id": 956,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 951,
                                      "name": "_swaps",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 398,
                                      "src": "6482:6:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_uint64_$_t_struct$_Swap_$419_storage_$",
                                        "typeString": "mapping(uint64 => struct TamagoSwap.Swap storage ref)"
                                      }
                                    },
                                    "id": 953,
                                    "indexExpression": {
                                      "id": 952,
                                      "name": "swapId",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 815,
                                      "src": "6489:6:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint64",
                                        "typeString": "uint64"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "6482:14:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Swap_$419_storage",
                                      "typeString": "struct TamagoSwap.Swap storage ref"
                                    }
                                  },
                                  "id": 954,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "secondUserEtherValue",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 418,
                                  "src": "6482:35:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint128",
                                    "typeString": "uint128"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "hexValue": "30",
                                  "id": 955,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "6520:1:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "6482:39:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint128",
                                  "typeString": "uint128"
                                }
                              },
                              "id": 957,
                              "nodeType": "ExpressionStatement",
                              "src": "6482:39:7"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 963,
                                    "name": "amountToTransfer",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 945,
                                    "src": "6560:16:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint128",
                                      "typeString": "uint128"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint128",
                                      "typeString": "uint128"
                                    }
                                  ],
                                  "expression": {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 958,
                                        "name": "_swaps",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 398,
                                        "src": "6526:6:7",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_uint64_$_t_struct$_Swap_$419_storage_$",
                                          "typeString": "mapping(uint64 => struct TamagoSwap.Swap storage ref)"
                                        }
                                      },
                                      "id": 960,
                                      "indexExpression": {
                                        "id": 959,
                                        "name": "swapId",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 815,
                                        "src": "6533:6:7",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint64",
                                          "typeString": "uint64"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "6526:14:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Swap_$419_storage",
                                        "typeString": "struct TamagoSwap.Swap storage ref"
                                      }
                                    },
                                    "id": 961,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "initiator",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 400,
                                    "src": "6526:24:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  },
                                  "id": 962,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "transfer",
                                  "nodeType": "MemberAccess",
                                  "src": "6526:33:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                                    "typeString": "function (uint256)"
                                  }
                                },
                                "id": 964,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6526:51:7",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 965,
                              "nodeType": "ExpressionStatement",
                              "src": "6526:51:7"
                            }
                          ]
                        }
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "expression": {
                                "baseExpression": {
                                  "id": 969,
                                  "name": "_swaps",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 398,
                                  "src": "6604:6:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint64_$_t_struct$_Swap_$419_storage_$",
                                    "typeString": "mapping(uint64 => struct TamagoSwap.Swap storage ref)"
                                  }
                                },
                                "id": 971,
                                "indexExpression": {
                                  "id": 970,
                                  "name": "swapId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 815,
                                  "src": "6611:6:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint64",
                                    "typeString": "uint64"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "6604:14:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Swap_$419_storage",
                                  "typeString": "struct TamagoSwap.Swap storage ref"
                                }
                              },
                              "id": 972,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "initiator",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 400,
                              "src": "6604:24:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "expression": {
                                "baseExpression": {
                                  "id": 973,
                                  "name": "_swaps",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 398,
                                  "src": "6630:6:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint64_$_t_struct$_Swap_$419_storage_$",
                                    "typeString": "mapping(uint64 => struct TamagoSwap.Swap storage ref)"
                                  }
                                },
                                "id": 975,
                                "indexExpression": {
                                  "id": 974,
                                  "name": "swapId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 815,
                                  "src": "6637:6:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint64",
                                    "typeString": "uint64"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "6630:14:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Swap_$419_storage",
                                  "typeString": "struct TamagoSwap.Swap storage ref"
                                }
                              },
                              "id": 976,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "secondUser",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 408,
                              "src": "6630:25:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "id": 977,
                              "name": "swapId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 815,
                              "src": "6657:6:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              }
                            ],
                            "id": 968,
                            "name": "SwapExecuted",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 427,
                            "src": "6591:12:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint64_$returns$__$",
                              "typeString": "function (address,address,uint64)"
                            }
                          },
                          "id": 978,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6591:73:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 979,
                        "nodeType": "EmitStatement",
                        "src": "6586:78:7"
                      },
                      {
                        "expression": {
                          "id": 983,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "delete",
                          "prefix": true,
                          "src": "6669:21:7",
                          "subExpression": {
                            "baseExpression": {
                              "id": 980,
                              "name": "_swaps",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 398,
                              "src": "6676:6:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint64_$_t_struct$_Swap_$419_storage_$",
                                "typeString": "mapping(uint64 => struct TamagoSwap.Swap storage ref)"
                              }
                            },
                            "id": 982,
                            "indexExpression": {
                              "id": 981,
                              "name": "swapId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 815,
                              "src": "6683:6:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "6676:14:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Swap_$419_storage",
                              "typeString": "struct TamagoSwap.Swap storage ref"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 984,
                        "nodeType": "ExpressionStatement",
                        "src": "6669:21:7"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 813,
                    "nodeType": "StructuredDocumentation",
                    "src": "4988:282:7",
                    "text": " @dev Swap initiator accepts the swap (NFTs proposed by the second user).\n      Executeds the swap - transfers NFTs from TamagoSwap to the participating users.\n      Callable only by swap initiator.\n @param swapId ID of the swap that the initator wants to execute"
                  },
                  "functionSelector": "7500f85c",
                  "id": 986,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "arguments": [
                        {
                          "id": 818,
                          "name": "swapId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 815,
                          "src": "5330:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        }
                      ],
                      "id": 819,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 817,
                        "name": "onlyInitiator",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 509,
                        "src": "5316:13:7"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "5316:21:7"
                    }
                  ],
                  "name": "acceptSwap",
                  "nameLocation": "5281:10:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 816,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 815,
                        "mutability": "mutable",
                        "name": "swapId",
                        "nameLocation": "5299:6:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 986,
                        "src": "5292:13:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        "typeName": {
                          "id": 814,
                          "name": "uint64",
                          "nodeType": "ElementaryTypeName",
                          "src": "5292:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5291:15:7"
                  },
                  "returnParameters": {
                    "id": 820,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5338:0:7"
                  },
                  "scope": 1239,
                  "src": "5272:1422:7",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1143,
                    "nodeType": "Block",
                    "src": "6942:1228:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 1007,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                "id": 999,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 993,
                                      "name": "_swaps",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 398,
                                      "src": "6958:6:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_uint64_$_t_struct$_Swap_$419_storage_$",
                                        "typeString": "mapping(uint64 => struct TamagoSwap.Swap storage ref)"
                                      }
                                    },
                                    "id": 995,
                                    "indexExpression": {
                                      "id": 994,
                                      "name": "swapId",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 989,
                                      "src": "6965:6:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint64",
                                        "typeString": "uint64"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "6958:14:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Swap_$419_storage",
                                      "typeString": "struct TamagoSwap.Swap storage ref"
                                    }
                                  },
                                  "id": 996,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "initiator",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 400,
                                  "src": "6958:24:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "expression": {
                                    "id": 997,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "6986:3:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 998,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "6986:10:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "6958:38:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "||",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                "id": 1006,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 1000,
                                      "name": "_swaps",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 398,
                                      "src": "7000:6:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_uint64_$_t_struct$_Swap_$419_storage_$",
                                        "typeString": "mapping(uint64 => struct TamagoSwap.Swap storage ref)"
                                      }
                                    },
                                    "id": 1002,
                                    "indexExpression": {
                                      "id": 1001,
                                      "name": "swapId",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 989,
                                      "src": "7007:6:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint64",
                                        "typeString": "uint64"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "7000:14:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Swap_$419_storage",
                                      "typeString": "struct TamagoSwap.Swap storage ref"
                                    }
                                  },
                                  "id": 1003,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "secondUser",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 408,
                                  "src": "7000:25:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "expression": {
                                    "id": 1004,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "7029:3:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 1005,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "7029:10:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "7000:39:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "6958:81:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "54616d61676f537761703a2043616e27742063616e63656c20737761702c206d7573742062652073776170207061727469636970616e74",
                              "id": 1008,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7044:57:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_953728946f4dd7c915837ecb7b08bc74f9ce9ef91eccfc26f01991f60f6fad9f",
                                "typeString": "literal_string \"TamagoSwap: Can't cancel swap, must be swap participant\""
                              },
                              "value": "TamagoSwap: Can't cancel swap, must be swap participant"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_953728946f4dd7c915837ecb7b08bc74f9ce9ef91eccfc26f01991f60f6fad9f",
                                "typeString": "literal_string \"TamagoSwap: Can't cancel swap, must be swap participant\""
                              }
                            ],
                            "id": 992,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "6946:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1009,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6946:159:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1010,
                        "nodeType": "ExpressionStatement",
                        "src": "6946:159:7"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 1014,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "7174:4:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_TamagoSwap_$1239",
                                    "typeString": "contract TamagoSwap"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_TamagoSwap_$1239",
                                    "typeString": "contract TamagoSwap"
                                  }
                                ],
                                "id": 1013,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "7166:7:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1012,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "7166:7:7",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1015,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7166:13:7",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "baseExpression": {
                                  "id": 1016,
                                  "name": "_swaps",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 398,
                                  "src": "7184:6:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint64_$_t_struct$_Swap_$419_storage_$",
                                    "typeString": "mapping(uint64 => struct TamagoSwap.Swap storage ref)"
                                  }
                                },
                                "id": 1018,
                                "indexExpression": {
                                  "id": 1017,
                                  "name": "swapId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 989,
                                  "src": "7191:6:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint64",
                                    "typeString": "uint64"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "7184:14:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Swap_$419_storage",
                                  "typeString": "struct TamagoSwap.Swap storage ref"
                                }
                              },
                              "id": 1019,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "initiator",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 400,
                              "src": "7184:24:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "expression": {
                                "baseExpression": {
                                  "id": 1020,
                                  "name": "_swaps",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 398,
                                  "src": "7213:6:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint64_$_t_struct$_Swap_$419_storage_$",
                                    "typeString": "mapping(uint64 => struct TamagoSwap.Swap storage ref)"
                                  }
                                },
                                "id": 1022,
                                "indexExpression": {
                                  "id": 1021,
                                  "name": "swapId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 989,
                                  "src": "7220:6:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint64",
                                    "typeString": "uint64"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "7213:14:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Swap_$419_storage",
                                  "typeString": "struct TamagoSwap.Swap storage ref"
                                }
                              },
                              "id": 1023,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "initiatorNftAddresses",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 403,
                              "src": "7213:36:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            {
                              "expression": {
                                "baseExpression": {
                                  "id": 1024,
                                  "name": "_swaps",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 398,
                                  "src": "7254:6:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint64_$_t_struct$_Swap_$419_storage_$",
                                    "typeString": "mapping(uint64 => struct TamagoSwap.Swap storage ref)"
                                  }
                                },
                                "id": 1026,
                                "indexExpression": {
                                  "id": 1025,
                                  "name": "swapId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 989,
                                  "src": "7261:6:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint64",
                                    "typeString": "uint64"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "7254:14:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Swap_$419_storage",
                                  "typeString": "struct TamagoSwap.Swap storage ref"
                                }
                              },
                              "id": 1027,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "initiatorNftIds",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 406,
                              "src": "7254:30:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                "typeString": "uint256[] storage ref"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              },
                              {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                "typeString": "uint256[] storage ref"
                              }
                            ],
                            "id": 1011,
                            "name": "safeMultipleTransfersFrom",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1183,
                            "src": "7136:25:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
                              "typeString": "function (address,address,address[] memory,uint256[] memory)"
                            }
                          },
                          "id": 1028,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7136:152:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1029,
                        "nodeType": "ExpressionStatement",
                        "src": "7136:152:7"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1036,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "expression": {
                                "baseExpression": {
                                  "id": 1030,
                                  "name": "_swaps",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 398,
                                  "src": "7296:6:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint64_$_t_struct$_Swap_$419_storage_$",
                                    "typeString": "mapping(uint64 => struct TamagoSwap.Swap storage ref)"
                                  }
                                },
                                "id": 1032,
                                "indexExpression": {
                                  "id": 1031,
                                  "name": "swapId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 989,
                                  "src": "7303:6:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint64",
                                    "typeString": "uint64"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "7296:14:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Swap_$419_storage",
                                  "typeString": "struct TamagoSwap.Swap storage ref"
                                }
                              },
                              "id": 1033,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "secondUserNftAddresses",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 411,
                              "src": "7296:37:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 1034,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "7296:44:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 1035,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7344:1:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "7296:49:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1057,
                        "nodeType": "IfStatement",
                        "src": "7293:254:7",
                        "trueBody": {
                          "id": 1056,
                          "nodeType": "Block",
                          "src": "7347:200:7",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "id": 1040,
                                        "name": "this",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -28,
                                        "src": "7421:4:7",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_TamagoSwap_$1239",
                                          "typeString": "contract TamagoSwap"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_TamagoSwap_$1239",
                                          "typeString": "contract TamagoSwap"
                                        }
                                      ],
                                      "id": 1039,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "7413:7:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 1038,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "7413:7:7",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 1041,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "7413:13:7",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 1042,
                                        "name": "_swaps",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 398,
                                        "src": "7432:6:7",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_uint64_$_t_struct$_Swap_$419_storage_$",
                                          "typeString": "mapping(uint64 => struct TamagoSwap.Swap storage ref)"
                                        }
                                      },
                                      "id": 1044,
                                      "indexExpression": {
                                        "id": 1043,
                                        "name": "swapId",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 989,
                                        "src": "7439:6:7",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint64",
                                          "typeString": "uint64"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "7432:14:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Swap_$419_storage",
                                        "typeString": "struct TamagoSwap.Swap storage ref"
                                      }
                                    },
                                    "id": 1045,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "secondUser",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 408,
                                    "src": "7432:25:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 1046,
                                        "name": "_swaps",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 398,
                                        "src": "7463:6:7",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_uint64_$_t_struct$_Swap_$419_storage_$",
                                          "typeString": "mapping(uint64 => struct TamagoSwap.Swap storage ref)"
                                        }
                                      },
                                      "id": 1048,
                                      "indexExpression": {
                                        "id": 1047,
                                        "name": "swapId",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 989,
                                        "src": "7470:6:7",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint64",
                                          "typeString": "uint64"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "7463:14:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Swap_$419_storage",
                                        "typeString": "struct TamagoSwap.Swap storage ref"
                                      }
                                    },
                                    "id": 1049,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "secondUserNftAddresses",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 411,
                                    "src": "7463:37:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                      "typeString": "address[] storage ref"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 1050,
                                        "name": "_swaps",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 398,
                                        "src": "7506:6:7",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_uint64_$_t_struct$_Swap_$419_storage_$",
                                          "typeString": "mapping(uint64 => struct TamagoSwap.Swap storage ref)"
                                        }
                                      },
                                      "id": 1052,
                                      "indexExpression": {
                                        "id": 1051,
                                        "name": "swapId",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 989,
                                        "src": "7513:6:7",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint64",
                                          "typeString": "uint64"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "7506:14:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Swap_$419_storage",
                                        "typeString": "struct TamagoSwap.Swap storage ref"
                                      }
                                    },
                                    "id": 1053,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "secondUserNftIds",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 414,
                                    "src": "7506:31:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                      "typeString": "uint256[] storage ref"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    },
                                    {
                                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                      "typeString": "address[] storage ref"
                                    },
                                    {
                                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                      "typeString": "uint256[] storage ref"
                                    }
                                  ],
                                  "id": 1037,
                                  "name": "safeMultipleTransfersFrom",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1183,
                                  "src": "7382:25:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
                                    "typeString": "function (address,address,address[] memory,uint256[] memory)"
                                  }
                                },
                                "id": 1054,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7382:160:7",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1055,
                              "nodeType": "ExpressionStatement",
                              "src": "7382:160:7"
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          },
                          "id": 1063,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 1058,
                                "name": "_swaps",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 398,
                                "src": "7555:6:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint64_$_t_struct$_Swap_$419_storage_$",
                                  "typeString": "mapping(uint64 => struct TamagoSwap.Swap storage ref)"
                                }
                              },
                              "id": 1060,
                              "indexExpression": {
                                "id": 1059,
                                "name": "swapId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 989,
                                "src": "7562:6:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint64",
                                  "typeString": "uint64"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "7555:14:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Swap_$419_storage",
                                "typeString": "struct TamagoSwap.Swap storage ref"
                              }
                            },
                            "id": 1061,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "initiatorEtherValue",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 416,
                            "src": "7555:34:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 1062,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7593:1:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "7555:39:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1094,
                        "nodeType": "IfStatement",
                        "src": "7551:270:7",
                        "trueBody": {
                          "id": 1093,
                          "nodeType": "Block",
                          "src": "7596:225:7",
                          "statements": [
                            {
                              "expression": {
                                "id": 1069,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 1064,
                                  "name": "_etherLocked",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 391,
                                  "src": "7601:12:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint128",
                                    "typeString": "uint128"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "-=",
                                "rightHandSide": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 1065,
                                      "name": "_swaps",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 398,
                                      "src": "7617:6:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_uint64_$_t_struct$_Swap_$419_storage_$",
                                        "typeString": "mapping(uint64 => struct TamagoSwap.Swap storage ref)"
                                      }
                                    },
                                    "id": 1067,
                                    "indexExpression": {
                                      "id": 1066,
                                      "name": "swapId",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 989,
                                      "src": "7624:6:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint64",
                                        "typeString": "uint64"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "7617:14:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Swap_$419_storage",
                                      "typeString": "struct TamagoSwap.Swap storage ref"
                                    }
                                  },
                                  "id": 1068,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "initiatorEtherValue",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 416,
                                  "src": "7617:34:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint128",
                                    "typeString": "uint128"
                                  }
                                },
                                "src": "7601:50:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint128",
                                  "typeString": "uint128"
                                }
                              },
                              "id": 1070,
                              "nodeType": "ExpressionStatement",
                              "src": "7601:50:7"
                            },
                            {
                              "assignments": [
                                1072
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 1072,
                                  "mutability": "mutable",
                                  "name": "amountToTransfer",
                                  "nameLocation": "7664:16:7",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 1093,
                                  "src": "7656:24:7",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint128",
                                    "typeString": "uint128"
                                  },
                                  "typeName": {
                                    "id": 1071,
                                    "name": "uint128",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "7656:7:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint128",
                                      "typeString": "uint128"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 1077,
                              "initialValue": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 1073,
                                    "name": "_swaps",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 398,
                                    "src": "7683:6:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint64_$_t_struct$_Swap_$419_storage_$",
                                      "typeString": "mapping(uint64 => struct TamagoSwap.Swap storage ref)"
                                    }
                                  },
                                  "id": 1075,
                                  "indexExpression": {
                                    "id": 1074,
                                    "name": "swapId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 989,
                                    "src": "7690:6:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint64",
                                      "typeString": "uint64"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "7683:14:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Swap_$419_storage",
                                    "typeString": "struct TamagoSwap.Swap storage ref"
                                  }
                                },
                                "id": 1076,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "initiatorEtherValue",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 416,
                                "src": "7683:34:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint128",
                                  "typeString": "uint128"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "7656:61:7"
                            },
                            {
                              "expression": {
                                "id": 1083,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 1078,
                                      "name": "_swaps",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 398,
                                      "src": "7722:6:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_uint64_$_t_struct$_Swap_$419_storage_$",
                                        "typeString": "mapping(uint64 => struct TamagoSwap.Swap storage ref)"
                                      }
                                    },
                                    "id": 1080,
                                    "indexExpression": {
                                      "id": 1079,
                                      "name": "swapId",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 989,
                                      "src": "7729:6:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint64",
                                        "typeString": "uint64"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "7722:14:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Swap_$419_storage",
                                      "typeString": "struct TamagoSwap.Swap storage ref"
                                    }
                                  },
                                  "id": 1081,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "initiatorEtherValue",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 416,
                                  "src": "7722:34:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint128",
                                    "typeString": "uint128"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "hexValue": "30",
                                  "id": 1082,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "7759:1:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "7722:38:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint128",
                                  "typeString": "uint128"
                                }
                              },
                              "id": 1084,
                              "nodeType": "ExpressionStatement",
                              "src": "7722:38:7"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 1090,
                                    "name": "amountToTransfer",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1072,
                                    "src": "7799:16:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint128",
                                      "typeString": "uint128"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint128",
                                      "typeString": "uint128"
                                    }
                                  ],
                                  "expression": {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 1085,
                                        "name": "_swaps",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 398,
                                        "src": "7765:6:7",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_uint64_$_t_struct$_Swap_$419_storage_$",
                                          "typeString": "mapping(uint64 => struct TamagoSwap.Swap storage ref)"
                                        }
                                      },
                                      "id": 1087,
                                      "indexExpression": {
                                        "id": 1086,
                                        "name": "swapId",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 989,
                                        "src": "7772:6:7",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint64",
                                          "typeString": "uint64"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "7765:14:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Swap_$419_storage",
                                        "typeString": "struct TamagoSwap.Swap storage ref"
                                      }
                                    },
                                    "id": 1088,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "initiator",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 400,
                                    "src": "7765:24:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  },
                                  "id": 1089,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "transfer",
                                  "nodeType": "MemberAccess",
                                  "src": "7765:33:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                                    "typeString": "function (uint256)"
                                  }
                                },
                                "id": 1091,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7765:51:7",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1092,
                              "nodeType": "ExpressionStatement",
                              "src": "7765:51:7"
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          },
                          "id": 1100,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 1095,
                                "name": "_swaps",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 398,
                                "src": "7828:6:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint64_$_t_struct$_Swap_$419_storage_$",
                                  "typeString": "mapping(uint64 => struct TamagoSwap.Swap storage ref)"
                                }
                              },
                              "id": 1097,
                              "indexExpression": {
                                "id": 1096,
                                "name": "swapId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 989,
                                "src": "7835:6:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint64",
                                  "typeString": "uint64"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "7828:14:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Swap_$419_storage",
                                "typeString": "struct TamagoSwap.Swap storage ref"
                              }
                            },
                            "id": 1098,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "secondUserEtherValue",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 418,
                            "src": "7828:35:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 1099,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7867:1:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "7828:40:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1131,
                        "nodeType": "IfStatement",
                        "src": "7824:275:7",
                        "trueBody": {
                          "id": 1130,
                          "nodeType": "Block",
                          "src": "7870:229:7",
                          "statements": [
                            {
                              "expression": {
                                "id": 1106,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 1101,
                                  "name": "_etherLocked",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 391,
                                  "src": "7875:12:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint128",
                                    "typeString": "uint128"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "-=",
                                "rightHandSide": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 1102,
                                      "name": "_swaps",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 398,
                                      "src": "7891:6:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_uint64_$_t_struct$_Swap_$419_storage_$",
                                        "typeString": "mapping(uint64 => struct TamagoSwap.Swap storage ref)"
                                      }
                                    },
                                    "id": 1104,
                                    "indexExpression": {
                                      "id": 1103,
                                      "name": "swapId",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 989,
                                      "src": "7898:6:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint64",
                                        "typeString": "uint64"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "7891:14:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Swap_$419_storage",
                                      "typeString": "struct TamagoSwap.Swap storage ref"
                                    }
                                  },
                                  "id": 1105,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "secondUserEtherValue",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 418,
                                  "src": "7891:35:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint128",
                                    "typeString": "uint128"
                                  }
                                },
                                "src": "7875:51:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint128",
                                  "typeString": "uint128"
                                }
                              },
                              "id": 1107,
                              "nodeType": "ExpressionStatement",
                              "src": "7875:51:7"
                            },
                            {
                              "assignments": [
                                1109
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 1109,
                                  "mutability": "mutable",
                                  "name": "amountToTransfer",
                                  "nameLocation": "7939:16:7",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 1130,
                                  "src": "7931:24:7",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint128",
                                    "typeString": "uint128"
                                  },
                                  "typeName": {
                                    "id": 1108,
                                    "name": "uint128",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "7931:7:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint128",
                                      "typeString": "uint128"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 1114,
                              "initialValue": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 1110,
                                    "name": "_swaps",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 398,
                                    "src": "7958:6:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint64_$_t_struct$_Swap_$419_storage_$",
                                      "typeString": "mapping(uint64 => struct TamagoSwap.Swap storage ref)"
                                    }
                                  },
                                  "id": 1112,
                                  "indexExpression": {
                                    "id": 1111,
                                    "name": "swapId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 989,
                                    "src": "7965:6:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint64",
                                      "typeString": "uint64"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "7958:14:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Swap_$419_storage",
                                    "typeString": "struct TamagoSwap.Swap storage ref"
                                  }
                                },
                                "id": 1113,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "secondUserEtherValue",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 418,
                                "src": "7958:35:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint128",
                                  "typeString": "uint128"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "7931:62:7"
                            },
                            {
                              "expression": {
                                "id": 1120,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 1115,
                                      "name": "_swaps",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 398,
                                      "src": "7998:6:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_uint64_$_t_struct$_Swap_$419_storage_$",
                                        "typeString": "mapping(uint64 => struct TamagoSwap.Swap storage ref)"
                                      }
                                    },
                                    "id": 1117,
                                    "indexExpression": {
                                      "id": 1116,
                                      "name": "swapId",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 989,
                                      "src": "8005:6:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint64",
                                        "typeString": "uint64"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "7998:14:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Swap_$419_storage",
                                      "typeString": "struct TamagoSwap.Swap storage ref"
                                    }
                                  },
                                  "id": 1118,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "secondUserEtherValue",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 418,
                                  "src": "7998:35:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint128",
                                    "typeString": "uint128"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "hexValue": "30",
                                  "id": 1119,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "8036:1:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "7998:39:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint128",
                                  "typeString": "uint128"
                                }
                              },
                              "id": 1121,
                              "nodeType": "ExpressionStatement",
                              "src": "7998:39:7"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 1127,
                                    "name": "amountToTransfer",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1109,
                                    "src": "8077:16:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint128",
                                      "typeString": "uint128"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint128",
                                      "typeString": "uint128"
                                    }
                                  ],
                                  "expression": {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 1122,
                                        "name": "_swaps",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 398,
                                        "src": "8042:6:7",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_uint64_$_t_struct$_Swap_$419_storage_$",
                                          "typeString": "mapping(uint64 => struct TamagoSwap.Swap storage ref)"
                                        }
                                      },
                                      "id": 1124,
                                      "indexExpression": {
                                        "id": 1123,
                                        "name": "swapId",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 989,
                                        "src": "8049:6:7",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint64",
                                          "typeString": "uint64"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "8042:14:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Swap_$419_storage",
                                        "typeString": "struct TamagoSwap.Swap storage ref"
                                      }
                                    },
                                    "id": 1125,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "secondUser",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 408,
                                    "src": "8042:25:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  },
                                  "id": 1126,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "transfer",
                                  "nodeType": "MemberAccess",
                                  "src": "8042:34:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                                    "typeString": "function (uint256)"
                                  }
                                },
                                "id": 1128,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "8042:52:7",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1129,
                              "nodeType": "ExpressionStatement",
                              "src": "8042:52:7"
                            }
                          ]
                        }
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1133,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "8121:3:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1134,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "8121:10:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1135,
                              "name": "swapId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 989,
                              "src": "8133:6:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              }
                            ],
                            "id": 1132,
                            "name": "SwapCanceled",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 433,
                            "src": "8108:12:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint64_$returns$__$",
                              "typeString": "function (address,uint64)"
                            }
                          },
                          "id": 1136,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8108:32:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1137,
                        "nodeType": "EmitStatement",
                        "src": "8103:37:7"
                      },
                      {
                        "expression": {
                          "id": 1141,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "delete",
                          "prefix": true,
                          "src": "8145:21:7",
                          "subExpression": {
                            "baseExpression": {
                              "id": 1138,
                              "name": "_swaps",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 398,
                              "src": "8152:6:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint64_$_t_struct$_Swap_$419_storage_$",
                                "typeString": "mapping(uint64 => struct TamagoSwap.Swap storage ref)"
                              }
                            },
                            "id": 1140,
                            "indexExpression": {
                              "id": 1139,
                              "name": "swapId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 989,
                              "src": "8159:6:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "8152:14:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Swap_$419_storage",
                              "typeString": "struct TamagoSwap.Swap storage ref"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1142,
                        "nodeType": "ExpressionStatement",
                        "src": "8145:21:7"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 987,
                    "nodeType": "StructuredDocumentation",
                    "src": "6697:199:7",
                    "text": " @dev Returns NFTs from TamagoSwap to swap initator.\n      Callable only if second user hasn't yet added NFTs.\n @param swapId ID of the swap that the swap participants want to cancel"
                  },
                  "functionSelector": "0cce448d",
                  "id": 1144,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "cancelSwap",
                  "nameLocation": "6907:10:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 990,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 989,
                        "mutability": "mutable",
                        "name": "swapId",
                        "nameLocation": "6925:6:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1144,
                        "src": "6918:13:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        "typeName": {
                          "id": 988,
                          "name": "uint64",
                          "nodeType": "ElementaryTypeName",
                          "src": "6918:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6917:15:7"
                  },
                  "returnParameters": {
                    "id": 991,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "6942:0:7"
                  },
                  "scope": 1239,
                  "src": "6898:1272:7",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1182,
                    "nodeType": "Block",
                    "src": "8318:116:7",
                    "statements": [
                      {
                        "body": {
                          "id": 1180,
                          "nodeType": "Block",
                          "src": "8363:68:7",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 1169,
                                    "name": "from",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1146,
                                    "src": "8385:4:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 1170,
                                    "name": "to",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1148,
                                    "src": "8391:2:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "baseExpression": {
                                      "id": 1171,
                                      "name": "nftAddresses",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1151,
                                      "src": "8395:12:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                        "typeString": "address[] memory"
                                      }
                                    },
                                    "id": 1173,
                                    "indexExpression": {
                                      "id": 1172,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1158,
                                      "src": "8408:1:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "8395:15:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "baseExpression": {
                                      "id": 1174,
                                      "name": "nftIds",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1154,
                                      "src": "8412:6:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                        "typeString": "uint256[] memory"
                                      }
                                    },
                                    "id": 1176,
                                    "indexExpression": {
                                      "id": 1175,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1158,
                                      "src": "8419:1:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "8412:9:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "hexValue": "",
                                    "id": 1177,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "8423:2:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                      "typeString": "literal_string \"\""
                                    },
                                    "value": ""
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                      "typeString": "literal_string \"\""
                                    }
                                  ],
                                  "id": 1168,
                                  "name": "safeTransferFrom",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1207,
                                  "src": "8368:16:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                                    "typeString": "function (address,address,address,uint256,bytes memory)"
                                  }
                                },
                                "id": 1178,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "8368:58:7",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1179,
                              "nodeType": "ExpressionStatement",
                              "src": "8368:58:7"
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1164,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1161,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1158,
                            "src": "8340:1:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "id": 1162,
                              "name": "nftIds",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1154,
                              "src": "8344:6:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            "id": 1163,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "8344:13:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "8340:17:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1181,
                        "initializationExpression": {
                          "assignments": [
                            1158
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 1158,
                              "mutability": "mutable",
                              "name": "i",
                              "nameLocation": "8335:1:7",
                              "nodeType": "VariableDeclaration",
                              "scope": 1181,
                              "src": "8327:9:7",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 1157,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "8327:7:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 1160,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 1159,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8337:1:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "8327:11:7"
                        },
                        "loopExpression": {
                          "expression": {
                            "id": 1166,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "8359:3:7",
                            "subExpression": {
                              "id": 1165,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1158,
                              "src": "8359:1:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1167,
                          "nodeType": "ExpressionStatement",
                          "src": "8359:3:7"
                        },
                        "nodeType": "ForStatement",
                        "src": "8322:109:7"
                      }
                    ]
                  },
                  "id": 1183,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "safeMultipleTransfersFrom",
                  "nameLocation": "8182:25:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1155,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1146,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "8219:4:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1183,
                        "src": "8211:12:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1145,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "8211:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1148,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "8235:2:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1183,
                        "src": "8227:10:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1147,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "8227:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1151,
                        "mutability": "mutable",
                        "name": "nftAddresses",
                        "nameLocation": "8258:12:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1183,
                        "src": "8241:29:7",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 1149,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8241:7:7",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 1150,
                          "nodeType": "ArrayTypeName",
                          "src": "8241:9:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                            "typeString": "address[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1154,
                        "mutability": "mutable",
                        "name": "nftIds",
                        "nameLocation": "8291:6:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1183,
                        "src": "8274:23:7",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 1152,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "8274:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1153,
                          "nodeType": "ArrayTypeName",
                          "src": "8274:9:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                            "typeString": "uint256[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "8207:93:7"
                  },
                  "returnParameters": {
                    "id": 1156,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "8318:0:7"
                  },
                  "scope": 1239,
                  "src": "8173:261:7",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1206,
                    "nodeType": "Block",
                    "src": "8578:74:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1200,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1185,
                              "src": "8622:4:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1201,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1187,
                              "src": "8628:2:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1202,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1191,
                              "src": "8632:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 1203,
                              "name": "_data",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1193,
                              "src": "8641:5:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 1197,
                                  "name": "tokenAddress",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1189,
                                  "src": "8591:12:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 1196,
                                "name": "IERC721",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 298,
                                "src": "8583:7:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC721_$298_$",
                                  "typeString": "type(contract IERC721)"
                                }
                              },
                              "id": 1198,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8583:21:7",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC721_$298",
                                "typeString": "contract IERC721"
                              }
                            },
                            "id": 1199,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeTransferFrom",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 243,
                            "src": "8583:38:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                              "typeString": "function (address,address,uint256,bytes memory) external"
                            }
                          },
                          "id": 1204,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8583:64:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1205,
                        "nodeType": "ExpressionStatement",
                        "src": "8583:64:7"
                      }
                    ]
                  },
                  "id": 1207,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "safeTransferFrom",
                  "nameLocation": "8446:16:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1194,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1185,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "8474:4:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1207,
                        "src": "8466:12:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1184,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "8466:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1187,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "8490:2:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1207,
                        "src": "8482:10:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1186,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "8482:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1189,
                        "mutability": "mutable",
                        "name": "tokenAddress",
                        "nameLocation": "8504:12:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1207,
                        "src": "8496:20:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1188,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "8496:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1191,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nameLocation": "8528:7:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1207,
                        "src": "8520:15:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1190,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "8520:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1193,
                        "mutability": "mutable",
                        "name": "_data",
                        "nameLocation": "8552:5:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1207,
                        "src": "8539:18:7",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1192,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "8539:5:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "8462:98:7"
                  },
                  "returnParameters": {
                    "id": 1195,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "8578:0:7"
                  },
                  "scope": 1239,
                  "src": "8437:215:7",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1237,
                    "nodeType": "Block",
                    "src": "8730:145:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 1220,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1215,
                                "name": "recipient",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1209,
                                "src": "8742:9:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 1218,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "8763:1:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 1217,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "8755:7:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 1216,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "8755:7:7",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 1219,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "8755:10:7",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "8742:23:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "537761704b6977693a207472616e7366657220746f20746865207a65726f2061646472657373",
                              "id": 1221,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8767:40:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_e4bc94dc7e0f6ea744b0216d3560bbacc55b7ae7dfd5b7d9106cd4b3fc41a6de",
                                "typeString": "literal_string \"SwapKiwi: transfer to the zero address\""
                              },
                              "value": "SwapKiwi: transfer to the zero address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_e4bc94dc7e0f6ea744b0216d3560bbacc55b7ae7dfd5b7d9106cd4b3fc41a6de",
                                "typeString": "literal_string \"SwapKiwi: transfer to the zero address\""
                              }
                            ],
                            "id": 1214,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "8734:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1222,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8734:74:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1223,
                        "nodeType": "ExpressionStatement",
                        "src": "8734:74:7"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 1233,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "id": 1229,
                                          "name": "this",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": -28,
                                          "src": "8841:4:7",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_TamagoSwap_$1239",
                                            "typeString": "contract TamagoSwap"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_contract$_TamagoSwap_$1239",
                                            "typeString": "contract TamagoSwap"
                                          }
                                        ],
                                        "id": 1228,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
                                        "src": "8833:7:7",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_address_$",
                                          "typeString": "type(address)"
                                        },
                                        "typeName": {
                                          "id": 1227,
                                          "name": "address",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "8833:7:7",
                                          "typeDescriptions": {}
                                        }
                                      },
                                      "id": 1230,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "8833:13:7",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "id": 1231,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "balance",
                                    "nodeType": "MemberAccess",
                                    "src": "8833:21:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "-",
                                  "rightExpression": {
                                    "id": 1232,
                                    "name": "_etherLocked",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 391,
                                    "src": "8857:12:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint128",
                                      "typeString": "uint128"
                                    }
                                  },
                                  "src": "8833:36:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 1234,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "8832:38:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 1224,
                              "name": "recipient",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1209,
                              "src": "8813:9:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "id": 1226,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "src": "8813:18:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 1235,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8813:58:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1236,
                        "nodeType": "ExpressionStatement",
                        "src": "8813:58:7"
                      }
                    ]
                  },
                  "functionSelector": "af933b57",
                  "id": 1238,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1212,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1211,
                        "name": "onlyOwner",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 46,
                        "src": "8720:9:7"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "8720:9:7"
                    }
                  ],
                  "name": "withdrawEther",
                  "nameLocation": "8670:13:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1210,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1209,
                        "mutability": "mutable",
                        "name": "recipient",
                        "nameLocation": "8700:9:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1238,
                        "src": "8684:25:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        "typeName": {
                          "id": 1208,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "8684:15:7",
                          "stateMutability": "payable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "8683:27:7"
                  },
                  "returnParameters": {
                    "id": 1213,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "8730:0:7"
                  },
                  "scope": 1239,
                  "src": "8661:214:7",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 1240,
              "src": "321:8556:7",
              "usedErrors": []
            }
          ],
          "src": "33:8844:7"
        },
        "id": 7
      }
    }
  }
}
